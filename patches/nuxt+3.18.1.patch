diff --git a/node_modules/nuxt/README.md b/node_modules/nuxt/README.md
index f57fa2f..904177e 100644
--- a/node_modules/nuxt/README.md
+++ b/node_modules/nuxt/README.md
@@ -6,8 +6,9 @@
   <a href="https://www.npmjs.com/package/nuxt"><img src="https://img.shields.io/npm/v/nuxt.svg?style=flat&colorA=18181B&colorB=28CF8D" alt="Version"></a>
   <a href="https://www.npmjs.com/package/nuxt"><img src="https://img.shields.io/npm/dm/nuxt.svg?style=flat&colorA=18181B&colorB=28CF8D" alt="Downloads"></a>
   <a href="https://github.com/nuxt/nuxt/tree/main/LICENSE"><img src="https://img.shields.io/github/license/nuxt/nuxt.svg?style=flat&colorA=18181B&colorB=28CF8D" alt="License"></a>
-  <a href="https://nuxt.com"><img src="https://img.shields.io/badge/Nuxt%20Docs-18181B?logo=nuxt.js" alt="Website"></a>
+  <a href="https://nuxt.com"><img src="https://img.shields.io/badge/Nuxt%20Docs-18181B?logo=nuxt" alt="Website"></a>
   <a href="https://chat.nuxt.dev"><img src="https://img.shields.io/badge/Nuxt%20Discord-18181B?logo=discord" alt="Discord"></a>
+  <a href="https://securityscorecards.dev/"><img src="https://api.securityscorecards.dev/projects/github.com/nuxt/nuxt/badge" alt="Nuxt openssf scorecard score"></a>
 </p>
 
 Nuxt is a free and open-source framework with an intuitive and extendable way to create type-safe, performant and production-grade full-stack web applications and websites with Vue.js.
@@ -32,7 +33,6 @@ It provides a number of features that make it easy to build fast, SEO-friendly,
 - üß© [Modules](#modules)
 - ‚ù§Ô∏è  [Contribute](#contribute)
 - üè† [Local Development](#local-development)
-- ‚õ∞Ô∏è [Nuxt 2](#nuxt-2)
 - üõü [Professional Support](#professional-support)
 - üîó [Follow Us](#follow-us)
 - ‚öñÔ∏è [License](#license)
@@ -44,7 +44,7 @@ It provides a number of features that make it easy to build fast, SEO-friendly,
 Use the following command to create a new starter project. This will create a starter project with all the necessary files and dependencies:
 
 ```bash
-npx nuxi@latest init <my-project>
+npm create nuxt@latest <my-project>
 ```
 
 > [!TIP]
@@ -109,7 +109,7 @@ Follow the docs to [Set Up Your Local Development Environment](https://nuxt.com/
 ## <a name="follow-us">üîó Follow Us</a>
 
 <p valign="center">
-  <a href="https://go.nuxt.com/discord"><img width="20px" src="https://github.com/nuxt/nuxt/tree/main/.github/assets/discord.svg" alt="Discord"></a>&nbsp;&nbsp;<a href="https://go.nuxt.com/x"><img width="20px" src="https://github.com/nuxt/nuxt/tree/main/.github/assets/twitter.svg" alt="Twitter"></a>&nbsp;&nbsp;<a href="https://go.nuxt.com/github"><img width="20px" src="https://github.com/nuxt/nuxt/tree/main/.github/assets/github.svg" alt="GitHub"></a>
+  <a href="https://go.nuxt.com/discord"><img width="20px" src="https://github.com/nuxt/nuxt/tree/main/.github/assets/discord.svg" alt="Discord"></a>&nbsp;&nbsp;<a href="https://go.nuxt.com/x"><img width="20px" src="https://github.com/nuxt/nuxt/tree/main/.github/assets/twitter.svg" alt="Twitter"></a>&nbsp;&nbsp;<a href="https://go.nuxt.com/github"><img width="20px" src="https://github.com/nuxt/nuxt/tree/main/.github/assets/github.svg" alt="GitHub"></a>&nbsp;&nbsp;<a href="https://go.nuxt.com/bluesky"><img width="20px" src="https://github.com/nuxt/nuxt/tree/main/.github/assets/bluesky.svg" alt="Bluesky"></a>
 </p>
 
 ## <a name="license">‚öñÔ∏è License</a>
diff --git a/node_modules/nuxt/app.d.ts b/node_modules/nuxt/app.d.ts
index 87a04c5..4e45355 100644
--- a/node_modules/nuxt/app.d.ts
+++ b/node_modules/nuxt/app.d.ts
@@ -1 +1 @@
-export * from './dist/app/index.js'
+export * from './dist/app/index'
diff --git a/node_modules/nuxt/app/defaults.d.ts b/node_modules/nuxt/app/defaults.d.ts
new file mode 100644
index 0000000..4099902
--- /dev/null
+++ b/node_modules/nuxt/app/defaults.d.ts
@@ -0,0 +1 @@
+export * from '../dist/app/defaults'
diff --git a/node_modules/nuxt/bin/nuxt.mjs b/node_modules/nuxt/bin/nuxt.mjs
index 7faab34..8c0237f 100755
--- a/node_modules/nuxt/bin/nuxt.mjs
+++ b/node_modules/nuxt/bin/nuxt.mjs
@@ -1,2 +1,2 @@
 #!/usr/bin/env node
-import 'nuxi/cli'
+import '@nuxt/cli/cli'
diff --git a/node_modules/nuxt/config.d.ts b/node_modules/nuxt/config.d.ts
index 3160b60..4033aae 100644
--- a/node_modules/nuxt/config.d.ts
+++ b/node_modules/nuxt/config.d.ts
@@ -1,5 +1,5 @@
-import type { NuxtConfig } from 'nuxt/schema'
 import type { ConfigLayerMeta, DefineConfig } from 'c12'
+import type { NuxtConfig } from 'nuxt/schema'
 
 export { NuxtConfig } from 'nuxt/schema'
 
diff --git a/node_modules/nuxt/dist/app/components/client-fallback.client.d.ts b/node_modules/nuxt/dist/app/components/client-fallback.client.d.ts
index 74bdc56..40924c6 100644
--- a/node_modules/nuxt/dist/app/components/client-fallback.client.d.ts
+++ b/node_modules/nuxt/dist/app/components/client-fallback.client.d.ts
@@ -1,7 +1,4 @@
 declare const _default: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
-    uid: {
-        type: StringConstructor;
-    };
     fallbackTag: {
         type: StringConstructor;
         default: () => string;
@@ -25,9 +22,6 @@ declare const _default: import("vue").DefineComponent<import("vue").ExtractPropT
 }> | import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
     [key: string]: any;
 }>[] | undefined, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "ssr-error"[], "ssr-error", import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
-    uid: {
-        type: StringConstructor;
-    };
     fallbackTag: {
         type: StringConstructor;
         default: () => string;
diff --git a/node_modules/nuxt/dist/app/components/client-fallback.client.js b/node_modules/nuxt/dist/app/components/client-fallback.client.js
index 2c5bcd5..1755b7e 100644
--- a/node_modules/nuxt/dist/app/components/client-fallback.client.js
+++ b/node_modules/nuxt/dist/app/components/client-fallback.client.js
@@ -1,12 +1,9 @@
-import { createElementBlock, defineComponent, onMounted, ref } from "vue";
+import { createElementBlock, defineComponent, onMounted, shallowRef, useId } from "vue";
 import { useState } from "../composables/state.js";
 export default defineComponent({
   name: "NuxtClientFallback",
   inheritAttrs: false,
   props: {
-    uid: {
-      type: String
-    },
     fallbackTag: {
       type: String,
       default: () => "div"
@@ -28,8 +25,8 @@ export default defineComponent({
   },
   emits: ["ssr-error"],
   setup(props, ctx) {
-    const mounted = ref(false);
-    const ssrFailed = useState(`${props.uid}`);
+    const mounted = shallowRef(false);
+    const ssrFailed = useState(useId());
     if (ssrFailed.value) {
       onMounted(() => {
         mounted.value = true;
diff --git a/node_modules/nuxt/dist/app/components/client-fallback.server.d.ts b/node_modules/nuxt/dist/app/components/client-fallback.server.d.ts
index 7eba9ec..d103379 100644
--- a/node_modules/nuxt/dist/app/components/client-fallback.server.d.ts
+++ b/node_modules/nuxt/dist/app/components/client-fallback.server.d.ts
@@ -1,7 +1,4 @@
 declare const NuxtClientFallbackServer: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
-    uid: {
-        type: StringConstructor;
-    };
     fallbackTag: {
         type: StringConstructor;
         default: () => string;
@@ -21,10 +18,10 @@ declare const NuxtClientFallbackServer: import("vue").DefineComponent<import("vu
         default: () => boolean;
     };
 }>, {
-    ssrFailed: import("vue").Ref<boolean, boolean>;
+    ssrFailed: import("vue").ShallowRef<boolean, boolean>;
     ssrVNodes: {
-        getBuffer(): import("./utils").SSRBuffer;
-        push(item: import("./utils").SSRBufferItem): void;
+        getBuffer(): import("./utils.js").SSRBuffer;
+        push(item: import("./utils.js").SSRBufferItem): void;
     };
 } | {
     ssrFailed: boolean;
@@ -32,9 +29,6 @@ declare const NuxtClientFallbackServer: import("vue").DefineComponent<import("vu
 }, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
     'ssr-error'(_error: unknown): true;
 }, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
-    uid: {
-        type: StringConstructor;
-    };
     fallbackTag: {
         type: StringConstructor;
         default: () => string;
diff --git a/node_modules/nuxt/dist/app/components/client-fallback.server.js b/node_modules/nuxt/dist/app/components/client-fallback.server.js
index 6f25ffd..dc93759 100644
--- a/node_modules/nuxt/dist/app/components/client-fallback.server.js
+++ b/node_modules/nuxt/dist/app/components/client-fallback.server.js
@@ -1,16 +1,12 @@
-import { defineComponent, getCurrentInstance, onErrorCaptured, ref } from "vue";
+import { defineComponent, getCurrentInstance, onErrorCaptured, shallowRef, useId } from "vue";
 import { ssrRenderAttrs, ssrRenderSlot, ssrRenderVNode } from "vue/server-renderer";
 import { isPromise } from "@vue/shared";
 import { useState } from "../composables/state.js";
-import { useNuxtApp } from "../nuxt.js";
 import { createBuffer } from "./utils.js";
 const NuxtClientFallbackServer = defineComponent({
   name: "NuxtClientFallback",
   inheritAttrs: false,
   props: {
-    uid: {
-      type: String
-    },
     fallbackTag: {
       type: String,
       default: () => "div"
@@ -35,11 +31,10 @@ const NuxtClientFallbackServer = defineComponent({
       return true;
     }
   },
-  async setup(props, ctx) {
+  async setup(_, ctx) {
     const vm = getCurrentInstance();
-    const ssrFailed = ref(false);
-    const nuxtApp = useNuxtApp();
-    const error = useState(`${props.uid}`);
+    const ssrFailed = shallowRef(false);
+    const error = useState(useId());
     onErrorCaptured((err) => {
       error.value = true;
       ssrFailed.value = true;
@@ -60,7 +55,7 @@ const NuxtClientFallbackServer = defineComponent({
       }
       return { ssrFailed, ssrVNodes };
     } catch (ssrError) {
-      nuxtApp.runWithContext(() => useState(`${props.uid}`, () => true));
+      error.value = true;
       ctx.emit("ssr-error", ssrError);
       return { ssrFailed: true, ssrVNodes: [] };
     }
diff --git a/node_modules/nuxt/dist/app/components/client-only.d.ts b/node_modules/nuxt/dist/app/components/client-only.d.ts
index 67550c7..57cc2c2 100644
--- a/node_modules/nuxt/dist/app/components/client-only.d.ts
+++ b/node_modules/nuxt/dist/app/components/client-only.d.ts
@@ -1,19 +1,26 @@
-import type { ComponentOptions, InjectionKey } from 'vue';
+import type { ComponentOptions, InjectionKey, SlotsType, VNode } from 'vue';
 export declare const clientOnlySymbol: InjectionKey<boolean>;
 declare const _default: import("vue").DefineComponent<{
-    fallback?: any;
     placeholder?: any;
-    fallbackTag?: any;
+    fallback?: any;
     placeholderTag?: any;
-}, (props: any) => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
+    fallbackTag?: any;
+}, () => VNode<import("vue").RendererNode, import("vue").RendererElement, {
     [key: string]: any;
-}> | import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
+}> | VNode<import("vue").RendererNode, import("vue").RendererElement, {
     [key: string]: any;
 }>[] | undefined, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{
-    fallback?: any;
     placeholder?: any;
-    fallbackTag?: any;
+    fallback?: any;
     placeholderTag?: any;
-}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+    fallbackTag?: any;
+}> & Readonly<{}>, {}, SlotsType<{
+    default?: () => VNode[];
+    /**
+     * Specify a content to be rendered on the server and displayed until `<ClientOnly>` is mounted in the browser.
+     */
+    fallback?: () => VNode[];
+    placeholder?: () => VNode[];
+}>, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
 export default _default;
 export declare function createClientOnly<T extends ComponentOptions>(component: T): any;
diff --git a/node_modules/nuxt/dist/app/components/client-only.js b/node_modules/nuxt/dist/app/components/client-only.js
index 692c623..19e76ad 100644
--- a/node_modules/nuxt/dist/app/components/client-only.js
+++ b/node_modules/nuxt/dist/app/components/client-only.js
@@ -1,15 +1,19 @@
-import { cloneVNode, createElementBlock, createStaticVNode, defineComponent, getCurrentInstance, h, onMounted, provide, ref } from "vue";
+import { cloneVNode, createElementBlock, defineComponent, getCurrentInstance, h, onMounted, provide, shallowRef } from "vue";
 import { isPromise } from "@vue/shared";
 import { useNuxtApp } from "../nuxt.js";
-import { getFragmentHTML } from "./utils.js";
 import ServerPlaceholder from "./server-placeholder.js";
+import { elToStaticVNode } from "./utils.js";
 export const clientOnlySymbol = Symbol.for("nuxt:client-only");
+const STATIC_DIV = "<div></div>";
 export default defineComponent({
   name: "ClientOnly",
   inheritAttrs: false,
   props: ["fallback", "placeholder", "placeholderTag", "fallbackTag"],
-  setup(_, { slots, attrs }) {
-    const mounted = ref(false);
+  ...import.meta.dev && {
+    slots: Object
+  },
+  setup(props, { slots, attrs }) {
+    const mounted = shallowRef(false);
     onMounted(() => {
       mounted.value = true;
     });
@@ -18,14 +22,22 @@ export default defineComponent({
       nuxtApp._isNuxtPageUsed = true;
       nuxtApp._isNuxtLayoutUsed = true;
     }
+    const vm = getCurrentInstance();
+    if (vm) {
+      vm._nuxtClientOnly = true;
+    }
     provide(clientOnlySymbol, true);
-    return (props) => {
+    return () => {
       if (mounted.value) {
-        return slots.default?.();
+        const vnodes = slots.default?.();
+        if (vnodes && vnodes.length === 1) {
+          return [cloneVNode(vnodes[0], attrs)];
+        }
+        return vnodes;
       }
       const slot = slots.fallback || slots.placeholder;
       if (slot) {
-        return slot();
+        return h(slot);
       }
       const fallbackStr = props.fallback || props.placeholder || "";
       const fallbackTag = props.fallbackTag || props.placeholderTag || "span";
@@ -48,20 +60,18 @@ export function createClientOnly(component) {
       if ($setup.mounted$ ?? ctx.mounted$) {
         const res = component.render?.bind(ctx)(ctx, cache2, $props, $setup, $data, $options);
         return res.children === null || typeof res.children === "string" ? cloneVNode(res) : h(res);
-      } else {
-        const fragment = getFragmentHTML(ctx._.vnode.el ?? null) ?? ["<div></div>"];
-        return createStaticVNode(fragment.join(""), fragment.length);
       }
+      return elToStaticVNode(ctx._.vnode.el, STATIC_DIV);
     };
-  } else if (clone.template) {
-    clone.template = `
+  } else {
+    clone.template &&= `
       <template v-if="mounted$">${component.template}</template>
-      <template v-else><div></div></template>
+      <template v-else>${STATIC_DIV}</template>
     `;
   }
   clone.setup = (props, ctx) => {
     const nuxtApp = useNuxtApp();
-    const mounted$ = ref(nuxtApp.isHydrating === false);
+    const mounted$ = shallowRef(nuxtApp.isHydrating === false);
     const instance = getCurrentInstance();
     if (nuxtApp.isHydrating) {
       const attrs = { ...instance.attrs };
@@ -81,7 +91,7 @@ export function createClientOnly(component) {
     if (isPromise(setupState)) {
       return Promise.resolve(setupState).then((setupState2) => {
         if (typeof setupState2 !== "function") {
-          setupState2 = setupState2 || {};
+          setupState2 ||= {};
           setupState2.mounted$ = mounted$;
           return setupState2;
         }
@@ -89,20 +99,19 @@ export function createClientOnly(component) {
           if (mounted$.value || !nuxtApp.isHydrating) {
             const res = setupState2(...args);
             return res.children === null || typeof res.children === "string" ? cloneVNode(res) : h(res);
-          } else {
-            const fragment = getFragmentHTML(instance?.vnode.el ?? null) ?? ["<div></div>"];
-            return createStaticVNode(fragment.join(""), fragment.length);
           }
+          return elToStaticVNode(instance?.vnode.el, STATIC_DIV);
         };
       });
     } else {
       if (typeof setupState === "function") {
         return (...args) => {
           if (mounted$.value) {
-            return h(setupState(...args), ctx.attrs);
+            const res = setupState(...args);
+            const attrs = clone.inheritAttrs !== false ? ctx.attrs : void 0;
+            return res.children === null || typeof res.children === "string" ? cloneVNode(res, attrs) : h(res, attrs);
           }
-          const fragment = getFragmentHTML(instance?.vnode.el ?? null) ?? ["<div></div>"];
-          return createStaticVNode(fragment.join(""), fragment.length);
+          return elToStaticVNode(instance?.vnode.el, STATIC_DIV);
         };
       }
       return Object.assign(setupState, { mounted$ });
diff --git a/node_modules/nuxt/dist/app/components/dev-only.d.ts b/node_modules/nuxt/dist/app/components/dev-only.d.ts
index 8b123e5..c8971be 100644
--- a/node_modules/nuxt/dist/app/components/dev-only.d.ts
+++ b/node_modules/nuxt/dist/app/components/dev-only.d.ts
@@ -1,4 +1,11 @@
-declare const _default: import("vue").DefineComponent<{}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
+import type { SlotsType, VNode } from 'vue';
+declare const _default: import("vue").DefineComponent<{}, () => VNode<import("vue").RendererNode, import("vue").RendererElement, {
     [key: string]: any;
-}>[] | undefined, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+}>[] | undefined, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{}>, {}, SlotsType<{
+    default?: () => VNode[];
+    /**
+     * If you ever require to have a replacement during production.
+     */
+    fallback?: () => VNode[];
+}>, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
 export default _default;
diff --git a/node_modules/nuxt/dist/app/components/dev-only.js b/node_modules/nuxt/dist/app/components/dev-only.js
index 241a306..9f6f2bb 100644
--- a/node_modules/nuxt/dist/app/components/dev-only.js
+++ b/node_modules/nuxt/dist/app/components/dev-only.js
@@ -2,6 +2,9 @@ import { defineComponent } from "vue";
 export default defineComponent({
   name: "DevOnly",
   inheritAttrs: false,
+  ...import.meta.dev && {
+    slots: Object
+  },
   setup(_, props) {
     if (import.meta.dev) {
       return () => props.slots.default?.();
diff --git a/node_modules/nuxt/dist/app/components/error-404.vue b/node_modules/nuxt/dist/app/components/error-404.vue
index 67d32a9..af2fa5e 100644
--- a/node_modules/nuxt/dist/app/components/error-404.vue
+++ b/node_modules/nuxt/dist/app/components/error-404.vue
@@ -1,5 +1,5 @@
 <script setup>
-import { useHead } from '#imports'
+import { useHead } from "#imports";
 const props = defineProps({
   appName: {
     type: String,
@@ -25,26 +25,28 @@ const props = defineProps({
     type: String,
     default: "Go back home"
   }
-})
+});
 useHead({
-  title: `${ props.statusCode } - ${ props.statusMessage } | ${ props.appName }`,
+  title: `${props.statusCode} - ${props.statusMessage} | ${props.appName}`,
   script: [
     {
-      children: `!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver((e=>{for(const o of e)if("childList"===o.type)for(const e of o.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&r(e)})).observe(document,{childList:!0,subtree:!0})}function r(e){if(e.ep)return;e.ep=!0;const r=function(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?r.credentials="include":"anonymous"===e.crossOrigin?r.credentials="omit":r.credentials="same-origin",r}(e);fetch(e.href,r)}}();`
+      innerHTML: `!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver((e=>{for(const o of e)if("childList"===o.type)for(const e of o.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&r(e)})).observe(document,{childList:!0,subtree:!0})}function r(e){if(e.ep)return;e.ep=!0;const r=function(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?r.credentials="include":"anonymous"===e.crossOrigin?r.credentials="omit":r.credentials="same-origin",r}(e);fetch(e.href,r)}}();`
     }
   ],
   style: [
     {
-      children: `*,:after,:before{border-color:var(--un-default-border-color,#e5e7eb);border-style:solid;border-width:0;box-sizing:border-box}:after,:before{--un-content:""}html{line-height:1.5;-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-moz-tab-size:4;tab-size:4;-webkit-tap-highlight-color:transparent}body{line-height:inherit;margin:0}h1{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}h1,p{margin:0}*,:after,:before{--un-rotate:0;--un-rotate-x:0;--un-rotate-y:0;--un-rotate-z:0;--un-scale-x:1;--un-scale-y:1;--un-scale-z:1;--un-skew-x:0;--un-skew-y:0;--un-translate-x:0;--un-translate-y:0;--un-translate-z:0;--un-pan-x: ;--un-pan-y: ;--un-pinch-zoom: ;--un-scroll-snap-strictness:proximity;--un-ordinal: ;--un-slashed-zero: ;--un-numeric-figure: ;--un-numeric-spacing: ;--un-numeric-fraction: ;--un-border-spacing-x:0;--un-border-spacing-y:0;--un-ring-offset-shadow:0 0 transparent;--un-ring-shadow:0 0 transparent;--un-shadow-inset: ;--un-shadow:0 0 transparent;--un-ring-inset: ;--un-ring-offset-width:0px;--un-ring-offset-color:#fff;--un-ring-width:0px;--un-ring-color:rgba(147,197,253,.5);--un-blur: ;--un-brightness: ;--un-contrast: ;--un-drop-shadow: ;--un-grayscale: ;--un-hue-rotate: ;--un-invert: ;--un-saturate: ;--un-sepia: ;--un-backdrop-blur: ;--un-backdrop-brightness: ;--un-backdrop-contrast: ;--un-backdrop-grayscale: ;--un-backdrop-hue-rotate: ;--un-backdrop-invert: ;--un-backdrop-opacity: ;--un-backdrop-saturate: ;--un-backdrop-sepia: }`
+      innerHTML: `*,:after,:before{border-color:var(--un-default-border-color,#e5e7eb);border-style:solid;border-width:0;box-sizing:border-box}:after,:before{--un-content:""}html{line-height:1.5;-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-moz-tab-size:4;tab-size:4;-webkit-tap-highlight-color:transparent}body{line-height:inherit;margin:0}h1{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}h1,p{margin:0}*,:after,:before{--un-rotate:0;--un-rotate-x:0;--un-rotate-y:0;--un-rotate-z:0;--un-scale-x:1;--un-scale-y:1;--un-scale-z:1;--un-skew-x:0;--un-skew-y:0;--un-translate-x:0;--un-translate-y:0;--un-translate-z:0;--un-pan-x: ;--un-pan-y: ;--un-pinch-zoom: ;--un-scroll-snap-strictness:proximity;--un-ordinal: ;--un-slashed-zero: ;--un-numeric-figure: ;--un-numeric-spacing: ;--un-numeric-fraction: ;--un-border-spacing-x:0;--un-border-spacing-y:0;--un-ring-offset-shadow:0 0 transparent;--un-ring-shadow:0 0 transparent;--un-shadow-inset: ;--un-shadow:0 0 transparent;--un-ring-inset: ;--un-ring-offset-width:0px;--un-ring-offset-color:#fff;--un-ring-width:0px;--un-ring-color:rgba(147,197,253,.5);--un-blur: ;--un-brightness: ;--un-contrast: ;--un-drop-shadow: ;--un-grayscale: ;--un-hue-rotate: ;--un-invert: ;--un-saturate: ;--un-sepia: ;--un-backdrop-blur: ;--un-backdrop-brightness: ;--un-backdrop-contrast: ;--un-backdrop-grayscale: ;--un-backdrop-hue-rotate: ;--un-backdrop-invert: ;--un-backdrop-opacity: ;--un-backdrop-saturate: ;--un-backdrop-sepia: }`
     }
   ]
-})
+});
 </script>
+
 <template>
 <div class="antialiased bg-white dark:bg-black dark:text-white font-sans grid min-h-screen overflow-hidden place-content-center text-black"><div class="fixed left-0 right-0 spotlight z-10"></div><div class="max-w-520px text-center z-20"><h1 class="font-medium mb-8 sm:text-10xl text-8xl" v-text="statusCode" /><p class="font-light leading-tight mb-16 px-8 sm:px-0 sm:text-4xl text-xl" v-text="description" /><div class="flex items-center justify-center w-full"><NuxtLink to="/" class="cursor-pointer gradient-border px-4 py-2 sm:px-6 sm:py-3 sm:text-xl text-md">
  {{ backHome }} 
 </NuxtLink></div></div></div>
 </template>
+
 <style scoped>
 .spotlight{background:linear-gradient(45deg,#00dc82,#36e4da 50%,#0047e1);bottom:-30vh;filter:blur(20vh);height:40vh}.gradient-border{-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);border-radius:.5rem;position:relative}@media (prefers-color-scheme:light){.gradient-border{background-color:hsla(0,0%,100%,.3)}.gradient-border:before{background:linear-gradient(90deg,#e2e2e2,#e2e2e2 25%,#00dc82 50%,#36e4da 75%,#0047e1)}}@media (prefers-color-scheme:dark){.gradient-border{background-color:hsla(0,0%,8%,.3)}.gradient-border:before{background:linear-gradient(90deg,#303030,#303030 25%,#00dc82 50%,#36e4da 75%,#0047e1)}}.gradient-border:before{background-size:400% auto;border-radius:.5rem;bottom:0;content:"";left:0;-webkit-mask:linear-gradient(#fff 0 0) content-box,linear-gradient(#fff 0 0);mask:linear-gradient(#fff 0 0) content-box,linear-gradient(#fff 0 0);-webkit-mask-composite:xor;mask-composite:exclude;opacity:.5;padding:2px;position:absolute;right:0;top:0;transition:background-position .3s ease-in-out,opacity .2s ease-in-out;width:100%}.gradient-border:hover:before{background-position:-50% 0;opacity:1}.fixed{position:fixed}.left-0{left:0}.right-0{right:0}.z-10{z-index:10}.z-20{z-index:20}.grid{display:grid}.mb-16{margin-bottom:4rem}.mb-8{margin-bottom:2rem}.max-w-520px{max-width:520px}.min-h-screen{min-height:100vh}.w-full{width:100%}.flex{display:flex}.cursor-pointer{cursor:pointer}.place-content-center{place-content:center}.items-center{align-items:center}.justify-center{justify-content:center}.overflow-hidden{overflow:hidden}.bg-white{--un-bg-opacity:1;background-color:rgb(255 255 255/var(--un-bg-opacity))}.px-4{padding-left:1rem;padding-right:1rem}.px-8{padding-left:2rem;padding-right:2rem}.py-2{padding-bottom:.5rem;padding-top:.5rem}.text-center{text-align:center}.text-8xl{font-size:6rem;line-height:1}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-black{--un-text-opacity:1;color:rgb(0 0 0/var(--un-text-opacity))}.font-light{font-weight:300}.font-medium{font-weight:500}.leading-tight{line-height:1.25}.font-sans{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}@media (prefers-color-scheme:dark){.dark\:bg-black{--un-bg-opacity:1;background-color:rgb(0 0 0/var(--un-bg-opacity))}.dark\:text-white{--un-text-opacity:1;color:rgb(255 255 255/var(--un-text-opacity))}}@media (min-width:640px){.sm\:px-0{padding-left:0;padding-right:0}.sm\:px-6{padding-left:1.5rem;padding-right:1.5rem}.sm\:py-3{padding-bottom:.75rem;padding-top:.75rem}.sm\:text-4xl{font-size:2.25rem;line-height:2.5rem}.sm\:text-xl{font-size:1.25rem;line-height:1.75rem}}
 </style>
diff --git a/node_modules/nuxt/dist/app/components/error-404.vue.d.ts b/node_modules/nuxt/dist/app/components/error-404.vue.d.ts
new file mode 100644
index 0000000..915b10f
--- /dev/null
+++ b/node_modules/nuxt/dist/app/components/error-404.vue.d.ts
@@ -0,0 +1,10 @@
+declare const _default: import("vue").DefineComponent<{}, {
+    appName: string;
+    version: string;
+    statusCode: number;
+    statusMessage: string;
+    description: string;
+    backHome: string;
+    $props: any;
+}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export default _default;
diff --git a/node_modules/nuxt/dist/app/components/error-500.vue b/node_modules/nuxt/dist/app/components/error-500.vue
index 05347d1..3c958e8 100644
--- a/node_modules/nuxt/dist/app/components/error-500.vue
+++ b/node_modules/nuxt/dist/app/components/error-500.vue
@@ -1,5 +1,5 @@
 <script setup>
-import { useHead } from '#imports'
+import { useHead } from "#imports";
 const props = defineProps({
   appName: {
     type: String,
@@ -21,24 +21,26 @@ const props = defineProps({
     type: String,
     default: "This page is temporarily unavailable."
   }
-})
+});
 useHead({
-  title: `${ props.statusCode } - ${ props.statusMessage } | ${ props.appName }`,
+  title: `${props.statusCode} - ${props.statusMessage} | ${props.appName}`,
   script: [
     {
-      children: `!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver((e=>{for(const o of e)if("childList"===o.type)for(const e of o.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&r(e)})).observe(document,{childList:!0,subtree:!0})}function r(e){if(e.ep)return;e.ep=!0;const r=function(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?r.credentials="include":"anonymous"===e.crossOrigin?r.credentials="omit":r.credentials="same-origin",r}(e);fetch(e.href,r)}}();`
+      innerHTML: `!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver((e=>{for(const o of e)if("childList"===o.type)for(const e of o.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&r(e)})).observe(document,{childList:!0,subtree:!0})}function r(e){if(e.ep)return;e.ep=!0;const r=function(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?r.credentials="include":"anonymous"===e.crossOrigin?r.credentials="omit":r.credentials="same-origin",r}(e);fetch(e.href,r)}}();`
     }
   ],
   style: [
     {
-      children: `*,:after,:before{border-color:var(--un-default-border-color,#e5e7eb);border-style:solid;border-width:0;box-sizing:border-box}:after,:before{--un-content:""}html{line-height:1.5;-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-moz-tab-size:4;tab-size:4;-webkit-tap-highlight-color:transparent}body{line-height:inherit;margin:0}h1{font-size:inherit;font-weight:inherit}h1,p{margin:0}*,:after,:before{--un-rotate:0;--un-rotate-x:0;--un-rotate-y:0;--un-rotate-z:0;--un-scale-x:1;--un-scale-y:1;--un-scale-z:1;--un-skew-x:0;--un-skew-y:0;--un-translate-x:0;--un-translate-y:0;--un-translate-z:0;--un-pan-x: ;--un-pan-y: ;--un-pinch-zoom: ;--un-scroll-snap-strictness:proximity;--un-ordinal: ;--un-slashed-zero: ;--un-numeric-figure: ;--un-numeric-spacing: ;--un-numeric-fraction: ;--un-border-spacing-x:0;--un-border-spacing-y:0;--un-ring-offset-shadow:0 0 transparent;--un-ring-shadow:0 0 transparent;--un-shadow-inset: ;--un-shadow:0 0 transparent;--un-ring-inset: ;--un-ring-offset-width:0px;--un-ring-offset-color:#fff;--un-ring-width:0px;--un-ring-color:rgba(147,197,253,.5);--un-blur: ;--un-brightness: ;--un-contrast: ;--un-drop-shadow: ;--un-grayscale: ;--un-hue-rotate: ;--un-invert: ;--un-saturate: ;--un-sepia: ;--un-backdrop-blur: ;--un-backdrop-brightness: ;--un-backdrop-contrast: ;--un-backdrop-grayscale: ;--un-backdrop-hue-rotate: ;--un-backdrop-invert: ;--un-backdrop-opacity: ;--un-backdrop-saturate: ;--un-backdrop-sepia: }`
+      innerHTML: `*,:after,:before{border-color:var(--un-default-border-color,#e5e7eb);border-style:solid;border-width:0;box-sizing:border-box}:after,:before{--un-content:""}html{line-height:1.5;-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-moz-tab-size:4;tab-size:4;-webkit-tap-highlight-color:transparent}body{line-height:inherit;margin:0}h1{font-size:inherit;font-weight:inherit}h1,p{margin:0}*,:after,:before{--un-rotate:0;--un-rotate-x:0;--un-rotate-y:0;--un-rotate-z:0;--un-scale-x:1;--un-scale-y:1;--un-scale-z:1;--un-skew-x:0;--un-skew-y:0;--un-translate-x:0;--un-translate-y:0;--un-translate-z:0;--un-pan-x: ;--un-pan-y: ;--un-pinch-zoom: ;--un-scroll-snap-strictness:proximity;--un-ordinal: ;--un-slashed-zero: ;--un-numeric-figure: ;--un-numeric-spacing: ;--un-numeric-fraction: ;--un-border-spacing-x:0;--un-border-spacing-y:0;--un-ring-offset-shadow:0 0 transparent;--un-ring-shadow:0 0 transparent;--un-shadow-inset: ;--un-shadow:0 0 transparent;--un-ring-inset: ;--un-ring-offset-width:0px;--un-ring-offset-color:#fff;--un-ring-width:0px;--un-ring-color:rgba(147,197,253,.5);--un-blur: ;--un-brightness: ;--un-contrast: ;--un-drop-shadow: ;--un-grayscale: ;--un-hue-rotate: ;--un-invert: ;--un-saturate: ;--un-sepia: ;--un-backdrop-blur: ;--un-backdrop-brightness: ;--un-backdrop-contrast: ;--un-backdrop-grayscale: ;--un-backdrop-hue-rotate: ;--un-backdrop-invert: ;--un-backdrop-opacity: ;--un-backdrop-saturate: ;--un-backdrop-sepia: }`
     }
   ]
-})
+});
 </script>
+
 <template>
 <div class="antialiased bg-white dark:bg-black dark:text-white font-sans grid min-h-screen overflow-hidden place-content-center text-black"><div class="-bottom-1/2 fixed h-1/2 left-0 right-0 spotlight"></div><div class="max-w-520px text-center"><h1 class="font-medium mb-8 sm:text-10xl text-8xl" v-text="statusCode" /><p class="font-light leading-tight mb-16 px-8 sm:px-0 sm:text-4xl text-xl" v-text="description" /></div></div>
 </template>
+
 <style scoped>
 .spotlight{background:linear-gradient(45deg,#00dc82,#36e4da 50%,#0047e1);filter:blur(20vh)}.fixed{position:fixed}.-bottom-1\/2{bottom:-50%}.left-0{left:0}.right-0{right:0}.grid{display:grid}.mb-16{margin-bottom:4rem}.mb-8{margin-bottom:2rem}.h-1\/2{height:50%}.max-w-520px{max-width:520px}.min-h-screen{min-height:100vh}.place-content-center{place-content:center}.overflow-hidden{overflow:hidden}.bg-white{--un-bg-opacity:1;background-color:rgb(255 255 255/var(--un-bg-opacity))}.px-8{padding-left:2rem;padding-right:2rem}.text-center{text-align:center}.text-8xl{font-size:6rem;line-height:1}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-black{--un-text-opacity:1;color:rgb(0 0 0/var(--un-text-opacity))}.font-light{font-weight:300}.font-medium{font-weight:500}.leading-tight{line-height:1.25}.font-sans{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}@media (prefers-color-scheme:dark){.dark\:bg-black{--un-bg-opacity:1;background-color:rgb(0 0 0/var(--un-bg-opacity))}.dark\:text-white{--un-text-opacity:1;color:rgb(255 255 255/var(--un-text-opacity))}}@media (min-width:640px){.sm\:px-0{padding-left:0;padding-right:0}.sm\:text-4xl{font-size:2.25rem;line-height:2.5rem}}
 </style>
diff --git a/node_modules/nuxt/dist/app/components/error-500.vue.d.ts b/node_modules/nuxt/dist/app/components/error-500.vue.d.ts
new file mode 100644
index 0000000..85228f7
--- /dev/null
+++ b/node_modules/nuxt/dist/app/components/error-500.vue.d.ts
@@ -0,0 +1,9 @@
+declare const _default: import("vue").DefineComponent<{}, {
+    appName: string;
+    version: string;
+    statusCode: number;
+    statusMessage: string;
+    description: string;
+    $props: any;
+}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export default _default;
diff --git a/node_modules/nuxt/dist/app/components/error-dev.vue b/node_modules/nuxt/dist/app/components/error-dev.vue
index 86e1f85..fc6fd92 100644
--- a/node_modules/nuxt/dist/app/components/error-dev.vue
+++ b/node_modules/nuxt/dist/app/components/error-dev.vue
@@ -1,5 +1,5 @@
 <script setup>
-import { useHead } from '#imports'
+import { useHead } from "#imports";
 const props = defineProps({
   appName: {
     type: String,
@@ -25,24 +25,26 @@ const props = defineProps({
     type: String,
     default: ""
   }
-})
+});
 useHead({
-  title: `${ props.statusCode } - ${ props.statusMessage } | ${ props.appName }`,
+  title: `${props.statusCode} - ${props.statusMessage || "Internal Server Error"}`,
   script: [
     {
-      children: `!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver((e=>{for(const o of e)if("childList"===o.type)for(const e of o.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&r(e)})).observe(document,{childList:!0,subtree:!0})}function r(e){if(e.ep)return;e.ep=!0;const r=function(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?r.credentials="include":"anonymous"===e.crossOrigin?r.credentials="omit":r.credentials="same-origin",r}(e);fetch(e.href,r)}}();`
+      innerHTML: `!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver((e=>{for(const o of e)if("childList"===o.type)for(const e of o.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&r(e)})).observe(document,{childList:!0,subtree:!0})}function r(e){if(e.ep)return;e.ep=!0;const r=function(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?r.credentials="include":"anonymous"===e.crossOrigin?r.credentials="omit":r.credentials="same-origin",r}(e);fetch(e.href,r)}}();`
     }
   ],
   style: [
     {
-      children: `*,:after,:before{border-color:var(--un-default-border-color,#e5e7eb);border-style:solid;border-width:0;box-sizing:border-box}:after,:before{--un-content:""}html{line-height:1.5;-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-moz-tab-size:4;tab-size:4;-webkit-tap-highlight-color:transparent}body{line-height:inherit;margin:0}h1{font-size:inherit;font-weight:inherit}pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-feature-settings:normal;font-size:1em;font-variation-settings:normal}h1,p,pre{margin:0}*,:after,:before{--un-rotate:0;--un-rotate-x:0;--un-rotate-y:0;--un-rotate-z:0;--un-scale-x:1;--un-scale-y:1;--un-scale-z:1;--un-skew-x:0;--un-skew-y:0;--un-translate-x:0;--un-translate-y:0;--un-translate-z:0;--un-pan-x: ;--un-pan-y: ;--un-pinch-zoom: ;--un-scroll-snap-strictness:proximity;--un-ordinal: ;--un-slashed-zero: ;--un-numeric-figure: ;--un-numeric-spacing: ;--un-numeric-fraction: ;--un-border-spacing-x:0;--un-border-spacing-y:0;--un-ring-offset-shadow:0 0 transparent;--un-ring-shadow:0 0 transparent;--un-shadow-inset: ;--un-shadow:0 0 transparent;--un-ring-inset: ;--un-ring-offset-width:0px;--un-ring-offset-color:#fff;--un-ring-width:0px;--un-ring-color:rgba(147,197,253,.5);--un-blur: ;--un-brightness: ;--un-contrast: ;--un-drop-shadow: ;--un-grayscale: ;--un-hue-rotate: ;--un-invert: ;--un-saturate: ;--un-sepia: ;--un-backdrop-blur: ;--un-backdrop-brightness: ;--un-backdrop-contrast: ;--un-backdrop-grayscale: ;--un-backdrop-hue-rotate: ;--un-backdrop-invert: ;--un-backdrop-opacity: ;--un-backdrop-saturate: ;--un-backdrop-sepia: }`
+      innerHTML: `*,:after,:before{border-color:var(--un-default-border-color,#e5e7eb);border-style:solid;border-width:0;box-sizing:border-box}:after,:before{--un-content:""}html{line-height:1.5;-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-moz-tab-size:4;tab-size:4;-webkit-tap-highlight-color:transparent}body{line-height:inherit;margin:0}h1{font-size:inherit;font-weight:inherit}h1,p{margin:0}*,:after,:before{--un-rotate:0;--un-rotate-x:0;--un-rotate-y:0;--un-rotate-z:0;--un-scale-x:1;--un-scale-y:1;--un-scale-z:1;--un-skew-x:0;--un-skew-y:0;--un-translate-x:0;--un-translate-y:0;--un-translate-z:0;--un-pan-x: ;--un-pan-y: ;--un-pinch-zoom: ;--un-scroll-snap-strictness:proximity;--un-ordinal: ;--un-slashed-zero: ;--un-numeric-figure: ;--un-numeric-spacing: ;--un-numeric-fraction: ;--un-border-spacing-x:0;--un-border-spacing-y:0;--un-ring-offset-shadow:0 0 transparent;--un-ring-shadow:0 0 transparent;--un-shadow-inset: ;--un-shadow:0 0 transparent;--un-ring-inset: ;--un-ring-offset-width:0px;--un-ring-offset-color:#fff;--un-ring-width:0px;--un-ring-color:rgba(147,197,253,.5);--un-blur: ;--un-brightness: ;--un-contrast: ;--un-drop-shadow: ;--un-grayscale: ;--un-hue-rotate: ;--un-invert: ;--un-saturate: ;--un-sepia: ;--un-backdrop-blur: ;--un-backdrop-brightness: ;--un-backdrop-contrast: ;--un-backdrop-grayscale: ;--un-backdrop-hue-rotate: ;--un-backdrop-invert: ;--un-backdrop-opacity: ;--un-backdrop-saturate: ;--un-backdrop-sepia: }`
     }
   ]
-})
+});
 </script>
+
 <template>
-<div class="antialiased bg-white dark:bg-black dark:text-white flex flex-col font-sans min-h-screen pt-14 px-10 text-black"><div class="fixed left-0 right-0 spotlight"></div><h1 class="font-medium mb-6 sm:text-8xl text-6xl" v-text="statusCode" /><p class="font-light leading-tight mb-8 sm:text-2xl text-xl" v-text="description" /><div class="bg-black/5 bg-white dark:bg-white/10 flex-1 h-auto overflow-y-auto rounded-t-md"><pre class="font-light leading-tight p-8 text-xl z-10" v-html="stack" /></div></div>
+<div class="antialiased bg-white dark:bg-black dark:text-white flex flex-col font-sans min-h-screen pt-14 px-10 text-black"><div class="fixed left-0 pointer-events-none right-0 spotlight"></div><h1 class="font-medium mb-6 sm:text-8xl text-6xl" v-text="statusCode" /><p class="font-light leading-tight mb-8 sm:text-2xl text-xl" v-text="description" /><div class="bg-black/5 bg-white dark:bg-white/10 flex-1 h-auto overflow-y-auto rounded-t-md"><div class="font-light leading-tight p-8 text-xl z-10" v-html="stack" /></div></div>
 </template>
+
 <style scoped>
-.spotlight{background:linear-gradient(45deg,#00dc82,#36e4da 50%,#0047e1);bottom:-40vh;filter:blur(30vh);height:60vh;opacity:.8}.fixed{position:fixed}.left-0{left:0}.right-0{right:0}.z-10{z-index:10}.mb-6{margin-bottom:1.5rem}.mb-8{margin-bottom:2rem}.h-auto{height:auto}.min-h-screen{min-height:100vh}.flex{display:flex}.flex-1{flex:1 1 0%}.flex-col{flex-direction:column}.overflow-y-auto{overflow-y:auto}.rounded-t-md{border-top-left-radius:.375rem;border-top-right-radius:.375rem}.bg-black\/5{background-color:#0000000d}.bg-white{--un-bg-opacity:1;background-color:rgb(255 255 255/var(--un-bg-opacity))}.p-8{padding:2rem}.px-10{padding-left:2.5rem;padding-right:2.5rem}.pt-14{padding-top:3.5rem}.text-6xl{font-size:3.75rem;line-height:1}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-black{--un-text-opacity:1;color:rgb(0 0 0/var(--un-text-opacity))}.font-light{font-weight:300}.font-medium{font-weight:500}.leading-tight{line-height:1.25}.font-sans{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}@media (prefers-color-scheme:dark){.dark\:bg-black{--un-bg-opacity:1;background-color:rgb(0 0 0/var(--un-bg-opacity))}.dark\:bg-white\/10{background-color:#ffffff1a}.dark\:text-white{--un-text-opacity:1;color:rgb(255 255 255/var(--un-text-opacity))}}@media (min-width:640px){.sm\:text-2xl{font-size:1.5rem;line-height:2rem}.sm\:text-8xl{font-size:6rem;line-height:1}}
+.spotlight{background:linear-gradient(45deg,#00dc82,#36e4da 50%,#0047e1);bottom:-40vh;filter:blur(30vh);height:60vh;opacity:.8}.pointer-events-none{pointer-events:none}.fixed{position:fixed}.left-0{left:0}.right-0{right:0}.z-10{z-index:10}.mb-6{margin-bottom:1.5rem}.mb-8{margin-bottom:2rem}.h-auto{height:auto}.min-h-screen{min-height:100vh}.flex{display:flex}.flex-1{flex:1 1 0%}.flex-col{flex-direction:column}.overflow-y-auto{overflow-y:auto}.rounded-t-md{border-top-left-radius:.375rem;border-top-right-radius:.375rem}.bg-black\/5{background-color:#0000000d}.bg-white{--un-bg-opacity:1;background-color:rgb(255 255 255/var(--un-bg-opacity))}.p-8{padding:2rem}.px-10{padding-left:2.5rem;padding-right:2.5rem}.pt-14{padding-top:3.5rem}.text-6xl{font-size:3.75rem;line-height:1}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-black{--un-text-opacity:1;color:rgb(0 0 0/var(--un-text-opacity))}.font-light{font-weight:300}.font-medium{font-weight:500}.leading-tight{line-height:1.25}.font-sans{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}@media (prefers-color-scheme:dark){.dark\:bg-black{--un-bg-opacity:1;background-color:rgb(0 0 0/var(--un-bg-opacity))}.dark\:bg-white\/10{background-color:#ffffff1a}.dark\:text-white{--un-text-opacity:1;color:rgb(255 255 255/var(--un-text-opacity))}}@media (min-width:640px){.sm\:text-2xl{font-size:1.5rem;line-height:2rem}.sm\:text-8xl{font-size:6rem;line-height:1}}
 </style>
diff --git a/node_modules/nuxt/dist/app/components/error-dev.vue.d.ts b/node_modules/nuxt/dist/app/components/error-dev.vue.d.ts
new file mode 100644
index 0000000..5950b9a
--- /dev/null
+++ b/node_modules/nuxt/dist/app/components/error-dev.vue.d.ts
@@ -0,0 +1,10 @@
+declare const _default: import("vue").DefineComponent<{}, {
+    appName: string;
+    version: string;
+    statusCode: number;
+    statusMessage: string;
+    description: string;
+    stack: string;
+    $props: any;
+}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export default _default;
diff --git a/node_modules/nuxt/dist/app/components/index.d.ts b/node_modules/nuxt/dist/app/components/index.d.ts
index 7dfdf17..469ae27 100644
--- a/node_modules/nuxt/dist/app/components/index.d.ts
+++ b/node_modules/nuxt/dist/app/components/index.d.ts
@@ -1,2 +1,3 @@
 export { defineNuxtLink } from './nuxt-link.js';
 export type { NuxtLinkOptions, NuxtLinkProps } from './nuxt-link.js';
+export type { NuxtTimeProps } from './nuxt-time.vue.js';
diff --git a/node_modules/nuxt/dist/app/components/island-renderer.js b/node_modules/nuxt/dist/app/components/island-renderer.js
index a110425..29d6a08 100644
--- a/node_modules/nuxt/dist/app/components/island-renderer.js
+++ b/node_modules/nuxt/dist/app/components/island-renderer.js
@@ -1,5 +1,5 @@
 import { createVNode, defineComponent, onErrorCaptured } from "vue";
-import { injectHead } from "@unhead/vue";
+import { injectHead } from "../composables/head.js";
 import { createError } from "../composables/error.js";
 import { islandComponents } from "#build/components.islands.mjs";
 export default defineComponent({
@@ -12,7 +12,7 @@ export default defineComponent({
   },
   setup(props) {
     const head = injectHead();
-    head.headEntries().splice(0, head.headEntries().length);
+    head.entries.clear();
     const component = islandComponents[props.context.name];
     if (!component) {
       throw createError({
diff --git a/node_modules/nuxt/dist/app/components/nuxt-error-boundary.d.ts b/node_modules/nuxt/dist/app/components/nuxt-error-boundary.d.ts
deleted file mode 100644
index daccb13..0000000
--- a/node_modules/nuxt/dist/app/components/nuxt-error-boundary.d.ts
+++ /dev/null
@@ -1,8 +0,0 @@
-declare const _default: import("vue").DefineComponent<{}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
-    [key: string]: any;
-}>[] | undefined, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
-    error(_error: unknown): true;
-}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{
-    onError?: ((_error: unknown) => any) | undefined;
-}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
-export default _default;
diff --git a/node_modules/nuxt/dist/app/components/nuxt-error-boundary.js b/node_modules/nuxt/dist/app/components/nuxt-error-boundary.js
deleted file mode 100644
index 6c8c2c7..0000000
--- a/node_modules/nuxt/dist/app/components/nuxt-error-boundary.js
+++ /dev/null
@@ -1,29 +0,0 @@
-import { defineComponent, onErrorCaptured, ref } from "vue";
-import { useNuxtApp } from "../nuxt.js";
-export default defineComponent({
-  name: "NuxtErrorBoundary",
-  inheritAttrs: false,
-  emits: {
-    error(_error) {
-      return true;
-    }
-  },
-  setup(_props, { slots, emit }) {
-    const error = ref(null);
-    const nuxtApp = useNuxtApp();
-    if (import.meta.client) {
-      onErrorCaptured((err, target, info) => {
-        if (!nuxtApp.isHydrating || !nuxtApp.payload.serverRendered) {
-          emit("error", err);
-          nuxtApp.hooks.callHook("vue:error", err, target, info);
-          error.value = err;
-          return false;
-        }
-      });
-    }
-    function clearError() {
-      error.value = null;
-    }
-    return () => error.value ? slots.error?.({ error, clearError }) : slots.default?.();
-  }
-});
diff --git a/node_modules/nuxt/dist/app/components/nuxt-error-boundary.vue b/node_modules/nuxt/dist/app/components/nuxt-error-boundary.vue
new file mode 100644
index 0000000..a79a86a
--- /dev/null
+++ b/node_modules/nuxt/dist/app/components/nuxt-error-boundary.vue
@@ -0,0 +1,46 @@
+<template>
+  <slot
+    v-if="error"
+    v-bind="{ error, clearError }"
+    name="error"
+  />
+
+  <slot
+    v-else
+    name="default"
+  />
+</template>
+
+<script setup>
+import { onErrorCaptured, shallowRef } from "vue";
+import { useNuxtApp } from "../nuxt";
+import { onNuxtReady } from "../composables/ready";
+defineOptions({
+  name: "NuxtErrorBoundary",
+  inheritAttrs: false
+});
+const emit = defineEmits(["error"]);
+defineSlots();
+const error = shallowRef(null);
+function clearError() {
+  error.value = null;
+}
+if (import.meta.client) {
+  let handleError = function(...args) {
+    const [err, instance, info] = args;
+    emit("error", err);
+    nuxtApp.hooks.callHook("vue:error", err, instance, info);
+    error.value = err;
+  };
+  const nuxtApp = useNuxtApp();
+  onErrorCaptured((err, instance, info) => {
+    if (!nuxtApp.isHydrating) {
+      handleError(err, instance, info);
+    } else {
+      onNuxtReady(() => handleError(err, instance, info));
+    }
+    return false;
+  });
+}
+defineExpose({ error, clearError });
+</script>
diff --git a/node_modules/nuxt/dist/app/components/nuxt-error-boundary.vue.d.ts b/node_modules/nuxt/dist/app/components/nuxt-error-boundary.vue.d.ts
new file mode 100644
index 0000000..fbb3299
--- /dev/null
+++ b/node_modules/nuxt/dist/app/components/nuxt-error-boundary.vue.d.ts
@@ -0,0 +1,23 @@
+type __VLS_Slots = {
+    error(props: {
+        error: Error;
+        clearError: () => void;
+    }): any;
+    default(): any;
+};
+declare function clearError(): void;
+declare const __VLS_component: import("vue").DefineComponent<{}, {
+    error: import("vue").ShallowRef<Error | null, Error | null>;
+    clearError: typeof clearError;
+}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
+    error: (error: Error) => any;
+}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{
+    onError?: ((error: Error) => any) | undefined;
+}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+declare const _default: __VLS_WithSlots<typeof __VLS_component, __VLS_Slots>;
+export default _default;
+type __VLS_WithSlots<T, S> = T & {
+    new (): {
+        $slots: S;
+    };
+};
diff --git a/node_modules/nuxt/dist/app/components/nuxt-error-page.vue b/node_modules/nuxt/dist/app/components/nuxt-error-page.vue
index c417439..97a60e1 100644
--- a/node_modules/nuxt/dist/app/components/nuxt-error-page.vue
+++ b/node_modules/nuxt/dist/app/components/nuxt-error-page.vue
@@ -3,47 +3,24 @@
 </template>
 
 <script setup>
-import { defineAsyncComponent } from 'vue'
-
+import { defineAsyncComponent } from "vue";
 const props = defineProps({
-  error: Object,
-})
-
-// Deliberately prevent reactive update when error is cleared
-const _error = props.error
-
-// TODO: extract to a separate utility
-const stacktrace = _error.stack
-  ? _error.stack
-    .split('\n')
-    .splice(1)
-    .map((line) => {
-      const text = line
-        .replace('webpack:/', '')
-        .replace('.vue', '.js') // TODO: Support sourcemap
-        .trim()
-      return {
-        text,
-        internal: (line.includes('node_modules') && !line.includes('.cache')) ||
-          line.includes('internal') ||
-          line.includes('new Promise'),
-      }
-    }).map(i => `<span class="stack${i.internal ? ' internal' : ''}">${i.text}</span>`).join('\n')
-  : ''
-
-// Error page props
-const statusCode = Number(_error.statusCode || 500)
-const is404 = statusCode === 404
-
-const statusMessage = _error.statusMessage ?? (is404 ? 'Page Not Found' : 'Internal Server Error')
-const description = _error.message || _error.toString()
-const stack = import.meta.dev && !is404 ? _error.description || `<pre>${stacktrace}</pre>` : undefined
-
-// TODO: Investigate side-effect issue with imports
-const _Error404 = defineAsyncComponent(() => import('./error-404.vue'))
-const _Error = import.meta.dev
-  ? defineAsyncComponent(() => import('./error-dev.vue'))
-  : defineAsyncComponent(() => import('./error-500.vue'))
-
-const ErrorTemplate = is404 ? _Error404 : _Error
+  error: Object
+});
+const _error = props.error;
+const stacktrace = _error.stack ? _error.stack.split("\n").splice(1).map((line) => {
+  const text = line.replace("webpack:/", "").replace(".vue", ".js").trim();
+  return {
+    text,
+    internal: line.includes("node_modules") && !line.includes(".cache") || line.includes("internal") || line.includes("new Promise")
+  };
+}).map((i) => `<span class="stack${i.internal ? " internal" : ""}">${i.text}</span>`).join("\n") : "";
+const statusCode = Number(_error.statusCode || 500);
+const is404 = statusCode === 404;
+const statusMessage = _error.statusMessage ?? (is404 ? "Page Not Found" : "Internal Server Error");
+const description = _error.message || _error.toString();
+const stack = import.meta.dev && !is404 ? _error.description || `<pre>${stacktrace}</pre>` : void 0;
+const _Error404 = defineAsyncComponent(() => import("./error-404.vue"));
+const _Error = import.meta.dev ? defineAsyncComponent(() => import("./error-dev.vue")) : defineAsyncComponent(() => import("./error-500.vue"));
+const ErrorTemplate = is404 ? _Error404 : _Error;
 </script>
diff --git a/node_modules/nuxt/dist/app/components/nuxt-error-page.vue.d.ts b/node_modules/nuxt/dist/app/components/nuxt-error-page.vue.d.ts
new file mode 100644
index 0000000..a00b8ee
--- /dev/null
+++ b/node_modules/nuxt/dist/app/components/nuxt-error-page.vue.d.ts
@@ -0,0 +1,5 @@
+declare const _default: import("vue").DefineComponent<{}, {
+    error?: Record<string, any> | undefined;
+    $props: any;
+}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export default _default;
diff --git a/node_modules/nuxt/dist/app/components/nuxt-island.d.ts b/node_modules/nuxt/dist/app/components/nuxt-island.d.ts
index 40515a5..7fb9a5f 100644
--- a/node_modules/nuxt/dist/app/components/nuxt-island.d.ts
+++ b/node_modules/nuxt/dist/app/components/nuxt-island.d.ts
@@ -1,4 +1,4 @@
-import type { PropType, VNode } from 'vue';
+import type { PropType, RendererNode, VNode } from 'vue';
 declare const _default: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
     name: {
         type: StringConstructor;
@@ -25,9 +25,9 @@ declare const _default: import("vue").DefineComponent<import("vue").ExtractPropT
         type: BooleanConstructor;
         default: boolean;
     };
-}>, (_ctx: any, _cache: any) => (VNode<import("vue").RendererNode, import("vue").RendererElement, {
+}>, (_ctx: any, _cache: any) => (VNode<RendererNode, import("vue").RendererElement, {
     [key: string]: any;
-}> | VNode<import("vue").RendererNode, import("vue").RendererElement, {
+}> | VNode<RendererNode, import("vue").RendererElement, {
     [key: string]: any;
 }>[])[] | VNode<any, any, {
     [key: string]: any;
@@ -61,10 +61,10 @@ declare const _default: import("vue").DefineComponent<import("vue").ExtractPropT
     onError?: ((...args: any[]) => any) | undefined;
 }>, {
     props: Record<string, any>;
-    lazy: boolean;
     source: string;
-    context: Record<string, any>;
     scopeId: string | null | undefined;
+    lazy: boolean;
+    context: Record<string, any>;
     dangerouslyLoadClientComponents: boolean;
 }, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
 export default _default;
diff --git a/node_modules/nuxt/dist/app/components/nuxt-island.js b/node_modules/nuxt/dist/app/components/nuxt-island.js
index b40656b..71ace1b 100644
--- a/node_modules/nuxt/dist/app/components/nuxt-island.js
+++ b/node_modules/nuxt/dist/app/components/nuxt-island.js
@@ -1,14 +1,13 @@
-import { Fragment, Teleport, computed, createStaticVNode, createVNode, defineComponent, getCurrentInstance, h, nextTick, onBeforeUnmount, onMounted, ref, toRaw, watch, withMemo } from "vue";
+import { Fragment, Teleport, computed, createStaticVNode, createVNode, defineComponent, getCurrentInstance, h, nextTick, onBeforeUnmount, onMounted, ref, shallowRef, toRaw, watch, withMemo } from "vue";
 import { debounce } from "perfect-debounce";
 import { hash } from "ohash";
 import { appendResponseHeader } from "h3";
-import { injectHead } from "@unhead/vue";
 import { randomUUID } from "uncrypto";
 import { joinURL, withQuery } from "ufo";
-import { join } from "pathe";
 import { useNuxtApp, useRuntimeConfig } from "../nuxt.js";
 import { prerenderRoutes, useRequestEvent } from "../composables/ssr.js";
-import { getFragmentHTML } from "./utils.js";
+import { injectHead } from "../composables/head.js";
+import { getFragmentHTML, isEndFragment, isStartFragment } from "./utils.js";
 import { appBaseURL, remoteComponentIslands, selectiveClient } from "#build/nuxt.config.mjs";
 const pKey = "_islandPromises";
 const SSR_UID_RE = /data-island-uid="([^"]*)"/;
@@ -27,7 +26,7 @@ async function loadComponents(source = appBaseURL, paths) {
   for (const [component, item] of Object.entries(paths)) {
     if (!components.has(component)) {
       promises.push((async () => {
-        const chunkSource = join(source, item.chunk);
+        const chunkSource = joinURL(source, item.chunk);
         const c = await import(
           /* @vite-ignore */
           chunkSource
@@ -71,19 +70,19 @@ export default defineComponent({
   emits: ["error"],
   async setup(props, { slots, expose, emit }) {
     let canTeleport = import.meta.server;
-    const teleportKey = ref(0);
-    const key = ref(0);
+    const teleportKey = shallowRef(0);
+    const key = shallowRef(0);
     const canLoadClientComponent = computed(() => selectiveClient && (props.dangerouslyLoadClientComponents || !props.source));
     const error = ref(null);
     const config = useRuntimeConfig();
     const nuxtApp = useNuxtApp();
     const filteredProps = computed(() => props.props ? Object.fromEntries(Object.entries(props.props).filter(([key2]) => !key2.startsWith("data-v-"))) : {});
-    const hashId = computed(() => hash([props.name, filteredProps.value, props.context, props.source]));
+    const hashId = computed(() => hash([props.name, filteredProps.value, props.context, props.source]).replace(/[-_]/g, ""));
     const instance = getCurrentInstance();
     const event = useRequestEvent();
     let activeHead;
     const eventFetch = import.meta.server ? event.fetch : import.meta.dev ? $fetch.raw : globalThis.fetch;
-    const mounted = ref(false);
+    const mounted = shallowRef(false);
     onMounted(() => {
       mounted.value = true;
       teleportKey.value++;
@@ -131,15 +130,34 @@ export default defineComponent({
     }
     const ssrHTML = ref("");
     if (import.meta.client && instance.vnode?.el) {
+      if (import.meta.dev) {
+        let currentEl = instance.vnode.el;
+        let startEl = null;
+        let isFirstElement = true;
+        while (currentEl) {
+          if (isEndFragment(currentEl)) {
+            if (startEl !== currentEl.previousSibling) {
+              console.warn(`[\`Server components(and islands)\`] "${props.name}" must have a single root element. (HTML comments are considered elements as well.)`);
+            }
+            break;
+          } else if (!isStartFragment(currentEl) && isFirstElement) {
+            isFirstElement = false;
+            if (currentEl.nodeType === 1) {
+              startEl = currentEl;
+            }
+          }
+          currentEl = currentEl.nextSibling;
+        }
+      }
       ssrHTML.value = getFragmentHTML(instance.vnode.el, true)?.join("") || "";
       const key2 = `${props.name}_${hashId.value}`;
       nuxtApp.payload.data[key2] ||= {};
-      nuxtApp.payload.data[key2].html = ssrHTML.value;
+      nuxtApp.payload.data[key2].html = ssrHTML.value.replaceAll(new RegExp(`data-island-uid="${ssrHTML.value.match(SSR_UID_RE)?.[1] || ""}"`, "g"), `data-island-uid=""`);
     }
-    const uid = ref(ssrHTML.value.match(SSR_UID_RE)?.[1] ?? getId());
-    const availableSlots = computed(() => [...ssrHTML.value.matchAll(SLOTNAME_RE)].map((m) => m[1]));
+    const uid = ref(ssrHTML.value.match(SSR_UID_RE)?.[1] || getId());
+    const currentSlots = new Set(Object.keys(slots));
+    const availableSlots = computed(() => new Set([...ssrHTML.value.matchAll(SLOTNAME_RE)].map((m) => m[1])));
     const html = computed(() => {
-      const currentSlots = Object.keys(slots);
       let html2 = ssrHTML.value;
       if (props.scopeId) {
         html2 = html2.replace(ISLAND_SCOPE_ID_RE, (full) => full + " " + props.scopeId);
@@ -153,7 +171,7 @@ export default defineComponent({
       }
       if (payloads.slots) {
         return html2.replaceAll(SLOT_FALLBACK_RE, (full, slotName) => {
-          if (!currentSlots.includes(slotName)) {
+          if (!currentSlots.has(slotName)) {
             return full + (payloads.slots?.[slotName]?.fallback || "");
           }
           return full;
@@ -167,7 +185,7 @@ export default defineComponent({
       if (!force && nuxtApp.payload.data[key2]?.html) {
         return nuxtApp.payload.data[key2];
       }
-      const url = remoteComponentIslands && props.source ? new URL(`/__nuxt_island/${key2}.json`, props.source).href : `/__nuxt_island/${key2}.json`;
+      const url = remoteComponentIslands && props.source ? joinURL(props.source, `/__nuxt_island/${key2}.json`) : `/__nuxt_island/${key2}.json`;
       if (import.meta.server && import.meta.prerender) {
         nuxtApp.runWithContext(() => prerenderRoutes(url));
       }
@@ -175,23 +193,28 @@ export default defineComponent({
         ...props.context,
         props: props.props ? JSON.stringify(props.props) : void 0
       }));
-      const result = import.meta.server || !import.meta.dev ? await r.json() : r._data;
-      if (import.meta.server && import.meta.prerender) {
-        const hints = r.headers.get("x-nitro-prerender");
-        if (hints) {
-          appendResponseHeader(event, "x-nitro-prerender", hints);
+      try {
+        const result = import.meta.server || !import.meta.dev ? await r.json() : r._data;
+        if (import.meta.server && import.meta.prerender) {
+          const hints = r.headers.get("x-nitro-prerender");
+          if (hints) {
+            appendResponseHeader(event, "x-nitro-prerender", hints);
+          }
+        }
+        setPayload(key2, result);
+        return result;
+      } catch (e) {
+        if (r.status !== 200) {
+          throw new Error(e.toString(), { cause: r });
         }
+        throw e;
       }
-      setPayload(key2, result);
-      return result;
     }
     async function fetchComponent(force = false) {
-      nuxtApp[pKey] = nuxtApp[pKey] || {};
-      if (!nuxtApp[pKey][uid.value]) {
-        nuxtApp[pKey][uid.value] = _fetchComponent(force).finally(() => {
-          delete nuxtApp[pKey][uid.value];
-        });
-      }
+      nuxtApp[pKey] ||= {};
+      nuxtApp[pKey][uid.value] ||= _fetchComponent(force).finally(() => {
+        delete nuxtApp[pKey][uid.value];
+      });
       try {
         const res = await nuxtApp[pKey][uid.value];
         ssrHTML.value = res.html.replaceAll(DATA_ISLAND_UID_RE, `data-island-uid="${uid.value}"`);
@@ -254,7 +277,7 @@ export default defineComponent({
           const isKeyOdd = teleportKey.value === 0 || !!(teleportKey.value && !(teleportKey.value % 2));
           if (uid.value && html.value && (import.meta.server || props.lazy ? canTeleport : mounted.value || instance.vnode?.el)) {
             for (const slot in slots) {
-              if (availableSlots.value.includes(slot)) {
+              if (availableSlots.value.has(slot)) {
                 teleports.push(
                   createVNode(
                     Teleport,
diff --git a/node_modules/nuxt/dist/app/components/nuxt-layout.d.ts b/node_modules/nuxt/dist/app/components/nuxt-layout.d.ts
index 9611788..91b9326 100644
--- a/node_modules/nuxt/dist/app/components/nuxt-layout.d.ts
+++ b/node_modules/nuxt/dist/app/components/nuxt-layout.d.ts
@@ -1,6 +1,14 @@
-import type { DefineComponent, MaybeRef } from 'vue';
+import type { DefineComponent, ExtractPublicPropTypes, MaybeRef, PropType } from 'vue';
 import type { PageMeta } from '../../pages/runtime/composables.js';
-declare const _default: DefineComponent<{
-    name?: (unknown extends PageMeta["layout"] ? MaybeRef<string | false> : PageMeta["layout"]) | undefined;
-}>;
+declare const nuxtLayoutProps: {
+    name: {
+        type: PropType<unknown extends PageMeta["layout"] ? MaybeRef<string | false> : PageMeta["layout"]>;
+        default: null;
+    };
+    fallback: {
+        type: PropType<unknown extends PageMeta["layout"] ? MaybeRef<string> : PageMeta["layout"]>;
+        default: null;
+    };
+};
+declare const _default: DefineComponent<ExtractPublicPropTypes<typeof nuxtLayoutProps>>;
 export default _default;
diff --git a/node_modules/nuxt/dist/app/components/nuxt-layout.js b/node_modules/nuxt/dist/app/components/nuxt-layout.js
index 50a73d0..6a62069 100644
--- a/node_modules/nuxt/dist/app/components/nuxt-layout.js
+++ b/node_modules/nuxt/dist/app/components/nuxt-layout.js
@@ -1,7 +1,7 @@
-import { Suspense, Transition, computed, defineComponent, h, inject, mergeProps, nextTick, onMounted, provide, ref, unref } from "vue";
+import { Suspense, computed, defineComponent, h, inject, mergeProps, nextTick, onMounted, provide, shallowReactive, shallowRef, unref } from "vue";
 import { useRoute, useRouter } from "../composables/router.js";
 import { useNuxtApp } from "../nuxt.js";
-import { _wrapIf } from "./utils.js";
+import { _wrapInTransition } from "./utils.js";
 import { LayoutMetaSymbol, PageRouteSymbol } from "./injections.js";
 import { useRoute as useVueRouterRoute } from "#build/pages";
 import layouts from "#build/layouts";
@@ -13,30 +13,31 @@ const LayoutLoader = defineComponent({
     name: String,
     layoutProps: Object
   },
-  async setup(props, context) {
-    const LayoutComponent = await layouts[props.name]().then((r) => r.default || r);
-    return () => h(LayoutComponent, props.layoutProps, context.slots);
+  setup(props, context) {
+    return () => h(layouts[props.name], props.layoutProps, context.slots);
   }
 });
+const nuxtLayoutProps = {
+  name: {
+    type: [String, Boolean, Object],
+    default: null
+  },
+  fallback: {
+    type: [String, Object],
+    default: null
+  }
+};
 export default defineComponent({
   name: "NuxtLayout",
   inheritAttrs: false,
-  props: {
-    name: {
-      type: [String, Boolean, Object],
-      default: null
-    },
-    fallback: {
-      type: [String, Object],
-      default: null
-    }
-  },
+  props: nuxtLayoutProps,
   setup(props, context) {
     const nuxtApp = useNuxtApp();
     const injectedRoute = inject(PageRouteSymbol);
-    const route = injectedRoute === useRoute() ? useVueRouterRoute() : injectedRoute;
+    const shouldUseEagerRoute = !injectedRoute || injectedRoute === useRoute();
+    const route = shouldUseEagerRoute ? useVueRouterRoute() : injectedRoute;
     const layout = computed(() => {
-      let layout2 = unref(props.name) ?? route.meta.layout ?? "default";
+      let layout2 = unref(props.name) ?? route?.meta.layout ?? "default";
       if (layout2 && !(layout2 in layouts)) {
         if (import.meta.dev && layout2 !== "default") {
           console.warn(`Invalid layout \`${layout2}\` selected.`);
@@ -47,7 +48,7 @@ export default defineComponent({
       }
       return layout2;
     });
-    const layoutRef = ref();
+    const layoutRef = shallowRef();
     context.expose({ layoutRef });
     const done = nuxtApp.deferHydration();
     if (import.meta.client && nuxtApp.isHydrating) {
@@ -57,10 +58,13 @@ export default defineComponent({
     if (import.meta.dev) {
       nuxtApp._isNuxtLayoutUsed = true;
     }
+    let lastLayout;
     return () => {
       const hasLayout = layout.value && layout.value in layouts;
-      const transitionProps = route.meta.layoutTransition ?? defaultLayoutTransition;
-      return _wrapIf(Transition, hasLayout && transitionProps, {
+      const transitionProps = route?.meta.layoutTransition ?? defaultLayoutTransition;
+      const previouslyRenderedLayout = lastLayout;
+      lastLayout = layout.value;
+      return _wrapInTransition(hasLayout && transitionProps, {
         default: () => h(Suspense, { suspensible: true, onResolve: () => {
           nextTick(done);
         } }, {
@@ -71,6 +75,9 @@ export default defineComponent({
               key: layout.value || void 0,
               name: layout.value,
               shouldProvide: !props.name,
+              isRenderingNewLayout: (name) => {
+                return name !== previouslyRenderedLayout && name === layout.value;
+              },
               hasTransition: !!transitionProps
             },
             context.slots
@@ -95,6 +102,10 @@ const LayoutProvider = defineComponent({
     },
     shouldProvide: {
       type: Boolean
+    },
+    isRenderingNewLayout: {
+      type: Function,
+      required: true
     }
   },
   setup(props, context) {
@@ -104,6 +115,22 @@ const LayoutProvider = defineComponent({
         isCurrent: (route) => name === (route.meta.layout ?? "default")
       });
     }
+    const injectedRoute = inject(PageRouteSymbol);
+    const isNotWithinNuxtPage = injectedRoute && injectedRoute === useRoute();
+    if (isNotWithinNuxtPage) {
+      const vueRouterRoute = useVueRouterRoute();
+      const reactiveChildRoute = {};
+      for (const _key in vueRouterRoute) {
+        const key = _key;
+        Object.defineProperty(reactiveChildRoute, key, {
+          enumerable: true,
+          get: () => {
+            return props.isRenderingNewLayout(props.name) ? vueRouterRoute[key] : injectedRoute[key];
+          }
+        });
+      }
+      provide(PageRouteSymbol, shallowReactive(reactiveChildRoute));
+    }
     let vnode;
     if (import.meta.dev && import.meta.client) {
       onMounted(() => {
diff --git a/node_modules/nuxt/dist/app/components/nuxt-link.d.ts b/node_modules/nuxt/dist/app/components/nuxt-link.d.ts
index 17da99b..b90a4b8 100644
--- a/node_modules/nuxt/dist/app/components/nuxt-link.d.ts
+++ b/node_modules/nuxt/dist/app/components/nuxt-link.d.ts
@@ -1,10 +1,12 @@
-import type { DefineComponent } from 'vue';
-import type { RouteLocationRaw, RouterLinkProps } from 'vue-router';
+import type { DefineSetupFnComponent, SlotsType, UnwrapRef, VNode } from 'vue';
+import type { RouteLocation, RouteLocationRaw, RouterLinkProps, UseLinkReturn } from 'vue-router';
+import type { NuxtApp } from '../nuxt.js';
 /**
  * `<NuxtLink>` is a drop-in replacement for both Vue Router's `<RouterLink>` component and HTML's `<a>` tag.
  * @see https://nuxt.com/docs/api/components/nuxt-link
  */
-export interface NuxtLinkProps extends Omit<RouterLinkProps, 'to'> {
+export interface NuxtLinkProps<CustomProp extends boolean = false> extends Omit<RouterLinkProps, 'to'> {
+    custom?: CustomProp;
     /**
      * Route Location the link should navigate to when clicked on.
      */
@@ -48,6 +50,11 @@ export interface NuxtLinkProps extends Omit<RouterLinkProps, 'to'> {
      * Escape hatch to disable `prefetch` attribute.
      */
     noPrefetch?: boolean;
+    /**
+     * An option to either add or remove trailing slashes in the `href` for this specific link.
+     * Overrides the global `trailingSlash` option if provided.
+     */
+    trailingSlash?: 'append' | 'remove';
 }
 /**
  * Create a NuxtLink component with given options as defaults.
@@ -73,6 +80,22 @@ export interface NuxtLinkOptions extends Partial<Pick<RouterLinkProps, 'activeCl
      */
     prefetchOn?: Exclude<NuxtLinkProps['prefetchOn'], string>;
 }
-export declare function defineNuxtLink(options: NuxtLinkOptions): DefineComponent<NuxtLinkProps>;
-declare const _default: DefineComponent<NuxtLinkProps>;
+type NuxtLinkDefaultSlotProps<CustomProp extends boolean = false> = CustomProp extends true ? {
+    href: string;
+    navigate: (e?: MouseEvent) => Promise<void>;
+    prefetch: (nuxtApp?: NuxtApp) => Promise<void>;
+    route: (RouteLocation & {
+        href: string;
+    }) | undefined;
+    rel: string | null;
+    target: '_blank' | '_parent' | '_self' | '_top' | (string & {}) | null;
+    isExternal: boolean;
+    isActive: false;
+    isExactActive: false;
+} : UnwrapRef<UseLinkReturn>;
+type NuxtLinkSlots<CustomProp extends boolean = false> = {
+    default?: (props: NuxtLinkDefaultSlotProps<CustomProp>) => VNode[];
+};
+export declare function defineNuxtLink(options: NuxtLinkOptions): (new <CustomProp extends boolean = false>(props: NuxtLinkProps<CustomProp>) => InstanceType<DefineSetupFnComponent<NuxtLinkProps<CustomProp>, [], SlotsType<NuxtLinkSlots<CustomProp>>>>) & Record<string, any>;
+declare const _default: (new <CustomProp extends boolean = false>(props: NuxtLinkProps<CustomProp>) => InstanceType<DefineSetupFnComponent<NuxtLinkProps<CustomProp>, [], SlotsType<NuxtLinkSlots<CustomProp>>>>) & Record<string, any>;
 export default _default;
diff --git a/node_modules/nuxt/dist/app/components/nuxt-link.js b/node_modules/nuxt/dist/app/components/nuxt-link.js
index 7b3c525..ebfa404 100644
--- a/node_modules/nuxt/dist/app/components/nuxt-link.js
+++ b/node_modules/nuxt/dist/app/components/nuxt-link.js
@@ -1,4 +1,4 @@
-import { computed, defineComponent, h, inject, onBeforeUnmount, onMounted, provide, ref, resolveComponent } from "vue";
+import { computed, defineComponent, h, inject, onBeforeUnmount, onMounted, provide, ref, resolveComponent, shallowRef } from "vue";
 import { hasProtocol, joinURL, parseQuery, withTrailingSlash, withoutTrailingSlash } from "ufo";
 import { preloadRouteComponents } from "../composables/preload.js";
 import { onNuxtReady } from "../composables/ready.js";
@@ -6,6 +6,7 @@ import { navigateTo, resolveRouteObject, useRouter } from "../composables/router
 import { useNuxtApp, useRuntimeConfig } from "../nuxt.js";
 import { cancelIdleCallback, requestIdleCallback } from "../compat/idle-callback.js";
 import { nuxtLinkDefaults } from "#build/nuxt.config.mjs";
+import { hashMode } from "#build/router.options";
 const firstNonUndefined = (...args) => args.find((arg) => arg !== void 0);
 const NuxtLinkDevKeySymbol = Symbol("nuxt-link-dev-key");
 // @__NO_SIDE_EFFECTS__
@@ -16,19 +17,23 @@ export function defineNuxtLink(options) {
       console.warn(`[${componentName}] \`${main}\` and \`${sub}\` cannot be used together. \`${sub}\` will be ignored.`);
     }
   }
-  function resolveTrailingSlashBehavior(to, resolve) {
-    if (!to || options.trailingSlash !== "append" && options.trailingSlash !== "remove") {
+  function isHashLinkWithoutHashMode(link) {
+    return !hashMode && typeof link === "string" && link.startsWith("#");
+  }
+  function resolveTrailingSlashBehavior(to, resolve, trailingSlash) {
+    const effectiveTrailingSlash = trailingSlash ?? options.trailingSlash;
+    if (!to || effectiveTrailingSlash !== "append" && effectiveTrailingSlash !== "remove") {
       return to;
     }
     if (typeof to === "string") {
-      return applyTrailingSlashBehavior(to, options.trailingSlash);
+      return applyTrailingSlashBehavior(to, effectiveTrailingSlash);
     }
     const path = "path" in to && to.path !== void 0 ? to.path : resolve(to).path;
     const resolvedPath = {
       ...to,
       name: void 0,
       // named routes would otherwise always override trailing slash behavior
-      path: applyTrailingSlashBehavior(path, options.trailingSlash)
+      path: applyTrailingSlashBehavior(path, effectiveTrailingSlash)
     };
     return resolvedPath;
   }
@@ -58,30 +63,23 @@ export function defineNuxtLink(options) {
       if (isExternal.value) {
         return path;
       }
-      return resolveTrailingSlashBehavior(path, router.resolve);
+      return resolveTrailingSlashBehavior(path, router.resolve, props.trailingSlash);
     });
     const link = isExternal.value ? void 0 : useBuiltinLink?.({ ...props, to });
     const href = computed(() => {
-      if (!to.value || isAbsoluteUrl.value) {
+      const effectiveTrailingSlash = props.trailingSlash ?? options.trailingSlash;
+      if (!to.value || isAbsoluteUrl.value || isHashLinkWithoutHashMode(to.value)) {
         return to.value;
       }
       if (isExternal.value) {
         const path = typeof to.value === "object" && "path" in to.value ? resolveRouteObject(to.value) : to.value;
         const href2 = typeof path === "object" ? router.resolve(path).href : path;
-        return resolveTrailingSlashBehavior(
-          href2,
-          router.resolve
-          /* will not be called */
-        );
+        return applyTrailingSlashBehavior(href2, effectiveTrailingSlash);
       }
       if (typeof to.value === "object") {
         return router.resolve(to.value)?.href ?? null;
       }
-      return resolveTrailingSlashBehavior(
-        joinURL(config.app.baseURL, to.value),
-        router.resolve
-        /* will not be called */
-      );
+      return applyTrailingSlashBehavior(joinURL(config.app.baseURL, to.value), effectiveTrailingSlash);
     });
     return {
       to,
@@ -93,7 +91,7 @@ export function defineNuxtLink(options) {
       isActive: link?.isActive ?? computed(() => to.value === router.currentRoute.value.path),
       isExactActive: link?.isExactActive ?? computed(() => to.value === router.currentRoute.value.path),
       route: link?.route ?? computed(() => router.resolve(to.value)),
-      async navigate() {
+      async navigate(_e) {
         await navigateTo(href.value, { replace: props.replace, external: isExternal.value || hasTarget.value });
       }
     };
@@ -182,21 +180,33 @@ export function defineNuxtLink(options) {
         type: Boolean,
         default: void 0,
         required: false
+      },
+      // Behavior
+      trailingSlash: {
+        type: String,
+        default: void 0,
+        required: false
       }
     },
     useLink: useNuxtLink,
     setup(props, { slots }) {
       const router = useRouter();
       const { to, href, navigate, isExternal, hasTarget, isAbsoluteUrl } = useNuxtLink(props);
-      const prefetched = ref(false);
+      const prefetched = shallowRef(false);
       const el = import.meta.server ? void 0 : ref(null);
       const elRef = import.meta.server ? void 0 : (ref2) => {
         el.value = props.custom ? ref2?.$el?.nextElementSibling : ref2?.$el;
       };
       function shouldPrefetch(mode) {
+        if (import.meta.server) {
+          return;
+        }
         return !prefetched.value && (typeof props.prefetchOn === "string" ? props.prefetchOn === mode : props.prefetchOn?.[mode] ?? options.prefetchOn?.[mode]) && (props.prefetch ?? options.prefetch) !== false && props.noPrefetch !== true && props.target !== "_blank" && !isSlowConnection();
       }
       async function prefetch(nuxtApp = useNuxtApp()) {
+        if (import.meta.server) {
+          return;
+        }
         if (prefetched.value) {
           return;
         }
@@ -248,7 +258,7 @@ export function defineNuxtLink(options) {
         }
       }
       return () => {
-        if (!isExternal.value && !hasTarget.value) {
+        if (!isExternal.value && !hasTarget.value && !isHashLinkWithoutHashMode(to.value)) {
           const routerLinkProps = {
             ref: elRef,
             to: to.value,
@@ -259,12 +269,14 @@ export function defineNuxtLink(options) {
             custom: props.custom
           };
           if (!props.custom) {
-            if (shouldPrefetch("interaction")) {
-              routerLinkProps.onPointerenter = prefetch.bind(null, void 0);
-              routerLinkProps.onFocus = prefetch.bind(null, void 0);
-            }
-            if (prefetched.value) {
-              routerLinkProps.class = props.prefetchedClass || options.prefetchedClass;
+            if (import.meta.client) {
+              if (shouldPrefetch("interaction")) {
+                routerLinkProps.onPointerenter = prefetch.bind(null, void 0);
+                routerLinkProps.onFocus = prefetch.bind(null, void 0);
+              }
+              if (prefetched.value) {
+                routerLinkProps.class = props.prefetchedClass || options.prefetchedClass;
+              }
             }
             routerLinkProps.rel = props.rel || void 0;
           }
@@ -321,9 +333,23 @@ export function defineNuxtLink(options) {
             isExactActive: false
           });
         }
-        return h("a", { ref: el, href: href.value || null, rel, target }, slots.default?.());
+        return h("a", {
+          ref: el,
+          href: href.value || null,
+          // converts `""` to `null` to prevent the attribute from being added as empty (`href=""`)
+          rel,
+          target,
+          onClick: (event) => {
+            if (isExternal.value || hasTarget.value) {
+              return;
+            }
+            event.preventDefault();
+            return props.replace ? router.replace(href.value) : router.push(href.value);
+          }
+        }, slots.default?.());
       };
     }
+    // }) as unknown as DefineComponent<NuxtLinkProps, object, object, ComputedOptions, MethodOptions, object, object, EmitsOptions, string, object, NuxtLinkProps, object, SlotsType<NuxtLinkSlots>>
   });
 }
 export default /* @__PURE__ */ defineNuxtLink(nuxtLinkDefaults);
@@ -346,24 +372,22 @@ function useObserver() {
   let observer = null;
   const callbacks = /* @__PURE__ */ new Map();
   const observe = (element, callback) => {
-    if (!observer) {
-      observer = new IntersectionObserver((entries) => {
-        for (const entry of entries) {
-          const callback2 = callbacks.get(entry.target);
-          const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;
-          if (isVisible && callback2) {
-            callback2();
-          }
+    observer ||= new IntersectionObserver((entries) => {
+      for (const entry of entries) {
+        const callback2 = callbacks.get(entry.target);
+        const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;
+        if (isVisible && callback2) {
+          callback2();
         }
-      });
-    }
+      }
+    });
     callbacks.set(element, callback);
     observer.observe(element);
     return () => {
       callbacks.delete(element);
-      observer.unobserve(element);
+      observer?.unobserve(element);
       if (callbacks.size === 0) {
-        observer.disconnect();
+        observer?.disconnect();
         observer = null;
       }
     };
diff --git a/node_modules/nuxt/dist/app/components/nuxt-loading-indicator.d.ts b/node_modules/nuxt/dist/app/components/nuxt-loading-indicator.d.ts
index 10f1341..9a45849 100644
--- a/node_modules/nuxt/dist/app/components/nuxt-loading-indicator.d.ts
+++ b/node_modules/nuxt/dist/app/components/nuxt-loading-indicator.d.ts
@@ -7,6 +7,14 @@ declare const _default: import("vue").DefineComponent<import("vue").ExtractPropT
         type: NumberConstructor;
         default: number;
     };
+    hideDelay: {
+        type: NumberConstructor;
+        default: number;
+    };
+    resetDelay: {
+        type: NumberConstructor;
+        default: number;
+    };
     height: {
         type: NumberConstructor;
         default: number;
@@ -34,6 +42,14 @@ declare const _default: import("vue").DefineComponent<import("vue").ExtractPropT
         type: NumberConstructor;
         default: number;
     };
+    hideDelay: {
+        type: NumberConstructor;
+        default: number;
+    };
+    resetDelay: {
+        type: NumberConstructor;
+        default: number;
+    };
     height: {
         type: NumberConstructor;
         default: number;
@@ -51,10 +67,12 @@ declare const _default: import("vue").DefineComponent<import("vue").ExtractPropT
         required: false;
     };
 }>> & Readonly<{}>, {
-    color: string | boolean;
-    height: number;
     duration: number;
+    height: number;
     throttle: number;
+    hideDelay: number;
+    resetDelay: number;
+    color: string | boolean;
     errorColor: string;
 }, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
 export default _default;
diff --git a/node_modules/nuxt/dist/app/components/nuxt-loading-indicator.js b/node_modules/nuxt/dist/app/components/nuxt-loading-indicator.js
index 13e83d7..d370322 100644
--- a/node_modules/nuxt/dist/app/components/nuxt-loading-indicator.js
+++ b/node_modules/nuxt/dist/app/components/nuxt-loading-indicator.js
@@ -1,5 +1,5 @@
 import { defineComponent, h } from "vue";
-import { useLoadingIndicator } from "#app/composables/loading-indicator";
+import { useLoadingIndicator } from "../composables/loading-indicator.js";
 export default defineComponent({
   name: "NuxtLoadingIndicator",
   props: {
@@ -11,6 +11,14 @@ export default defineComponent({
       type: Number,
       default: 2e3
     },
+    hideDelay: {
+      type: Number,
+      default: 500
+    },
+    resetDelay: {
+      type: Number,
+      default: 400
+    },
     height: {
       type: Number,
       default: 3
@@ -32,6 +40,8 @@ export default defineComponent({
     const { progress, isLoading, error, start, finish, clear } = useLoadingIndicator({
       duration: props.duration,
       throttle: props.throttle,
+      hideDelay: props.hideDelay,
+      resetDelay: props.resetDelay,
       estimatedProgress: props.estimatedProgress
     });
     expose({
diff --git a/node_modules/nuxt/dist/app/components/nuxt-root.vue b/node_modules/nuxt/dist/app/components/nuxt-root.vue
index eefe5fe..3d28794 100644
--- a/node_modules/nuxt/dist/app/components/nuxt-root.vue
+++ b/node_modules/nuxt/dist/app/components/nuxt-root.vue
@@ -18,53 +18,43 @@
 </template>
 
 <script setup>
-import { defineAsyncComponent, onErrorCaptured, onServerPrefetch, provide } from 'vue'
-import { useNuxtApp } from '../nuxt'
-import { isNuxtError, showError, useError } from '../composables/error'
-import { useRoute, useRouter } from '../composables/router'
-import { PageRouteSymbol } from '../components/injections'
-import AppComponent from '#build/app-component.mjs'
-import ErrorComponent from '#build/error-component.mjs'
-// @ts-expect-error virtual file
-import { componentIslands } from '#build/nuxt.config.mjs'
-
-const IslandRenderer = import.meta.server && componentIslands
-  ? defineAsyncComponent(() => import('./island-renderer').then(r => r.default || r))
-  : () => null
-
-const nuxtApp = useNuxtApp()
-const onResolve = nuxtApp.deferHydration()
+import { defineAsyncComponent, onErrorCaptured, onServerPrefetch, provide } from "vue";
+import { useNuxtApp } from "../nuxt";
+import { isNuxtError, showError, useError } from "../composables/error";
+import { useRoute, useRouter } from "../composables/router";
+import { PageRouteSymbol } from "../components/injections";
+import AppComponent from "#build/app-component.mjs";
+import ErrorComponent from "#build/error-component.mjs";
+import { componentIslands } from "#build/nuxt.config.mjs";
+const IslandRenderer = import.meta.server && componentIslands ? defineAsyncComponent(() => import("./island-renderer").then((r) => r.default || r)) : () => null;
+const nuxtApp = useNuxtApp();
+const onResolve = nuxtApp.deferHydration();
 if (import.meta.client && nuxtApp.isHydrating) {
-  const removeErrorHook = nuxtApp.hooks.hookOnce('app:error', onResolve)
-  useRouter().beforeEach(removeErrorHook)
+  const removeErrorHook = nuxtApp.hooks.hookOnce("app:error", onResolve);
+  useRouter().beforeEach(removeErrorHook);
 }
-
-const url = import.meta.server ? nuxtApp.ssrContext.url : window.location.pathname
-const SingleRenderer = import.meta.test && import.meta.dev && import.meta.server && url.startsWith('/__nuxt_component_test__/') && defineAsyncComponent(() => import('#build/test-component-wrapper.mjs')
-  .then(r => r.default(import.meta.server ? url : window.location.href)))
-
-// Inject default route (outside of pages) as active route
-provide(PageRouteSymbol, useRoute())
-
-// vue:setup hook
-const results = nuxtApp.hooks.callHookWith(hooks => hooks.map(hook => hook()), 'vue:setup')
-if (import.meta.dev && results && results.some(i => i && 'then' in i)) {
-  console.error('[nuxt] Error in `vue:setup`. Callbacks must be synchronous.')
+const url = import.meta.server ? nuxtApp.ssrContext.url : window.location.pathname;
+const SingleRenderer = import.meta.test && import.meta.dev && import.meta.server && url.startsWith("/__nuxt_component_test__/") && defineAsyncComponent(() => import("#build/test-component-wrapper.mjs").then((r) => r.default(import.meta.server ? url : window.location.href)));
+provide(PageRouteSymbol, useRoute());
+const results = nuxtApp.hooks.callHookWith((hooks) => hooks.map((hook) => hook()), "vue:setup");
+if (import.meta.dev && results && results.some((i) => i && "then" in i)) {
+  console.error("[nuxt] Error in `vue:setup`. Callbacks must be synchronous.");
 }
-
-// error handling
-const error = useError()
-// render an empty <div> when plugins have thrown an error but we're not yet rendering the error page
-const abortRender = import.meta.server && error.value && !nuxtApp.ssrContext.error
+const error = useError();
+const abortRender = import.meta.server && error.value && !nuxtApp.ssrContext.error;
+const BOT_RE = /bot\b|chrome-lighthouse|facebookexternalhit|google\b/i;
 onErrorCaptured((err, target, info) => {
-  nuxtApp.hooks.callHook('vue:error', err, target, info).catch(hookError => console.error('[nuxt] Error in `vue:error` hook', hookError))
-  if (import.meta.server || (isNuxtError(err) && (err.fatal || err.unhandled))) {
-    const p = nuxtApp.runWithContext(() => showError(err))
-    onServerPrefetch(() => p)
-    return false // suppress error from breaking render
+  nuxtApp.hooks.callHook("vue:error", err, target, info).catch((hookError) => console.error("[nuxt] Error in `vue:error` hook", hookError));
+  if (import.meta.client && BOT_RE.test(navigator.userAgent)) {
+    nuxtApp.hooks.callHook("app:error", err);
+    console.error(`[nuxt] Not rendering error page for bot with user agent \`${navigator.userAgent}\`:`, err);
+    return false;
   }
-})
-
-// Component islands context
-const islandContext = import.meta.server && nuxtApp.ssrContext.islandContext
+  if (import.meta.server || isNuxtError(err) && (err.fatal || err.unhandled)) {
+    const p = nuxtApp.runWithContext(() => showError(err));
+    onServerPrefetch(() => p);
+    return false;
+  }
+});
+const islandContext = import.meta.server && nuxtApp.ssrContext.islandContext;
 </script>
diff --git a/node_modules/nuxt/dist/app/components/nuxt-root.vue.d.ts b/node_modules/nuxt/dist/app/components/nuxt-root.vue.d.ts
new file mode 100644
index 0000000..7711b0c
--- /dev/null
+++ b/node_modules/nuxt/dist/app/components/nuxt-root.vue.d.ts
@@ -0,0 +1,2 @@
+declare const _default: import("vue").DefineComponent<{}, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export default _default;
diff --git a/node_modules/nuxt/dist/app/components/nuxt-route-announcer.d.ts b/node_modules/nuxt/dist/app/components/nuxt-route-announcer.d.ts
index e4834ef..3619f20 100644
--- a/node_modules/nuxt/dist/app/components/nuxt-route-announcer.d.ts
+++ b/node_modules/nuxt/dist/app/components/nuxt-route-announcer.d.ts
@@ -1,4 +1,4 @@
-import type { Politeness } from '#app/composables/route-announcer';
+import type { Politeness } from 'nuxt/app';
 declare const _default: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
     atomic: {
         type: BooleanConstructor;
diff --git a/node_modules/nuxt/dist/app/components/nuxt-route-announcer.js b/node_modules/nuxt/dist/app/components/nuxt-route-announcer.js
index dde7cbb..284bd9b 100644
--- a/node_modules/nuxt/dist/app/components/nuxt-route-announcer.js
+++ b/node_modules/nuxt/dist/app/components/nuxt-route-announcer.js
@@ -1,5 +1,5 @@
 import { defineComponent, h } from "vue";
-import { useRouteAnnouncer } from "#app/composables/route-announcer";
+import { useRouteAnnouncer } from "../composables/route-announcer.js";
 export default defineComponent({
   name: "NuxtRouteAnnouncer",
   props: {
diff --git a/node_modules/nuxt/dist/app/components/nuxt-stubs.js b/node_modules/nuxt/dist/app/components/nuxt-stubs.js
index 7a28695..c1b51a2 100644
--- a/node_modules/nuxt/dist/app/components/nuxt-stubs.js
+++ b/node_modules/nuxt/dist/app/components/nuxt-stubs.js
@@ -3,7 +3,7 @@ function renderStubMessage(name) {
   throw createError({
     fatal: true,
     statusCode: 500,
-    statusMessage: `${name} is provided by @nuxt/image. Check your console to install it or run 'npx nuxi@latest module add @nuxt/image'`
+    statusMessage: `${name} is provided by @nuxt/image. Check your console to install it or run 'npx nuxt module add @nuxt/image'`
   });
 }
 export const NuxtImg = {
diff --git a/node_modules/nuxt/dist/app/components/nuxt-teleport-island-component.d.ts b/node_modules/nuxt/dist/app/components/nuxt-teleport-island-component.d.ts
index 63c1719..a359e70 100644
--- a/node_modules/nuxt/dist/app/components/nuxt-teleport-island-component.d.ts
+++ b/node_modules/nuxt/dist/app/components/nuxt-teleport-island-component.d.ts
@@ -5,10 +5,6 @@ export declare const NuxtTeleportIslandSymbol: InjectionKey<false | string>;
  * this teleport the component in SSR only if it needs to be hydrated on client
  */
 declare const _default: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
-    to: {
-        type: StringConstructor;
-        required: true;
-    };
     nuxtClient: {
         type: BooleanConstructor;
         default: boolean;
@@ -16,10 +12,6 @@ declare const _default: import("vue").DefineComponent<import("vue").ExtractPropT
 }>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
     [key: string]: any;
 }>[] | undefined, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
-    to: {
-        type: StringConstructor;
-        required: true;
-    };
     nuxtClient: {
         type: BooleanConstructor;
         default: boolean;
diff --git a/node_modules/nuxt/dist/app/components/nuxt-teleport-island-component.js b/node_modules/nuxt/dist/app/components/nuxt-teleport-island-component.js
index 3050e3c..99e1218 100644
--- a/node_modules/nuxt/dist/app/components/nuxt-teleport-island-component.js
+++ b/node_modules/nuxt/dist/app/components/nuxt-teleport-island-component.js
@@ -1,15 +1,12 @@
-import { Teleport, defineComponent, h, inject, provide } from "vue";
+import { Teleport, defineComponent, h, inject, provide, useId } from "vue";
 import { useNuxtApp } from "../nuxt.js";
-import { paths } from "#build/components-chunk";
+import paths from "#build/component-chunk";
+import { buildAssetsURL } from "#internal/nuxt/paths";
 export const NuxtTeleportIslandSymbol = Symbol("NuxtTeleportIslandComponent");
 export default defineComponent({
   name: "NuxtTeleportIslandComponent",
   inheritAttrs: false,
   props: {
-    to: {
-      type: String,
-      required: true
-    },
     nuxtClient: {
       type: Boolean,
       default: false
@@ -17,24 +14,25 @@ export default defineComponent({
   },
   setup(props, { slots }) {
     const nuxtApp = useNuxtApp();
+    const to = useId();
     if (!nuxtApp.ssrContext?.islandContext || !props.nuxtClient || inject(NuxtTeleportIslandSymbol, false)) {
       return () => slots.default?.();
     }
-    provide(NuxtTeleportIslandSymbol, props.to);
+    provide(NuxtTeleportIslandSymbol, to);
     const islandContext = nuxtApp.ssrContext.islandContext;
     return () => {
       const slot = slots.default()[0];
       const slotType = slot.type;
       const name = slotType.__name || slotType.name;
-      islandContext.components[props.to] = {
-        chunk: import.meta.dev ? nuxtApp.$config.app.buildAssetsDir + paths[name] : paths[name],
+      islandContext.components[to] = {
+        chunk: import.meta.dev ? buildAssetsURL(paths[name]) : paths[name],
         props: slot.props || {}
       };
       return [h("div", {
         "style": "display: contents;",
         "data-island-uid": "",
-        "data-island-component": props.to
-      }, []), h(Teleport, { to: props.to }, slot)];
+        "data-island-component": to
+      }, []), h(Teleport, { to }, slot)];
     };
   }
 });
diff --git a/node_modules/nuxt/dist/app/components/nuxt-time.vue b/node_modules/nuxt/dist/app/components/nuxt-time.vue
new file mode 100644
index 0000000..904d298
--- /dev/null
+++ b/node_modules/nuxt/dist/app/components/nuxt-time.vue
@@ -0,0 +1,131 @@
+<script setup>
+import { computed, getCurrentInstance, onBeforeUnmount, ref } from "vue";
+import { onPrehydrate } from "../composables/ssr";
+import { useNuxtApp } from "../nuxt";
+const props = defineProps({
+  locale: { type: String, required: false },
+  datetime: { type: [String, Number, Date], required: true },
+  localeMatcher: { type: String, required: false },
+  weekday: { type: String, required: false },
+  era: { type: String, required: false },
+  year: { type: String, required: false },
+  month: { type: String, required: false },
+  day: { type: String, required: false },
+  hour: { type: String, required: false },
+  minute: { type: String, required: false },
+  second: { type: String, required: false },
+  timeZoneName: { type: String, required: false },
+  formatMatcher: { type: String, required: false },
+  hour12: { type: Boolean, required: false, default: void 0 },
+  timeZone: { type: String, required: false },
+  calendar: { type: String, required: false },
+  dayPeriod: { type: String, required: false },
+  numberingSystem: { type: String, required: false },
+  dateStyle: { type: String, required: false },
+  timeStyle: { type: String, required: false },
+  hourCycle: { type: String, required: false },
+  relative: { type: Boolean, required: false },
+  title: { type: [Boolean, String], required: false }
+});
+const el = getCurrentInstance()?.vnode.el;
+const renderedDate = el?.getAttribute("datetime");
+const _locale = el?.getAttribute("data-locale");
+const nuxtApp = useNuxtApp();
+const date = computed(() => {
+  const date2 = props.datetime;
+  if (renderedDate && nuxtApp.isHydrating) {
+    return new Date(renderedDate);
+  }
+  if (!props.datetime) {
+    return /* @__PURE__ */ new Date();
+  }
+  return new Date(date2);
+});
+const now = ref(import.meta.client && nuxtApp.isHydrating && window._nuxtTimeNow ? new Date(window._nuxtTimeNow) : /* @__PURE__ */ new Date());
+if (import.meta.client && props.relative) {
+  const handler = () => {
+    now.value = /* @__PURE__ */ new Date();
+  };
+  const interval = setInterval(handler, 1e3);
+  onBeforeUnmount(() => clearInterval(interval));
+}
+const formatter = computed(() => {
+  const { locale: propsLocale, relative, ...rest } = props;
+  if (relative) {
+    return new Intl.RelativeTimeFormat(_locale ?? propsLocale, rest);
+  }
+  return new Intl.DateTimeFormat(_locale ?? propsLocale, rest);
+});
+const formattedDate = computed(() => {
+  if (props.relative) {
+    const diffInSeconds = (date.value.getTime() - now.value.getTime()) / 1e3;
+    const units = [
+      { unit: "second", value: diffInSeconds },
+      { unit: "minute", value: diffInSeconds / 60 },
+      { unit: "hour", value: diffInSeconds / 3600 },
+      { unit: "day", value: diffInSeconds / 86400 },
+      { unit: "month", value: diffInSeconds / 2592e3 },
+      { unit: "year", value: diffInSeconds / 31536e3 }
+    ];
+    const { unit, value } = units.find(({ value: value2 }) => Math.abs(value2) < 60) || units[units.length - 1];
+    return formatter.value.format(Math.round(value), unit);
+  }
+  return formatter.value.format(date.value);
+});
+const isoDate = computed(() => date.value.toISOString());
+const title = computed(() => props.title === true ? isoDate.value : typeof props.title === "string" ? props.title : void 0);
+const dataset = {};
+if (import.meta.server) {
+  for (const prop in props) {
+    if (prop !== "datetime") {
+      const value = props?.[prop];
+      if (value) {
+        const propInKebabCase = prop.split(/(?=[A-Z])/).join("-");
+        dataset[`data-${propInKebabCase}`] = props?.[prop];
+      }
+    }
+  }
+  onPrehydrate((el2) => {
+    const now2 = window._nuxtTimeNow ||= Date.now();
+    const toCamelCase = (name, index) => {
+      if (index > 0) {
+        return name[0].toUpperCase() + name.slice(1);
+      }
+      return name;
+    };
+    const date2 = new Date(el2.getAttribute("datetime"));
+    const options = {};
+    for (const name of el2.getAttributeNames()) {
+      if (name.startsWith("data-")) {
+        const optionName = name.slice(5).split("-").map(toCamelCase).join("");
+        options[optionName] = el2.getAttribute(name);
+      }
+    }
+    if (options.relative) {
+      const diffInSeconds = (date2.getTime() - now2) / 1e3;
+      const units = [
+        { unit: "second", value: diffInSeconds },
+        { unit: "minute", value: diffInSeconds / 60 },
+        { unit: "hour", value: diffInSeconds / 3600 },
+        { unit: "day", value: diffInSeconds / 86400 },
+        { unit: "month", value: diffInSeconds / 2592e3 },
+        { unit: "year", value: diffInSeconds / 31536e3 }
+      ];
+      const { unit, value } = units.find(({ value: value2 }) => Math.abs(value2) < 60) || units[units.length - 1];
+      const formatter2 = new Intl.RelativeTimeFormat(options.locale, options);
+      el2.textContent = formatter2.format(Math.round(value), unit);
+    } else {
+      const formatter2 = new Intl.DateTimeFormat(options.locale, options);
+      el2.textContent = formatter2.format(date2);
+    }
+  });
+}
+</script>
+
+<template>
+  <time
+    v-bind="dataset"
+    :datetime="isoDate"
+    :title="title"
+  >{{ formattedDate }}</time>
+</template>
diff --git a/node_modules/nuxt/dist/app/components/nuxt-time.vue.d.ts b/node_modules/nuxt/dist/app/components/nuxt-time.vue.d.ts
new file mode 100644
index 0000000..3cf256e
--- /dev/null
+++ b/node_modules/nuxt/dist/app/components/nuxt-time.vue.d.ts
@@ -0,0 +1,34 @@
+export interface NuxtTimeProps {
+    locale?: string;
+    datetime: string | number | Date;
+    localeMatcher?: 'best fit' | 'lookup';
+    weekday?: 'long' | 'short' | 'narrow';
+    era?: 'long' | 'short' | 'narrow';
+    year?: 'numeric' | '2-digit';
+    month?: 'numeric' | '2-digit' | 'long' | 'short' | 'narrow';
+    day?: 'numeric' | '2-digit';
+    hour?: 'numeric' | '2-digit';
+    minute?: 'numeric' | '2-digit';
+    second?: 'numeric' | '2-digit';
+    timeZoneName?: 'short' | 'long' | 'shortOffset' | 'longOffset' | 'shortGeneric' | 'longGeneric';
+    formatMatcher?: 'best fit' | 'basic';
+    hour12?: boolean;
+    timeZone?: string;
+    calendar?: string;
+    dayPeriod?: 'narrow' | 'short' | 'long';
+    numberingSystem?: string;
+    dateStyle?: 'full' | 'long' | 'medium' | 'short';
+    timeStyle?: 'full' | 'long' | 'medium' | 'short';
+    hourCycle?: 'h11' | 'h12' | 'h23' | 'h24';
+    relative?: boolean;
+    title?: boolean | string;
+}
+declare global {
+    interface Window {
+        _nuxtTimeNow?: number;
+    }
+}
+declare const _default: import("vue").DefineComponent<NuxtTimeProps, void, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<NuxtTimeProps> & Readonly<{}>, {
+    hour12: boolean;
+}, {}, {}, {}, string, import("vue").ComponentProvideOptions, false, {}, any>;
+export default _default;
diff --git a/node_modules/nuxt/dist/app/components/route-provider.d.ts b/node_modules/nuxt/dist/app/components/route-provider.d.ts
index b0b57e2..0dce8c8 100644
--- a/node_modules/nuxt/dist/app/components/route-provider.d.ts
+++ b/node_modules/nuxt/dist/app/components/route-provider.d.ts
@@ -1,28 +1,45 @@
 import type { Ref, VNode } from 'vue';
 import type { RouteLocationNormalizedLoaded } from 'vue-router';
-export declare const RouteProvider: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
-    vnode: {
-        type: () => VNode;
-        required: true;
-    };
+export declare const defineRouteProvider: (name?: string) => import("vue").DefineComponent<import("vue").ExtractPropTypes<{
     route: {
         type: () => RouteLocationNormalizedLoaded;
         required: true;
     };
+    vnode: () => VNode;
     vnodeRef: () => Ref<any>;
     renderKey: StringConstructor;
     trackRootNodes: BooleanConstructor;
 }>, () => VNode<import("vue").RendererNode, import("vue").RendererElement, {
     [key: string]: any;
-}>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
-    vnode: {
-        type: () => VNode;
+}> | undefined, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
+    route: {
+        type: () => RouteLocationNormalizedLoaded;
         required: true;
     };
+    vnode: () => VNode;
+    vnodeRef: () => Ref<any>;
+    renderKey: StringConstructor;
+    trackRootNodes: BooleanConstructor;
+}>> & Readonly<{}>, {
+    trackRootNodes: boolean;
+}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export declare const RouteProvider: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
+    route: {
+        type: () => RouteLocationNormalizedLoaded;
+        required: true;
+    };
+    vnode: () => VNode;
+    vnodeRef: () => Ref<any>;
+    renderKey: StringConstructor;
+    trackRootNodes: BooleanConstructor;
+}>, () => VNode<import("vue").RendererNode, import("vue").RendererElement, {
+    [key: string]: any;
+}> | undefined, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
     route: {
         type: () => RouteLocationNormalizedLoaded;
         required: true;
     };
+    vnode: () => VNode;
     vnodeRef: () => Ref<any>;
     renderKey: StringConstructor;
     trackRootNodes: BooleanConstructor;
diff --git a/node_modules/nuxt/dist/app/components/route-provider.js b/node_modules/nuxt/dist/app/components/route-provider.js
index 8b05026..8e5f570 100644
--- a/node_modules/nuxt/dist/app/components/route-provider.js
+++ b/node_modules/nuxt/dist/app/components/route-provider.js
@@ -1,15 +1,13 @@
 import { defineComponent, h, nextTick, onMounted, provide, shallowReactive } from "vue";
 import { PageRouteSymbol } from "./injections.js";
-export const RouteProvider = defineComponent({
+export const defineRouteProvider = (name = "RouteProvider") => defineComponent({
+  name,
   props: {
-    vnode: {
-      type: Object,
-      required: true
-    },
     route: {
       type: Object,
       required: true
     },
+    vnode: Object,
     vnodeRef: Object,
     renderKey: String,
     trackRootNodes: Boolean
@@ -30,13 +28,16 @@ export const RouteProvider = defineComponent({
       onMounted(() => {
         nextTick(() => {
           if (["#comment", "#text"].includes(vnode?.el?.nodeName)) {
-            const filename = (vnode?.type).__file;
+            const filename = vnode?.type?.__file;
             console.warn(`[nuxt] \`${filename}\` does not have a single root node and will cause errors when navigating between routes.`);
           }
         });
       });
     }
     return () => {
+      if (!props.vnode) {
+        return props.vnode;
+      }
       if (import.meta.dev && import.meta.client) {
         vnode = h(props.vnode, { ref: props.vnodeRef });
         return vnode;
@@ -45,3 +46,4 @@ export const RouteProvider = defineComponent({
     };
   }
 });
+export const RouteProvider = defineRouteProvider();
diff --git a/node_modules/nuxt/dist/app/components/utils.d.ts b/node_modules/nuxt/dist/app/components/utils.d.ts
index 5e4e57e..e44c8cb 100644
--- a/node_modules/nuxt/dist/app/components/utils.d.ts
+++ b/node_modules/nuxt/dist/app/components/utils.d.ts
@@ -1,10 +1,10 @@
-import type { Component, RendererNode } from 'vue';
+import type { RendererNode, VNode } from 'vue';
 import type { RouteLocationNormalized } from 'vue-router';
 /**
  * Internal utility
  * @private
  */
-export declare const _wrapIf: (component: Component, props: any, slots: any) => {
+export declare const _wrapInTransition: (props: any, children: any) => {
     default: () => any;
 };
 /**
@@ -34,6 +34,15 @@ export declare function vforToArray(source: any): any[];
  * Handles `<!--[-->` Fragment elements
  * @param element the element to retrieve the HTML
  * @param withoutSlots purge all slots from the HTML string retrieved
- * @returns {string[]} An array of string which represent the content of each element. Use `.join('')` to retrieve a component vnode.el HTML
+ * @returns {string[]|undefined} An array of string which represent the content of each element. Use `.join('')` to retrieve a component vnode.el HTML
  */
-export declare function getFragmentHTML(element: RendererNode | null, withoutSlots?: boolean): string[] | null;
+export declare function getFragmentHTML(element: RendererNode | null, withoutSlots?: boolean): string[] | undefined;
+/**
+ * Return a static vnode from an element
+ * Default to a div if the element is not found and if a fallback is not provided
+ * @param el renderer node retrieved from the component internal instance
+ * @param staticNodeFallback fallback string to use if the element is not found. Must be a valid HTML string
+ */
+export declare function elToStaticVNode(el: RendererNode | null, staticNodeFallback?: string): VNode;
+export declare function isStartFragment(element: RendererNode): boolean;
+export declare function isEndFragment(element: RendererNode): boolean;
diff --git a/node_modules/nuxt/dist/app/components/utils.js b/node_modules/nuxt/dist/app/components/utils.js
index 9bd014e..a1404a6 100644
--- a/node_modules/nuxt/dist/app/components/utils.js
+++ b/node_modules/nuxt/dist/app/components/utils.js
@@ -1,9 +1,8 @@
-import { h } from "vue";
+import { Transition, createStaticVNode, h } from "vue";
 import { isString, isPromise, isArray, isObject } from "@vue/shared";
 import { START_LOCATION } from "#build/pages";
-export const _wrapIf = (component, props, slots) => {
-  props = props === true ? {} : props;
-  return { default: () => props ? h(component, props, slots) : slots.default?.() };
+export const _wrapInTransition = (props, children) => {
+  return { default: () => import.meta.client && props ? h(Transition, props === true ? {} : props, children) : children.default?.() };
 };
 const ROUTE_KEY_PARENTHESES_RE = /(:\w+)\([^)]+\)/g;
 const ROUTE_KEY_SYMBOLS_RE = /(:\w+)[?+*]/g;
@@ -94,7 +93,6 @@ export function getFragmentHTML(element, withoutSlots = false) {
     }
     return [element.outerHTML];
   }
-  return null;
 }
 function getFragmentChildren(element, blocks = [], withoutSlots = false) {
   if (element && element.nodeName) {
@@ -103,7 +101,7 @@ function getFragmentChildren(element, blocks = [], withoutSlots = false) {
     } else if (!isStartFragment(element)) {
       const clone = element.cloneNode(true);
       if (withoutSlots) {
-        clone.querySelectorAll("[data-island-slot]").forEach((n) => {
+        clone.querySelectorAll?.("[data-island-slot]").forEach((n) => {
           n.innerHTML = "";
         });
       }
@@ -113,9 +111,16 @@ function getFragmentChildren(element, blocks = [], withoutSlots = false) {
   }
   return blocks;
 }
-function isStartFragment(element) {
+export function elToStaticVNode(el, staticNodeFallback) {
+  const fragment = el ? getFragmentHTML(el) : staticNodeFallback ? [staticNodeFallback] : void 0;
+  if (fragment) {
+    return createStaticVNode(fragment.join(""), fragment.length);
+  }
+  return h("div");
+}
+export function isStartFragment(element) {
   return element.nodeName === "#comment" && element.nodeValue === "[";
 }
-function isEndFragment(element) {
+export function isEndFragment(element) {
   return element.nodeName === "#comment" && element.nodeValue === "]";
 }
diff --git a/node_modules/nuxt/dist/app/components/welcome.vue b/node_modules/nuxt/dist/app/components/welcome.vue
index 5d2cfca..45b6949 100644
--- a/node_modules/nuxt/dist/app/components/welcome.vue
+++ b/node_modules/nuxt/dist/app/components/welcome.vue
@@ -1,5 +1,5 @@
 <script setup>
-import { useHead } from '#imports'
+import { useHead } from "#imports";
 const props = defineProps({
   appName: {
     type: String,
@@ -25,24 +25,26 @@ const props = defineProps({
     type: String,
     default: "Nuxt is open source and the code is available on GitHub, feel free to star it, participate in discussions or dive into the source."
   }
-})
+});
 useHead({
-  title: `${ props.title }`,
+  title: `${props.title}`,
   script: [
     {
-      children: `!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver((e=>{for(const o of e)if("childList"===o.type)for(const e of o.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&r(e)})).observe(document,{childList:!0,subtree:!0})}function r(e){if(e.ep)return;e.ep=!0;const r=function(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?r.credentials="include":"anonymous"===e.crossOrigin?r.credentials="omit":r.credentials="same-origin",r}(e);fetch(e.href,r)}}();`
+      innerHTML: `!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver((e=>{for(const o of e)if("childList"===o.type)for(const e of o.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&r(e)})).observe(document,{childList:!0,subtree:!0})}function r(e){if(e.ep)return;e.ep=!0;const r=function(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?r.credentials="include":"anonymous"===e.crossOrigin?r.credentials="omit":r.credentials="same-origin",r}(e);fetch(e.href,r)}}();`
     }
   ],
   style: [
     {
-      children: `@property --gradient-angle{syntax:"<angle>";inherits:false;initial-value:180deg}@keyframes gradient-rotate{0%{--gradient-angle:0deg}to{--gradient-angle:360deg}}*,:after,:before{border-color:var(--un-default-border-color,#e5e7eb);border-style:solid;border-width:0;box-sizing:border-box}:after,:before{--un-content:""}html{line-height:1.5;-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-moz-tab-size:4;tab-size:4;-webkit-tap-highlight-color:transparent}body{line-height:inherit;margin:0}h1,h2,h3{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}h1,h2,h3,p,ul{margin:0}ul{list-style:none;padding:0}img,svg{display:block;vertical-align:middle}img{height:auto;max-width:100%}*,:after,:before{--un-rotate:0;--un-rotate-x:0;--un-rotate-y:0;--un-rotate-z:0;--un-scale-x:1;--un-scale-y:1;--un-scale-z:1;--un-skew-x:0;--un-skew-y:0;--un-translate-x:0;--un-translate-y:0;--un-translate-z:0;--un-pan-x: ;--un-pan-y: ;--un-pinch-zoom: ;--un-scroll-snap-strictness:proximity;--un-ordinal: ;--un-slashed-zero: ;--un-numeric-figure: ;--un-numeric-spacing: ;--un-numeric-fraction: ;--un-border-spacing-x:0;--un-border-spacing-y:0;--un-ring-offset-shadow:0 0 transparent;--un-ring-shadow:0 0 transparent;--un-shadow-inset: ;--un-shadow:0 0 transparent;--un-ring-inset: ;--un-ring-offset-width:0px;--un-ring-offset-color:#fff;--un-ring-width:0px;--un-ring-color:rgba(147,197,253,.5);--un-blur: ;--un-brightness: ;--un-contrast: ;--un-drop-shadow: ;--un-grayscale: ;--un-hue-rotate: ;--un-invert: ;--un-saturate: ;--un-sepia: ;--un-backdrop-blur: ;--un-backdrop-brightness: ;--un-backdrop-contrast: ;--un-backdrop-grayscale: ;--un-backdrop-hue-rotate: ;--un-backdrop-invert: ;--un-backdrop-opacity: ;--un-backdrop-saturate: ;--un-backdrop-sepia: }`
+      innerHTML: `@property --gradient-angle{syntax:"<angle>";inherits:false;initial-value:180deg}@keyframes gradient-rotate{0%{--gradient-angle:0deg}to{--gradient-angle:360deg}}*,:after,:before{border-color:var(--un-default-border-color,#e5e7eb);border-style:solid;border-width:0;box-sizing:border-box}:after,:before{--un-content:""}html{line-height:1.5;-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-moz-tab-size:4;tab-size:4;-webkit-tap-highlight-color:transparent}body{line-height:inherit;margin:0}h1,h2,h3{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}h1,h2,h3,p,ul{margin:0}ul{list-style:none;padding:0}img,svg{display:block;vertical-align:middle}img{height:auto;max-width:100%}*,:after,:before{--un-rotate:0;--un-rotate-x:0;--un-rotate-y:0;--un-rotate-z:0;--un-scale-x:1;--un-scale-y:1;--un-scale-z:1;--un-skew-x:0;--un-skew-y:0;--un-translate-x:0;--un-translate-y:0;--un-translate-z:0;--un-pan-x: ;--un-pan-y: ;--un-pinch-zoom: ;--un-scroll-snap-strictness:proximity;--un-ordinal: ;--un-slashed-zero: ;--un-numeric-figure: ;--un-numeric-spacing: ;--un-numeric-fraction: ;--un-border-spacing-x:0;--un-border-spacing-y:0;--un-ring-offset-shadow:0 0 transparent;--un-ring-shadow:0 0 transparent;--un-shadow-inset: ;--un-shadow:0 0 transparent;--un-ring-inset: ;--un-ring-offset-width:0px;--un-ring-offset-color:#fff;--un-ring-width:0px;--un-ring-color:rgba(147,197,253,.5);--un-blur: ;--un-brightness: ;--un-contrast: ;--un-drop-shadow: ;--un-grayscale: ;--un-hue-rotate: ;--un-invert: ;--un-saturate: ;--un-sepia: ;--un-backdrop-blur: ;--un-backdrop-brightness: ;--un-backdrop-contrast: ;--un-backdrop-grayscale: ;--un-backdrop-hue-rotate: ;--un-backdrop-invert: ;--un-backdrop-opacity: ;--un-backdrop-saturate: ;--un-backdrop-sepia: }`
     }
   ]
-})
+});
 </script>
+
 <template>
-<div class="antialiased bg-white dark:bg-black dark:text-white flex flex-col items-center justify-center min-h-screen place-content-center sm:text-base text-black text-sm"><div class="flex flex-1 flex-col gap-y-16 py-14"><div class="flex flex-col gap-y-4 items-center justify-center"><a href="https://nuxt.com" target="_blank" aria-label="Nuxt"> <svg xmlns="http://www.w3.org/2000/svg" width="61" height="42" fill="none"><path fill="#00DC82" d="M33.987 41.221h22.425a4.054 4.054 0 0 0 4.057-4.06 4.06 4.06 0 0 0-.545-2.03l-15.06-26.1a4.057 4.057 0 0 0-5.541-1.486 4.06 4.06 0 0 0-1.485 1.486l-3.851 6.678-7.529-13.058a4.06 4.06 0 0 0-7.028 0L.69 35.13a4.06 4.06 0 0 0 3.511 6.09h14.077c5.577 0 9.69-2.451 12.52-7.233L37.67 22.08l3.68-6.372 11.046 19.14H37.67zm-15.939-6.378-9.823-.003L22.95 9.322l7.348 12.76-4.92 8.527c-1.88 3.103-4.014 4.234-7.33 4.234"/></svg> </a><h1 class="dark:text-white font-semibold sm:text-5xl text-4xl text-black text-center">Welcome to Nuxt!</h1></div><div class="gap-6 grid grid-cols-2 lg:grid-cols-10 max-w-[960px] px-4"><div class="col-span-2 get-started-gradient-border lg:col-span-10 relative"><div class="absolute bg-gradient-to-r duration-300 from-green-400 get-started-gradient-left inset-y-0 left-0 rounded-xl to-transparent transition-opacity w-[20%] z-1"></div><div class="absolute bg-gradient-to-l duration-300 from-blue-400 get-started-gradient-right inset-y-0 right-0 rounded-xl to-transparent transition-opacity w-[20%] z-1"></div><div class="-top-[58px] absolute flex inset-x-0 justify-center w-full"><img alt src="data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22105%22%20height%3D%22116%22%20fill%3D%22none%22%3E%3Cg%20filter%3D%22url(%23a)%22%20shape-rendering%3D%22geometricPrecision%22%3E%3Cpath%20fill%3D%22%2318181B%22%20d%3D%22M17.203%2033.223%2046.9%2014.286a8.416%208.416%200%200%201%208.64-.18L87.38%2031.97c2.68%201.527%204.365%204.409%204.428%207.571l.191%2034.944c.063%203.151-1.491%206.104-4.091%207.776l-30.143%2019.383a8.417%208.417%200%200%201-8.75.251l-31.126-17.73C15.135%2082.595%2012.98%2079.6%2013%2076.35V40.828c.02-3.111%201.614-5.994%204.203-7.605Z%22%2F%3E%3Cpath%20stroke%3D%22url(%23b)%22%20stroke-width%3D%222%22%20d%3D%22M46.9%2014.286%2017.202%2033.223c-2.59%201.61-4.183%204.494-4.203%207.605V76.35m33.9-62.064a8.416%208.416%200%200%201%208.64-.18m-8.64.18a8.435%208.435%200%200%201%208.64-.18M13%2076.35c-.02%203.25%202.135%206.246%204.888%207.814M13%2076.35c-.02%203.233%202.136%206.247%204.888%207.814m0%200%2031.126%2017.731m0%200a8.417%208.417%200%200%200%208.75-.251m-8.75.251a8.438%208.438%200%200%200%208.75-.251m0%200%2030.143-19.383m0%200c2.598-1.67%204.154-4.627%204.091-7.776m-4.091%207.776c2.6-1.672%204.154-4.625%204.091-7.776m0%200-.19-34.944m0%200c-.064-3.162-1.75-6.044-4.43-7.571m4.43%207.571c-.063-3.147-1.75-6.045-4.43-7.571m0%200L55.54%2014.105%22%2F%3E%3C%2Fg%3E%3Cpath%20fill%3D%22url(%23c)%22%20d%3D%22M48.669%2067.696c-.886%202.69-3.02%204.659-6.153%205.709-1.41.465-2.88.72-4.364.755a1.313%201.313%200%200%201-1.312-1.313c.035-1.484.29-2.954.754-4.364%201.05-3.133%203.02-5.266%205.71-6.152a1.312%201.312%200%201%201%20.836%202.477c-3.232%201.083-4.232%204.577-4.544%206.595%202.018-.311%205.512-1.312%206.595-4.544a1.313%201.313%200%200%201%202.477.837Zm16.39-12.486-1.46%201.477v10.057a2.657%202.657%200%200%201-.772%201.854l-5.316%205.3a2.559%202.559%200%200%201-1.853.77%202.413%202.413%200%200%201-.755-.115%202.624%202.624%200%200%201-1.821-2.001l-1.296-6.48-6.858-6.858-6.48-1.297a2.625%202.625%200%200%201-2.002-1.82%202.609%202.609%200%200%201%20.656-2.61l5.3-5.315a2.658%202.658%200%200%201%201.853-.771h10.057l1.477-1.46c4.692-4.692%209.499-4.561%2011.353-4.282a2.576%202.576%200%200%201%202.198%202.198c.28%201.854.41%206.661-4.282%2011.353Zm-26.103.132%206.185%201.23%206.546-6.546h-7.432l-5.299%205.316Zm8.482%202.657L53%2063.561l10.205-10.205c1.28-1.28%204.2-4.724%203.543-9.105-4.38-.656-7.826%202.264-9.105%203.544L47.438%2057.999Zm13.535%201.313-6.546%206.546%201.23%206.185%205.316-5.299v-7.432Z%22%20shape-rendering%3D%22geometricPrecision%22%2F%3E%3Cdefs%3E%3ClinearGradient%20id%3D%22b%22%20x1%3D%2257.994%22%20x2%3D%2292%22%20y1%3D%2258%22%20y2%3D%2258%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%3Cstop%20stop-color%3D%22%2300DC82%22%2F%3E%3Cstop%20offset%3D%22.5%22%20stop-color%3D%22%231DE0B1%22%2F%3E%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2336E4DA%22%2F%3E%3C%2FlinearGradient%3E%3ClinearGradient%20id%3D%22c%22%20x1%3D%2255.197%22%20x2%3D%2269.453%22%20y1%3D%2258.107%22%20y2%3D%2258.107%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%3Cstop%20stop-color%3D%22%2300DC82%22%2F%3E%3Cstop%20offset%3D%22.5%22%20stop-color%3D%22%231DE0B1%22%2F%3E%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2336E4DA%22%2F%3E%3C%2FlinearGradient%3E%3Cfilter%20id%3D%22a%22%20width%3D%22104.897%22%20height%3D%22115.897%22%20x%3D%22.052%22%20y%3D%22.052%22%20color-interpolation-filters%3D%22sRGB%22%20filterUnits%3D%22userSpaceOnUse%22%3E%3CfeFlood%20flood-opacity%3D%220%22%20result%3D%22BackgroundImageFix%22%2F%3E%3CfeColorMatrix%20in%3D%22SourceAlpha%22%20result%3D%22hardAlpha%22%20values%3D%220%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%20127%200%22%2F%3E%3CfeOffset%2F%3E%3CfeGaussianBlur%20stdDeviation%3D%225.974%22%2F%3E%3CfeComposite%20in2%3D%22hardAlpha%22%20operator%3D%22out%22%2F%3E%3CfeColorMatrix%20values%3D%220%200%200%200%201%200%200%200%200%201%200%200%200%200%201%200%200%200%200.07%200%22%2F%3E%3CfeBlend%20in2%3D%22BackgroundImageFix%22%20result%3D%22effect1_dropShadow_2724_4091%22%2F%3E%3CfeBlend%20in%3D%22SourceGraphic%22%20in2%3D%22effect1_dropShadow_2724_4091%22%20result%3D%22shape%22%2F%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3C%2Fsvg%3E%0A" class="dark:block hidden"> <img alt src="data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22105%22%20height%3D%22116%22%20fill%3D%22none%22%3E%3Cg%20filter%3D%22url(%23a)%22%3E%3Cpath%20fill%3D%22%23fff%22%20d%3D%22M17.203%2033.223%2046.9%2014.286a8.416%208.416%200%200%201%208.64-.18L87.38%2031.97c2.68%201.527%204.365%204.409%204.428%207.571l.191%2034.944c.063%203.151-1.491%206.104-4.091%207.776l-30.143%2019.383a8.417%208.417%200%200%201-8.75.251l-31.126-17.73C15.135%2082.595%2012.98%2079.6%2013%2076.35V40.828c.02-3.111%201.614-5.994%204.203-7.605Z%22%2F%3E%3Cpath%20stroke%3D%22url(%23b)%22%20stroke-width%3D%222%22%20d%3D%22M46.9%2014.286%2017.202%2033.223c-2.59%201.61-4.183%204.494-4.203%207.605V76.35m33.9-62.064a8.416%208.416%200%200%201%208.64-.18m-8.64.18a8.435%208.435%200%200%201%208.64-.18M13%2076.35c-.02%203.25%202.135%206.246%204.888%207.814M13%2076.35c-.02%203.233%202.136%206.247%204.888%207.814m0%200%2031.126%2017.731m0%200a8.417%208.417%200%200%200%208.75-.251m-8.75.251a8.438%208.438%200%200%200%208.75-.251m0%200%2030.143-19.383m0%200c2.598-1.67%204.154-4.627%204.091-7.776m-4.091%207.776c2.6-1.672%204.154-4.625%204.091-7.776m0%200-.19-34.944m0%200c-.064-3.162-1.75-6.044-4.43-7.571m4.43%207.571c-.063-3.147-1.75-6.045-4.43-7.571m0%200L55.54%2014.105%22%2F%3E%3C%2Fg%3E%3Cpath%20fill%3D%22%23fff%22%20d%3D%22M32%2037h42v42H32z%22%2F%3E%3Cpath%20fill%3D%22url(%23c)%22%20d%3D%22M48.669%2067.697c-.886%202.69-3.02%204.659-6.153%205.709-1.41.465-2.88.72-4.364.755a1.313%201.313%200%200%201-1.312-1.313c.035-1.484.29-2.954.754-4.364%201.05-3.134%203.02-5.266%205.71-6.152a1.314%201.314%200%201%201%20.836%202.477c-3.232%201.083-4.232%204.577-4.544%206.595%202.018-.311%205.512-1.312%206.595-4.544a1.313%201.313%200%200%201%202.477.837Zm16.39-12.486-1.46%201.477v10.057a2.657%202.657%200%200%201-.772%201.854l-5.316%205.3a2.559%202.559%200%200%201-1.853.77%202.413%202.413%200%200%201-.755-.115%202.626%202.626%200%200%201-1.821-2.001l-1.296-6.48-6.858-6.858-6.48-1.297a2.625%202.625%200%200%201-2.002-1.82%202.609%202.609%200%200%201%20.656-2.61l5.3-5.315a2.658%202.658%200%200%201%201.853-.771h10.057l1.477-1.46c4.692-4.692%209.499-4.561%2011.353-4.282a2.576%202.576%200%200%201%202.198%202.198c.28%201.854.41%206.661-4.282%2011.353Zm-26.103.132%206.185%201.23%206.546-6.546h-7.432l-5.299%205.316ZM47.438%2058%2053%2063.562l10.205-10.204c1.28-1.28%204.2-4.725%203.543-9.106-4.38-.656-7.826%202.264-9.105%203.544L47.438%2058Zm13.535%201.313-6.546%206.546%201.23%206.185%205.316-5.299v-7.432Z%22%2F%3E%3Cdefs%3E%3ClinearGradient%20id%3D%22b%22%20x1%3D%2257.994%22%20x2%3D%2292%22%20y1%3D%2258%22%20y2%3D%2258%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%3Cstop%20stop-color%3D%22%2300DC82%22%2F%3E%3Cstop%20offset%3D%22.5%22%20stop-color%3D%22%231DE0B1%22%2F%3E%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2336E4DA%22%2F%3E%3C%2FlinearGradient%3E%3ClinearGradient%20id%3D%22c%22%20x1%3D%2255.197%22%20x2%3D%2269.453%22%20y1%3D%2258.108%22%20y2%3D%2258.108%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%3Cstop%20stop-color%3D%22%2300DC82%22%2F%3E%3Cstop%20offset%3D%22.5%22%20stop-color%3D%22%231DE0B1%22%2F%3E%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2336E4DA%22%2F%3E%3C%2FlinearGradient%3E%3Cfilter%20id%3D%22a%22%20width%3D%22104.897%22%20height%3D%22115.897%22%20x%3D%22.052%22%20y%3D%22.052%22%20color-interpolation-filters%3D%22sRGB%22%20filterUnits%3D%22userSpaceOnUse%22%3E%3CfeFlood%20flood-opacity%3D%220%22%20result%3D%22BackgroundImageFix%22%2F%3E%3CfeColorMatrix%20in%3D%22SourceAlpha%22%20result%3D%22hardAlpha%22%20values%3D%220%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%20127%200%22%2F%3E%3CfeOffset%2F%3E%3CfeGaussianBlur%20stdDeviation%3D%225.974%22%2F%3E%3CfeComposite%20in2%3D%22hardAlpha%22%20operator%3D%22out%22%2F%3E%3CfeColorMatrix%20values%3D%220%200%200%200%201%200%200%200%200%201%200%200%200%200%201%200%200%200%200.07%200%22%2F%3E%3CfeBlend%20in2%3D%22BackgroundImageFix%22%20result%3D%22effect1_dropShadow_2726_4054%22%2F%3E%3CfeBlend%20in%3D%22SourceGraphic%22%20in2%3D%22effect1_dropShadow_2726_4054%22%20result%3D%22shape%22%2F%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3C%2Fsvg%3E%0A" class="dark:hidden"></div><div class="flex flex-col gap-y-4 items-center pb-6 pt-[58px] px-4 rounded-xl sm:px-28 z-10"><h2 class="dark:text-white font-semibold text-2xl text-black">Get started</h2><p class="mb-2 text-center">Remove this welcome page by replacing <a class="bg-gray-100 dark:bg-white/10 font-bold font-mono p-1 rounded">&lt;NuxtWelcome /&gt;</a> in <a href="https://nuxt.com/docs/guide/directory-structure/app" target="_blank" rel="noopener" class="bg-gray-100 dark:bg-white/10 font-bold font-mono p-1 rounded">app.vue</a> with your own code, or creating your own <span class="bg-gray-100 dark:bg-white/10 font-bold font-mono p-1 rounded">app.vue</span> if it doesn't exist.</p></div></div><div class="border border-gray-200 col-span-2 dark:border-transparent dark:text-white hover:border-transparent items-center justify-center lg:col-span-6 lg:min-h-min md:min-h-[180px] modules-container relative rounded-xl sm:col-span-1 sm:min-h-[220px] text-black"><div class="gradient-border gradient-border-modules gradient-border-rect"></div><div class="absolute bg-gradient-to-l duration-300 from-yellow-400 inset-y-0 modules-gradient-right right-0 rounded-xl to-transparent transition-opacity w-[20%] z-1"></div><a href="https://nuxt.com/modules" target="_blank" class="bg-white dark:bg-gray-900 dark:border-none flex gap-x-4 items-center justify-center lg:min-h-min md:min-h-[180px] px-5 py-6 rounded-xl sm:min-h-[220px]"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2253%22%20height%3D%2258%22%20viewBox%3D%220%200%2053%2058%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cg%20clip-path%3D%22url(%23clip0_2613_3853)%22%3E%0A%3Cpath%20d%3D%22M51.1519%2039.8821C51.154%2039.9844%2051.1527%2040.0863%2051.148%2040.1877C51.0782%2041.7091%2050.2566%2043.1165%2048.9325%2043.9357L29.0918%2056.2117C27.6504%2057.1035%2025.8212%2057.1564%2024.3387%2056.3439L3.85107%2045.1148C2.27157%2044.2491%201.14238%2042.6366%201.15291%2041.0494L1.15293%2041.0427L1.153%2018.552C1.15301%2018.5509%201.15302%2018.5499%201.15302%2018.5488C1.16485%2016.9324%202.02611%2015.4289%203.43319%2014.5869L3.43322%2014.587L3.44269%2014.5812L22.9844%202.59084C24.4169%201.73583%2026.2139%201.69824%2027.6729%202.49791L27.6729%202.49792L27.6784%202.50094L48.6303%2013.8121C48.6313%2013.8126%2048.6322%2013.8131%2048.6331%2013.8136C50.0797%2014.6078%2050.9898%2016.1132%2051.026%2017.7438L51.1517%2039.8672L51.1517%2039.8746L51.1519%2039.8821Z%22%20fill%3D%22white%22%20stroke%3D%22url(%23paint0_linear_2613_3853)%22%20stroke-width%3D%222%22%2F%3E%0A%3Cpath%20d%3D%22M33.8193%2042.2552H17.8193C16.7585%2042.2552%2015.7411%2041.8337%2014.9909%2041.0836C14.2408%2040.3334%2013.8193%2039.316%2013.8193%2038.2552V24.9218C13.8193%2023.861%2014.2408%2022.8435%2014.9909%2022.0934C15.7411%2021.3433%2016.7585%2020.9218%2017.8193%2020.9218H19.1527C19.1751%2019.792%2019.5558%2018.6985%2020.2399%2017.7991C20.924%2016.8996%2021.8761%2016.2407%2022.9589%2015.9173C24.0416%2015.594%2025.1992%2015.6229%2026.2644%2016C27.3297%2016.377%2028.2477%2017.0827%2028.886%2018.0152C29.4839%2018.8674%2029.8094%2019.8808%2029.8193%2020.9218H33.8193C34.173%2020.9218%2034.5121%2021.0623%2034.7621%2021.3124C35.0122%2021.5624%2035.1527%2021.9015%2035.1527%2022.2552V26.2552C36.2825%2026.2776%2037.376%2026.6583%2038.2754%2027.3424C39.1749%2028.0265%2039.8338%2028.9786%2040.1572%2030.0613C40.4805%2031.1441%2040.4516%2032.3016%2040.0745%2033.3669C39.6975%2034.4322%2038.9918%2035.3502%2038.0593%2035.9885C37.2071%2036.5864%2036.1937%2036.9118%2035.1527%2036.9218V36.9218V40.9218C35.1527%2041.2755%2035.0122%2041.6146%2034.7621%2041.8646C34.5121%2042.1147%2034.173%2042.2552%2033.8193%2042.2552ZM17.8193%2023.5885C17.4657%2023.5885%2017.1266%2023.729%2016.8765%2023.979C16.6265%2024.2291%2016.486%2024.5682%2016.486%2024.9218V38.2552C16.486%2038.6088%2016.6265%2038.9479%2016.8765%2039.198C17.1266%2039.448%2017.4657%2039.5885%2017.8193%2039.5885H32.486V35.3485C32.4849%2035.1347%2032.5351%2034.9238%2032.6326%2034.7335C32.7301%2034.5432%2032.8718%2034.3792%2033.046%2034.2552C33.2196%2034.1313%2033.4204%2034.051%2033.6316%2034.0208C33.8427%2033.9907%2034.058%2034.0116%2034.2593%2034.0818C34.6393%2034.2368%2035.0532%2034.2901%2035.46%2034.2363C35.8669%2034.1825%2036.2527%2034.0236%2036.5793%2033.7752C36.9045%2033.5769%2037.1834%2033.3113%2037.3973%2032.9962C37.6111%2032.6811%2037.7551%2032.3239%2037.8193%2031.9485C37.8708%2031.5699%2037.8402%2031.1847%2037.7298%2030.8189C37.6194%2030.4532%2037.4317%2030.1154%2037.1793%2029.8285C36.8381%2029.414%2036.3734%2029.1193%2035.8529%2028.9874C35.3325%2028.8555%2034.7835%2028.8932%2034.286%2029.0952C34.0846%2029.1654%2033.8694%2029.1863%2033.6582%2029.1562C33.4471%2029.126%2033.2463%2029.0457%2033.0727%2028.9218C32.8985%2028.7978%2032.7567%2028.6338%2032.6593%2028.4435C32.5618%2028.2532%2032.5115%2028.0423%2032.5127%2027.8285V23.5885H28.246C28.0269%2023.6009%2027.8081%2023.559%2027.609%2023.4666C27.4099%2023.3742%2027.2368%2023.234%2027.1049%2023.0586C26.973%2022.8832%2026.8864%2022.6779%2026.8529%2022.461C26.8194%2022.2441%2026.8399%2022.0222%2026.9127%2021.8152C27.0677%2021.4352%2027.1209%2021.0213%2027.0671%2020.6145C27.0134%2020.2076%2026.8544%2019.8218%2026.606%2019.4952C26.4091%2019.1607%2026.1395%2018.8749%2025.8172%2018.6588C25.4948%2018.4427%2025.128%2018.3019%2024.7438%2018.2468C24.3597%2018.1917%2023.9681%2018.2238%2023.598%2018.3407C23.2279%2018.4575%2022.8889%2018.6561%2022.606%2018.9218C22.3433%2019.1824%2022.1377%2019.4948%2022.0023%2019.8391C21.8668%2020.1834%2021.8045%2020.5521%2021.8193%2020.9218C21.8224%2021.2277%2021.8812%2021.5304%2021.9927%2021.8152C22.0632%2022.0168%2022.0842%2022.2324%2022.054%2022.4438C22.0237%2022.6553%2021.9432%2022.8564%2021.819%2023.0302C21.6949%2023.204%2021.5308%2023.3454%2021.3406%2023.4426C21.1504%2023.5397%2020.9396%2023.5898%2020.726%2023.5885H17.8193Z%22%20fill%3D%22url(%23paint1_linear_2613_3853)%22%2F%3E%0A%3C%2Fg%3E%0A%3Cdefs%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2613_3853%22%20x1%3D%220.662695%22%20y1%3D%2218.4025%22%20x2%3D%2251.7209%22%20y2%3D%2244.2212%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%23F7D14C%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23A38108%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2613_3853%22%20x1%3D%2213.7453%22%20y1%3D%2221.3705%22%20x2%3D%2240.3876%22%20y2%3D%2235.7024%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%23F7D14C%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23A38108%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3CclipPath%20id%3D%22clip0_2613_3853%22%3E%0A%3Crect%20width%3D%2252%22%20height%3D%2257%22%20fill%3D%22white%22%20transform%3D%22translate(0.152832%200.920898)%22%2F%3E%0A%3C%2FclipPath%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="modules icon" class="modules-image-color-light"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2253%22%20height%3D%2258%22%20viewBox%3D%220%200%2053%2058%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M3.43319%2014.5869L3.43322%2014.587L3.44269%2014.5812L22.9844%202.59084C24.4246%201.73116%2026.2124%201.69742%2027.6729%202.49791L27.6729%202.49792L27.6784%202.50094L48.6303%2013.8121C48.6313%2013.8126%2048.6322%2013.8131%2048.6331%2013.8137C50.0812%2014.6086%2050.9896%2016.1043%2051.026%2017.7437L51.1517%2039.8672L51.1517%2039.8746L51.1519%2039.8821C51.1856%2041.5204%2050.346%2043.0611%2048.9325%2043.9357L29.0918%2056.2117C27.6424%2057.1085%2025.8227%2057.1572%2024.3387%2056.3439L3.85107%2045.1148C2.26984%2044.2481%201.14232%2042.646%201.15293%2041.0494V41.0427L1.153%2018.552C1.15301%2018.5509%201.15302%2018.5499%201.15302%2018.5488C1.16485%2016.9324%202.02611%2015.4289%203.43319%2014.5869Z%22%20fill%3D%22%2318181B%22%20stroke%3D%22url(%23paint0_linear_2595_7337)%22%20stroke-width%3D%222%22%2F%3E%0A%3Cpath%20d%3D%22M33.8193%2042.2542H17.8193C16.7585%2042.2542%2015.7411%2041.8328%2014.9909%2041.0826C14.2408%2040.3325%2013.8193%2039.3151%2013.8193%2038.2542V24.9209C13.8193%2023.86%2014.2408%2022.8426%2014.9909%2022.0924C15.7411%2021.3423%2016.7585%2020.9209%2017.8193%2020.9209H19.1527C19.1751%2019.791%2019.5558%2018.6975%2020.2399%2017.7981C20.924%2016.8986%2021.8761%2016.2397%2022.9589%2015.9164C24.0416%2015.593%2025.1992%2015.6219%2026.2644%2015.999C27.3297%2016.376%2028.2477%2017.0817%2028.886%2018.0142C29.4839%2018.8664%2029.8094%2019.8799%2029.8193%2020.9209H33.8193C34.173%2020.9209%2034.5121%2021.0613%2034.7621%2021.3114C35.0122%2021.5614%2035.1527%2021.9006%2035.1527%2022.2542V26.2542C36.2825%2026.2766%2037.376%2026.6573%2038.2754%2027.3414C39.1749%2028.0255%2039.8338%2028.9776%2040.1572%2030.0604C40.4805%2031.1432%2040.4516%2032.3007%2040.0745%2033.366C39.6975%2034.4312%2038.9918%2035.3492%2038.0593%2035.9875C37.2071%2036.5854%2036.1937%2036.9109%2035.1527%2036.9209V40.9209C35.1527%2041.2745%2035.0122%2041.6136%2034.7621%2041.8637C34.5121%2042.1137%2034.173%2042.2542%2033.8193%2042.2542ZM17.8193%2023.5875C17.4657%2023.5875%2017.1266%2023.728%2016.8765%2023.978C16.6265%2024.2281%2016.486%2024.5672%2016.486%2024.9209V38.2542C16.486%2038.6078%2016.6265%2038.9469%2016.8765%2039.197C17.1266%2039.447%2017.4657%2039.5875%2017.8193%2039.5875H32.486V35.3475C32.4849%2035.1337%2032.5351%2034.9228%2032.6326%2034.7325C32.7301%2034.5422%2032.8718%2034.3782%2033.046%2034.2542C33.2196%2034.1304%2033.4205%2034.05%2033.6316%2034.0198C33.8427%2033.9897%2034.058%2034.0106%2034.2593%2034.0809C34.6393%2034.2359%2035.0532%2034.2891%2035.46%2034.2353C35.8669%2034.1816%2036.2527%2034.0226%2036.5793%2033.7742C36.9045%2033.5759%2037.1834%2033.3103%2037.3973%2032.9952C37.6111%2032.6801%2037.7551%2032.3229%2037.8193%2031.9475C37.8708%2031.5689%2037.8402%2031.1837%2037.7298%2030.8179C37.6194%2030.4522%2037.4317%2030.1144%2037.1793%2029.8275C36.8381%2029.413%2036.3734%2029.1183%2035.8529%2028.9864C35.3325%2028.8545%2034.7835%2028.8923%2034.286%2029.0942C34.0846%2029.1644%2033.8694%2029.1854%2033.6582%2029.1552C33.4471%2029.125%2033.2463%2029.0447%2033.0727%2028.9209C32.8985%2028.7969%2032.7567%2028.6328%2032.6593%2028.4425C32.5618%2028.2522%2032.5115%2028.0413%2032.5127%2027.8275V23.5875H28.246C28.0269%2023.5999%2027.8081%2023.5581%2027.609%2023.4656C27.4099%2023.3732%2027.2368%2023.233%2027.1049%2023.0576C26.973%2022.8822%2026.8864%2022.6769%2026.8529%2022.46C26.8194%2022.2431%2026.8399%2022.0213%2026.9127%2021.8142C27.0677%2021.4342%2027.1209%2021.0204%2027.0671%2020.6135C27.0134%2020.2066%2026.8544%2019.8208%2026.606%2019.4942C26.4091%2019.1597%2026.1395%2018.8739%2025.8172%2018.6578C25.4948%2018.4417%2025.128%2018.3009%2024.7438%2018.2458C24.3597%2018.1908%2023.9681%2018.2228%2023.598%2018.3397C23.2279%2018.4565%2022.8889%2018.6552%2022.606%2018.9209C22.3433%2019.1814%2022.1377%2019.4938%2022.0023%2019.8381C21.8668%2020.1824%2021.8045%2020.5512%2021.8193%2020.9209C21.8224%2021.2267%2021.8812%2021.5294%2021.9927%2021.8142C22.0632%2022.0158%2022.0842%2022.2314%2022.054%2022.4429C22.0237%2022.6543%2021.9432%2022.8554%2021.819%2023.0292C21.6949%2023.203%2021.5308%2023.3444%2021.3406%2023.4416C21.1504%2023.5388%2020.9396%2023.5888%2020.726%2023.5875H17.8193Z%22%20fill%3D%22url(%23paint1_linear_2595_7337)%22%2F%3E%0A%3Cdefs%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2595_7337%22%20x1%3D%220.662695%22%20y1%3D%2218.4025%22%20x2%3D%2251.7209%22%20y2%3D%2244.2212%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%23F7D14C%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23A38108%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2595_7337%22%20x1%3D%2213.7453%22%20y1%3D%2221.3695%22%20x2%3D%2240.3876%22%20y2%3D%2235.7015%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%23F7D14C%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23A38108%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="modules icon" class="modules-image-color-dark"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2253%22%20height%3D%2258%22%20viewBox%3D%220%200%2053%2058%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cg%20clip-path%3D%22url(%23clip0_2691_4389)%22%3E%0A%3Cpath%20d%3D%22M51.1519%2039.8821C51.154%2039.9844%2051.1527%2040.0863%2051.148%2040.1877C51.0782%2041.7091%2050.2566%2043.1165%2048.9325%2043.9357L29.0918%2056.2117C27.6504%2057.1035%2025.8212%2057.1564%2024.3387%2056.3439L3.85107%2045.1148C2.27157%2044.2491%201.14238%2042.6366%201.15291%2041.0494L1.15293%2041.0427L1.153%2018.552C1.15301%2018.5509%201.15302%2018.5499%201.15302%2018.5488C1.16485%2016.9324%202.02611%2015.4289%203.43319%2014.5869L3.43322%2014.587L3.44269%2014.5812L22.9844%202.59084C24.4169%201.73583%2026.2139%201.69824%2027.6729%202.49791L27.6729%202.49792L27.6784%202.50094L48.6303%2013.8121C48.6313%2013.8126%2048.6322%2013.8131%2048.6331%2013.8136C50.0797%2014.6078%2050.9898%2016.1132%2051.026%2017.7438L51.1517%2039.8672L51.1517%2039.8746L51.1519%2039.8821Z%22%20fill%3D%22white%22%20stroke%3D%22url(%23paint0_linear_2691_4389)%22%20stroke-width%3D%222%22%2F%3E%0A%3Cpath%20d%3D%22M33.8193%2042.2542H17.8193C16.7585%2042.2542%2015.7411%2041.8328%2014.9909%2041.0826C14.2408%2040.3325%2013.8193%2039.3151%2013.8193%2038.2542V24.9209C13.8193%2023.86%2014.2408%2022.8426%2014.9909%2022.0924C15.7411%2021.3423%2016.7585%2020.9209%2017.8193%2020.9209H19.1527C19.1751%2019.791%2019.5558%2018.6975%2020.2399%2017.7981C20.924%2016.8986%2021.8761%2016.2397%2022.9589%2015.9164C24.0416%2015.593%2025.1992%2015.6219%2026.2644%2015.999C27.3297%2016.376%2028.2477%2017.0817%2028.886%2018.0142C29.4839%2018.8664%2029.8094%2019.8799%2029.8193%2020.9209H33.8193C34.173%2020.9209%2034.5121%2021.0613%2034.7621%2021.3114C35.0122%2021.5614%2035.1527%2021.9006%2035.1527%2022.2542V26.2542C36.2825%2026.2766%2037.376%2026.6573%2038.2754%2027.3414C39.1749%2028.0255%2039.8338%2028.9776%2040.1572%2030.0604C40.4805%2031.1432%2040.4516%2032.3007%2040.0745%2033.366C39.6975%2034.4312%2038.9918%2035.3492%2038.0593%2035.9875C37.2071%2036.5854%2036.1937%2036.9109%2035.1527%2036.9209V36.9209V40.9209C35.1527%2041.2745%2035.0122%2041.6136%2034.7621%2041.8637C34.5121%2042.1137%2034.173%2042.2542%2033.8193%2042.2542ZM17.8193%2023.5875C17.4657%2023.5875%2017.1266%2023.728%2016.8765%2023.978C16.6265%2024.2281%2016.486%2024.5672%2016.486%2024.9209V38.2542C16.486%2038.6078%2016.6265%2038.9469%2016.8765%2039.197C17.1266%2039.447%2017.4657%2039.5875%2017.8193%2039.5875H32.486V35.3475C32.4849%2035.1337%2032.5351%2034.9228%2032.6326%2034.7325C32.7301%2034.5422%2032.8718%2034.3782%2033.046%2034.2542C33.2196%2034.1304%2033.4204%2034.05%2033.6316%2034.0198C33.8427%2033.9897%2034.058%2034.0106%2034.2593%2034.0809C34.6393%2034.2359%2035.0532%2034.2891%2035.46%2034.2353C35.8669%2034.1816%2036.2527%2034.0226%2036.5793%2033.7742C36.9045%2033.5759%2037.1834%2033.3103%2037.3973%2032.9952C37.6111%2032.6801%2037.7551%2032.3229%2037.8193%2031.9475C37.8708%2031.5689%2037.8402%2031.1837%2037.7298%2030.8179C37.6194%2030.4522%2037.4317%2030.1144%2037.1793%2029.8275C36.8381%2029.413%2036.3734%2029.1183%2035.8529%2028.9864C35.3325%2028.8545%2034.7835%2028.8923%2034.286%2029.0942C34.0846%2029.1644%2033.8694%2029.1854%2033.6582%2029.1552C33.4471%2029.125%2033.2463%2029.0447%2033.0727%2028.9209C32.8985%2028.7969%2032.7567%2028.6328%2032.6593%2028.4425C32.5618%2028.2522%2032.5115%2028.0413%2032.5127%2027.8275V23.5875H28.246C28.0269%2023.5999%2027.8081%2023.5581%2027.609%2023.4656C27.4099%2023.3732%2027.2368%2023.233%2027.1049%2023.0576C26.973%2022.8822%2026.8864%2022.6769%2026.8529%2022.46C26.8194%2022.2431%2026.8399%2022.0213%2026.9127%2021.8142C27.0677%2021.4342%2027.1209%2021.0204%2027.0671%2020.6135C27.0134%2020.2066%2026.8544%2019.8208%2026.606%2019.4942C26.4091%2019.1597%2026.1395%2018.8739%2025.8172%2018.6578C25.4948%2018.4417%2025.128%2018.3009%2024.7438%2018.2458C24.3597%2018.1908%2023.9681%2018.2228%2023.598%2018.3397C23.2279%2018.4565%2022.8889%2018.6552%2022.606%2018.9209C22.3433%2019.1814%2022.1377%2019.4938%2022.0023%2019.8381C21.8668%2020.1824%2021.8045%2020.5512%2021.8193%2020.9209C21.8224%2021.2267%2021.8812%2021.5294%2021.9927%2021.8142C22.0632%2022.0158%2022.0842%2022.2314%2022.054%2022.4429C22.0237%2022.6543%2021.9432%2022.8554%2021.819%2023.0292C21.6949%2023.203%2021.5308%2023.3444%2021.3406%2023.4416C21.1504%2023.5388%2020.9396%2023.5888%2020.726%2023.5875H17.8193Z%22%20fill%3D%22url(%23paint1_linear_2691_4389)%22%2F%3E%0A%3C%2Fg%3E%0A%3Cdefs%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2691_4389%22%20x1%3D%220.662695%22%20y1%3D%2218.4025%22%20x2%3D%2251.7209%22%20y2%3D%2244.2212%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%23D4D4D8%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2371717A%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2691_4389%22%20x1%3D%2213.7453%22%20y1%3D%2221.3695%22%20x2%3D%2240.3876%22%20y2%3D%2235.7015%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%23D4D4D8%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2371717A%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3CclipPath%20id%3D%22clip0_2691_4389%22%3E%0A%3Crect%20width%3D%2252%22%20height%3D%2257%22%20fill%3D%22white%22%20transform%3D%22translate(0.152832%200.920898)%22%2F%3E%0A%3C%2FclipPath%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="modules icon" class="modules-image-light"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2253%22%20height%3D%2258%22%20viewBox%3D%220%200%2053%2058%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M3.43319%2014.5869L3.43322%2014.587L3.44269%2014.5812L22.9844%202.59084C24.4246%201.73116%2026.2124%201.69742%2027.6729%202.49791L27.6729%202.49792L27.6784%202.50094L48.6303%2013.8121C48.6313%2013.8126%2048.6322%2013.8131%2048.6331%2013.8137C50.0812%2014.6086%2050.9896%2016.1043%2051.026%2017.7437L51.1517%2039.8672L51.1517%2039.8746L51.1519%2039.8821C51.1856%2041.5203%2050.346%2043.0611%2048.9325%2043.9357L29.0918%2056.2117C27.6424%2057.1085%2025.8227%2057.1572%2024.3387%2056.3439L3.85107%2045.1148C2.26984%2044.2481%201.14232%2042.646%201.15293%2041.0494V41.0427L1.153%2018.552C1.15301%2018.5509%201.15302%2018.5499%201.15302%2018.5488C1.16485%2016.9324%202.02611%2015.4289%203.43319%2014.5869Z%22%20fill%3D%22%2318181B%22%20stroke%3D%22url(%23paint0_linear_2595_7175)%22%20stroke-width%3D%222%22%2F%3E%0A%3Cpath%20d%3D%22M33.8193%2042.2542H17.8193C16.7585%2042.2542%2015.7411%2041.8328%2014.9909%2041.0826C14.2408%2040.3325%2013.8193%2039.3151%2013.8193%2038.2542V24.9209C13.8193%2023.86%2014.2408%2022.8426%2014.9909%2022.0924C15.7411%2021.3423%2016.7585%2020.9209%2017.8193%2020.9209H19.1527C19.1751%2019.791%2019.5558%2018.6975%2020.2399%2017.7981C20.924%2016.8986%2021.8761%2016.2397%2022.9589%2015.9164C24.0416%2015.593%2025.1992%2015.6219%2026.2644%2015.999C27.3297%2016.376%2028.2477%2017.0817%2028.886%2018.0142C29.4839%2018.8664%2029.8094%2019.8799%2029.8193%2020.9209H33.8193C34.173%2020.9209%2034.5121%2021.0613%2034.7621%2021.3114C35.0122%2021.5614%2035.1527%2021.9006%2035.1527%2022.2542V26.2542C36.2825%2026.2766%2037.376%2026.6573%2038.2754%2027.3414C39.1749%2028.0255%2039.8338%2028.9776%2040.1572%2030.0604C40.4805%2031.1432%2040.4516%2032.3007%2040.0745%2033.366C39.6975%2034.4312%2038.9918%2035.3492%2038.0593%2035.9875C37.2071%2036.5854%2036.1937%2036.9109%2035.1527%2036.9209V40.9209C35.1527%2041.2745%2035.0122%2041.6136%2034.7621%2041.8637C34.5121%2042.1137%2034.173%2042.2542%2033.8193%2042.2542ZM17.8193%2023.5875C17.4657%2023.5875%2017.1266%2023.728%2016.8765%2023.978C16.6265%2024.2281%2016.486%2024.5672%2016.486%2024.9209V38.2542C16.486%2038.6078%2016.6265%2038.9469%2016.8765%2039.197C17.1266%2039.447%2017.4657%2039.5875%2017.8193%2039.5875H32.486V35.3475C32.4849%2035.1337%2032.5351%2034.9228%2032.6326%2034.7325C32.7301%2034.5422%2032.8718%2034.3782%2033.046%2034.2542C33.2196%2034.1304%2033.4205%2034.05%2033.6316%2034.0198C33.8427%2033.9897%2034.058%2034.0106%2034.2593%2034.0809C34.6393%2034.2359%2035.0532%2034.2891%2035.46%2034.2353C35.8669%2034.1816%2036.2527%2034.0226%2036.5793%2033.7742C36.9045%2033.5759%2037.1834%2033.3103%2037.3973%2032.9952C37.6111%2032.6801%2037.7551%2032.3229%2037.8193%2031.9475C37.8708%2031.5689%2037.8402%2031.1837%2037.7298%2030.8179C37.6194%2030.4522%2037.4317%2030.1144%2037.1793%2029.8275C36.8381%2029.413%2036.3734%2029.1183%2035.8529%2028.9864C35.3325%2028.8545%2034.7835%2028.8923%2034.286%2029.0942C34.0846%2029.1644%2033.8694%2029.1854%2033.6582%2029.1552C33.4471%2029.125%2033.2463%2029.0447%2033.0727%2028.9209C32.8985%2028.7969%2032.7567%2028.6328%2032.6593%2028.4425C32.5618%2028.2522%2032.5115%2028.0413%2032.5127%2027.8275V23.5875H28.246C28.0269%2023.5999%2027.8081%2023.5581%2027.609%2023.4656C27.4099%2023.3732%2027.2368%2023.233%2027.1049%2023.0576C26.973%2022.8822%2026.8864%2022.6769%2026.8529%2022.46C26.8194%2022.2431%2026.8399%2022.0213%2026.9127%2021.8142C27.0677%2021.4342%2027.1209%2021.0204%2027.0671%2020.6135C27.0134%2020.2066%2026.8544%2019.8208%2026.606%2019.4942C26.4091%2019.1597%2026.1395%2018.8739%2025.8172%2018.6578C25.4948%2018.4417%2025.128%2018.3009%2024.7438%2018.2458C24.3597%2018.1908%2023.9681%2018.2228%2023.598%2018.3397C23.2279%2018.4565%2022.8889%2018.6552%2022.606%2018.9209C22.3433%2019.1814%2022.1377%2019.4938%2022.0023%2019.8381C21.8668%2020.1824%2021.8045%2020.5512%2021.8193%2020.9209C21.8224%2021.2267%2021.8812%2021.5294%2021.9927%2021.8142C22.0632%2022.0158%2022.0842%2022.2314%2022.054%2022.4429C22.0237%2022.6543%2021.9432%2022.8554%2021.819%2023.0292C21.6949%2023.203%2021.5308%2023.3444%2021.3406%2023.4416C21.1504%2023.5388%2020.9396%2023.5888%2020.726%2023.5875H17.8193Z%22%20fill%3D%22url(%23paint1_linear_2595_7175)%22%2F%3E%0A%3Cdefs%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2595_7175%22%20x1%3D%220.662695%22%20y1%3D%2218.4025%22%20x2%3D%2251.7209%22%20y2%3D%2244.2212%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2371717A%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2595_7175%22%20x1%3D%2213.7453%22%20y1%3D%2221.3695%22%20x2%3D%2240.3876%22%20y2%3D%2235.7015%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2371717A%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="modules icon" class="modules-image-dark"> <div class="dark:text-white flex flex-col space-y text-black"><h3 class="font-semibold text-xl">Modules</h3><p class="dark:text-gray-300 text-gray-700">Discover our list of modules to supercharge your Nuxt project. Created by the Nuxt team and community.</p></div> </a></div><div class="border border-gray-200 col-span-2 dark:border-transparent dark:text-white documentation-container hover:border-transparent items-center justify-center lg:col-span-4 lg:order-none order-last relative rounded-xl row-span-2 text-black"><div class="gradient-border gradient-border-documentation gradient-border-square"></div><a href="https://nuxt.com/docs" target="_blank" class="bg-white dark:bg-gray-900 flex gap-y-4 items-center justify-center lg:flex-col rounded-xl"> <div class="flex flex-col gap-y-2 items-center justify-center lg:flex-col lg:py-7 px-5 py-6 rounded-xl sm:flex-row"><div class="dark:text-white flex flex-col space-y text-black"><h3 class="font-semibold text-xl">Documentation</h3><p class="dark:text-gray-300 text-gray-700">We highly recommend you take a look at the Nuxt documentation to level up.</p></div><img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%22342%22%20height%3D%22165%22%20viewBox%3D%220%200%20342%20165%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cg%20clip-path%3D%22url(%23clip0_2687_3947)%22%3E%0A%3Cpath%20d%3D%22M0.152832%20131.851H154.28%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M215.399%20107.359H349.153%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M0.152832%2077.2178L116.191%2077.2178%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M36.1528%20106.921L152.191%20106.921%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M202.153%2042.9209L317.305%2042.9209%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M218.153%2076.9209L345.305%2076.9209%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M285.947%208.45605V166.979%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M252.602%2016.8311V107.36%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M171.153%2016.9209V107.45%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M218.153%2016.9209V43.4501%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M122.153%2016.9211L327.45%2016.9209%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M1.92432%2043.3086H148.163%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M122.392%2016.4209V55.3659%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M36.084%200.920898L36.084%20176.921%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M75.4448%2043.249V175.152%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Ccircle%20opacity%3D%220.7%22%20cx%3D%2275.4448%22%20cy%3D%2277.2178%22%20r%3D%223.5%22%20fill%3D%22%2300DC82%22%2F%3E%0A%3Ccircle%20opacity%3D%220.7%22%20cx%3D%2236.1528%22%20cy%3D%22131.85%22%20r%3D%223.5%22%20fill%3D%22%2300DC82%22%2F%3E%0A%3Ccircle%20opacity%3D%220.7%22%20cx%3D%22285.947%22%20cy%3D%2242.9209%22%20r%3D%223.5%22%20fill%3D%22%2300DC82%22%2F%3E%0A%3Ccircle%20opacity%3D%220.7%22%20cx%3D%22252.602%22%20cy%3D%22107.359%22%20r%3D%223.5%22%20fill%3D%22%2300DC82%22%2F%3E%0A%3Cg%20filter%3D%22url(%23filter0_d_2687_3947)%22%3E%0A%3Cpath%20d%3D%22M122.846%2050.7109L163.067%2026.0929C166.656%2023.9507%20171.117%2023.8611%20174.77%2025.8579L217.894%2049.0819C221.524%2051.0665%20223.807%2054.8133%20223.892%2058.9246L224.15%20104.352C224.235%20108.448%20222.13%20112.287%20218.609%20114.46L177.783%20139.658C174.174%20141.886%20169.638%20142.011%20165.931%20139.984L123.774%20116.935C120.045%20114.896%20117.125%20111.001%20117.153%20106.776L117.153%2060.5974C117.18%2056.5529%20119.338%2052.8048%20122.846%2050.7109Z%22%20fill%3D%22white%22%2F%3E%0A%3Cpath%20d%3D%22M222.151%20104.393C222.22%20107.764%20220.487%20110.944%20217.571%20112.75C217.567%20112.753%20217.563%20112.755%20217.559%20112.758L176.733%20137.956C173.748%20139.798%20169.96%20139.907%20166.89%20138.229L124.733%20115.18C121.469%20113.395%20119.131%20110.069%20119.153%20106.79L119.153%20106.776L119.153%2060.6107C119.153%2060.6086%20119.153%2060.6065%20119.153%2060.6044C119.178%2057.2703%20120.958%2054.1669%20123.871%2052.4282L123.881%2052.4225L123.89%2052.4167L164.101%2027.8047C164.101%2027.8047%20164.101%2027.8047%20164.101%2027.8047C164.106%2027.8022%20164.11%2027.7997%20164.114%2027.7972C167.078%2026.0385%20170.793%2025.9632%20173.81%2027.6128L173.81%2027.6128L173.821%2027.6188L216.934%2050.8367C216.936%2050.8377%20216.938%2050.8387%20216.94%2050.8397C219.935%2052.4801%20221.817%2055.5878%20221.892%2058.9515L222.15%20104.363L222.15%20104.378L222.151%20104.393Z%22%20stroke%3D%22url(%23paint0_linear_2687_3947)%22%20stroke-width%3D%224%22%2F%3E%0A%3C%2Fg%3E%0A%3Cpath%20d%3D%22M192.349%2096.9158L190.63%2090.5186L183.778%2064.9088C183.55%2064.0605%20182.994%2063.3375%20182.233%2062.8988C181.472%2062.4601%20180.568%2062.3416%20179.72%2062.5693L173.323%2064.2877L173.116%2064.3498C172.807%2063.945%20172.409%2063.6168%20171.953%2063.3906C171.497%2063.1644%20170.995%2063.0463%20170.486%2063.0455H163.861C163.279%2063.0471%20162.707%2063.2043%20162.205%2063.501C161.703%2063.2043%20161.132%2063.0471%20160.549%2063.0455H153.924C153.045%2063.0455%20152.203%2063.3945%20151.582%2064.0157C150.96%2064.6369%20150.611%2065.4795%20150.611%2066.358V99.483C150.611%20100.362%20150.96%20101.204%20151.582%20101.825C152.203%20102.447%20153.045%20102.796%20153.924%20102.796H160.549C161.132%20102.794%20161.703%20102.637%20162.205%20102.34C162.707%20102.637%20163.279%20102.794%20163.861%20102.796H170.486C171.365%20102.796%20172.207%20102.447%20172.829%20101.825C173.45%20101.204%20173.799%20100.362%20173.799%2099.483V78.8627L177.836%2093.9346L179.554%20100.332C179.742%20101.039%20180.158%20101.665%20180.739%20102.11C181.32%20102.556%20182.031%20102.797%20182.763%20102.796C183.049%20102.791%20183.334%20102.756%20183.612%20102.692L190.009%20100.974C190.43%20100.861%20190.824%20100.665%20191.169%20100.399C191.514%20100.132%20191.802%2099.7997%20192.018%2099.4209C192.238%2099.047%20192.381%2098.6325%20192.438%2098.2021C192.495%2097.7717%20192.465%2097.3342%20192.349%2096.9158V96.9158ZM176.325%2075.4881L182.722%2073.7697L187.007%2089.7732L180.61%2091.4916L176.325%2075.4881ZM180.569%2065.7783L181.873%2070.5607L175.476%2072.2791L174.171%2067.4967L180.569%2065.7783ZM170.486%2066.358V91.2018H163.861V66.358H170.486ZM160.549%2066.358V71.3268H153.924V66.358H160.549ZM153.924%2099.483V74.6393H160.549V99.483H153.924ZM170.486%2099.483H163.861V94.5143H170.486V99.483ZM189.161%2097.7646L182.763%2099.483L181.459%2094.6799L187.877%2092.9615L189.161%2097.7646V97.7646Z%22%20fill%3D%22url(%23paint1_linear_2687_3947)%22%2F%3E%0A%3Crect%20x%3D%222.15283%22%20y%3D%22-3.0791%22%20width%3D%22327%22%20height%3D%2223%22%20fill%3D%22url(%23paint2_linear_2687_3947)%22%2F%3E%0A%3Crect%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22matrix(1%200%200%20-1%202.15283%20166.921)%22%20fill%3D%22url(%23paint3_linear_2687_3947)%22%2F%3E%0A%3Crect%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22matrix(0%201%201%200%200.152832%20-17.0791)%22%20fill%3D%22url(%23paint4_linear_2687_3947)%22%2F%3E%0A%3Crect%20x%3D%22342.153%22%20y%3D%22-17.0791%22%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22rotate(90%20342.153%20-17.0791)%22%20fill%3D%22url(%23paint5_linear_2687_3947)%22%2F%3E%0A%3C%2Fg%3E%0A%3Cdefs%3E%0A%3Cfilter%20id%3D%22filter0_d_2687_3947%22%20x%3D%2286.1528%22%20y%3D%22-6.5791%22%20width%3D%22169%22%20height%3D%22179%22%20filterUnits%3D%22userSpaceOnUse%22%20color-interpolation-filters%3D%22sRGB%22%3E%0A%3CfeFlood%20flood-opacity%3D%220%22%20result%3D%22BackgroundImageFix%22%2F%3E%0A%3CfeColorMatrix%20in%3D%22SourceAlpha%22%20type%3D%22matrix%22%20values%3D%220%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%20127%200%22%20result%3D%22hardAlpha%22%2F%3E%0A%3CfeOffset%2F%3E%0A%3CfeGaussianBlur%20stdDeviation%3D%2215.5%22%2F%3E%0A%3CfeComposite%20in2%3D%22hardAlpha%22%20operator%3D%22out%22%2F%3E%0A%3CfeColorMatrix%20type%3D%22matrix%22%20values%3D%220%200%200%200%201%200%200%200%200%201%200%200%200%200%201%200%200%200%200.07%200%22%2F%3E%0A%3CfeBlend%20mode%3D%22normal%22%20in2%3D%22BackgroundImageFix%22%20result%3D%22effect1_dropShadow_2687_3947%22%2F%3E%0A%3CfeBlend%20mode%3D%22normal%22%20in%3D%22SourceGraphic%22%20in2%3D%22effect1_dropShadow_2687_3947%22%20result%3D%22shape%22%2F%3E%0A%3C%2Ffilter%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2687_3947%22%20x1%3D%22118.202%22%20y1%3D%2260.3042%22%20x2%3D%22223.159%22%20y2%3D%22113.509%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2300DC82%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23003F25%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2687_3947%22%20x1%3D%22150.495%22%20y1%3D%2271.0767%22%20x2%3D%22191.769%22%20y2%3D%2294.1139%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2300DC82%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23003F25%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint2_linear_2687_3947%22%20x1%3D%22165.653%22%20y1%3D%22-3.0791%22%20x2%3D%22166.153%22%20y2%3D%2219.9209%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22white%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint3_linear_2687_3947%22%20x1%3D%22163.5%22%20y1%3D%22-2.30278e-07%22%20x2%3D%22164.091%22%20y2%3D%2224.9979%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22white%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint4_linear_2687_3947%22%20x1%3D%22163.5%22%20y1%3D%22-2.30278e-07%22%20x2%3D%22164.091%22%20y2%3D%2224.9979%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22white%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint5_linear_2687_3947%22%20x1%3D%22505.653%22%20y1%3D%22-17.0791%22%20x2%3D%22506.244%22%20y2%3D%227.91876%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22white%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3CclipPath%20id%3D%22clip0_2687_3947%22%3E%0A%3Crect%20width%3D%22341%22%20height%3D%22164%22%20fill%3D%22white%22%20transform%3D%22translate(0.152832%200.920898)%22%2F%3E%0A%3C%2FclipPath%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="documentation icon" class="documentation-image-color-light h-32 sm:h-34"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%22342%22%20height%3D%22165%22%20viewBox%3D%220%200%20342%20165%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cg%20clip-path%3D%22url(%23clip0_2595_7273)%22%3E%0A%3Cpath%20d%3D%22M0.152832%20131.851H154.28%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M215.399%20107.359H349.153%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M0.152832%2077.2178L116.191%2077.2178%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M36.1528%20106.921L152.191%20106.921%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M202.153%2042.9209L317.305%2042.9209%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M218.153%2076.9209L345.305%2076.9209%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M285.947%208.45605V166.979%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M252.602%2016.8311V107.36%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M171.153%2016.9209V107.45%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M218.153%2016.9209V43.4501%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M122.153%2016.9211L327.45%2016.9209%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M1.92432%2043.3086H148.163%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M122.392%2016.4209V55.3659%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M36.084%200.920898L36.084%20176.921%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M75.4448%2043.249V175.152%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Ccircle%20opacity%3D%220.14%22%20cx%3D%2275.4448%22%20cy%3D%2277.2178%22%20r%3D%223.5%22%20fill%3D%22%2300DC82%22%2F%3E%0A%3Ccircle%20opacity%3D%220.14%22%20cx%3D%2236.1528%22%20cy%3D%22131.85%22%20r%3D%223.5%22%20fill%3D%22%2300DC82%22%2F%3E%0A%3Ccircle%20opacity%3D%220.14%22%20cx%3D%22285.947%22%20cy%3D%2242.9209%22%20r%3D%223.5%22%20fill%3D%22%2300DC82%22%2F%3E%0A%3Ccircle%20opacity%3D%220.14%22%20cx%3D%22252.602%22%20cy%3D%22107.359%22%20r%3D%223.5%22%20fill%3D%22%2300DC82%22%2F%3E%0A%3Cg%20filter%3D%22url(%23filter0_d_2595_7273)%22%3E%0A%3Cpath%20d%3D%22M122.846%2050.7109L163.067%2026.0929C166.656%2023.9507%20171.117%2023.8611%20174.77%2025.8579L217.894%2049.0819C221.524%2051.0665%20223.807%2054.8133%20223.892%2058.9246L224.15%20104.352C224.235%20108.448%20222.13%20112.287%20218.609%20114.46L177.783%20139.658C174.174%20141.886%20169.638%20142.011%20165.931%20139.984L123.774%20116.935C120.045%20114.896%20117.125%20111.001%20117.153%20106.776L117.153%2060.5974C117.18%2056.5529%20119.338%2052.8048%20122.846%2050.7109Z%22%20fill%3D%22%2318181B%22%2F%3E%0A%3Cpath%20d%3D%22M123.871%2052.4282L123.881%2052.4225L123.89%2052.4167L164.101%2027.8047C167.083%2026.0291%20170.786%2025.9592%20173.81%2027.6128L173.81%2027.6128L173.821%2027.6188L216.934%2050.8367C216.936%2050.8376%20216.938%2050.8386%20216.939%2050.8395C219.938%2052.4814%20221.817%2055.5694%20221.892%2058.9515L222.15%20104.363L222.15%20104.378L222.151%20104.393C222.221%20107.772%20220.485%20110.952%20217.559%20112.758L176.733%20137.956C173.732%20139.808%20169.963%20139.909%20166.89%20138.229L124.733%20115.18C121.465%20113.393%20119.131%20110.089%20119.153%20106.79L119.153%20106.776L119.153%2060.6107C119.153%2060.6086%20119.153%2060.6065%20119.153%2060.6044C119.178%2057.2703%20120.958%2054.1669%20123.871%2052.4282Z%22%20stroke%3D%22url(%23paint0_linear_2595_7273)%22%20stroke-width%3D%224%22%2F%3E%0A%3C%2Fg%3E%0A%3Cpath%20d%3D%22M192.349%2096.9158L190.63%2090.5186L183.778%2064.9088C183.55%2064.0605%20182.994%2063.3375%20182.233%2062.8988C181.472%2062.4601%20180.568%2062.3416%20179.72%2062.5693L173.323%2064.2877L173.116%2064.3498C172.807%2063.945%20172.409%2063.6168%20171.953%2063.3906C171.497%2063.1644%20170.995%2063.0463%20170.486%2063.0455H163.861C163.279%2063.0471%20162.707%2063.2043%20162.205%2063.501C161.703%2063.2043%20161.132%2063.0471%20160.549%2063.0455H153.924C153.045%2063.0455%20152.203%2063.3945%20151.582%2064.0157C150.96%2064.6369%20150.611%2065.4795%20150.611%2066.358V99.483C150.611%20100.362%20150.96%20101.204%20151.582%20101.825C152.203%20102.447%20153.045%20102.796%20153.924%20102.796H160.549C161.132%20102.794%20161.703%20102.637%20162.205%20102.34C162.707%20102.637%20163.279%20102.794%20163.861%20102.796H170.486C171.365%20102.796%20172.207%20102.447%20172.829%20101.825C173.45%20101.204%20173.799%20100.362%20173.799%2099.483V78.8627L177.836%2093.9346L179.554%20100.332C179.742%20101.039%20180.158%20101.665%20180.739%20102.11C181.32%20102.556%20182.031%20102.797%20182.763%20102.796C183.049%20102.791%20183.334%20102.756%20183.612%20102.692L190.009%20100.974C190.43%20100.861%20190.824%20100.665%20191.169%20100.399C191.514%20100.132%20191.802%2099.7998%20192.018%2099.4209C192.238%2099.047%20192.381%2098.6325%20192.438%2098.2021C192.495%2097.7717%20192.465%2097.3342%20192.349%2096.9158ZM176.325%2075.4881L182.722%2073.7697L187.007%2089.7732L180.61%2091.4916L176.325%2075.4881ZM180.569%2065.7783L181.873%2070.5607L175.476%2072.2791L174.171%2067.4967L180.569%2065.7783ZM170.486%2066.358V91.2018H163.861V66.358H170.486ZM160.549%2066.358V71.3268H153.924V66.358H160.549ZM153.924%2099.483V74.6393H160.549V99.483H153.924ZM170.486%2099.483H163.861V94.5143H170.486V99.483ZM189.161%2097.7646L182.763%2099.483L181.459%2094.6799L187.877%2092.9615L189.161%2097.7646Z%22%20fill%3D%22url(%23paint1_linear_2595_7273)%22%2F%3E%0A%3Crect%20x%3D%222.15283%22%20y%3D%22-3.0791%22%20width%3D%22327%22%20height%3D%2223%22%20fill%3D%22url(%23paint2_linear_2595_7273)%22%2F%3E%0A%3Crect%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22matrix(1%200%200%20-1%202.15283%20166.921)%22%20fill%3D%22url(%23paint3_linear_2595_7273)%22%2F%3E%0A%3Crect%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22matrix(0%201%201%200%200.152832%20-17.0791)%22%20fill%3D%22url(%23paint4_linear_2595_7273)%22%2F%3E%0A%3Crect%20x%3D%22342.153%22%20y%3D%22-17.0791%22%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22rotate(90%20342.153%20-17.0791)%22%20fill%3D%22url(%23paint5_linear_2595_7273)%22%2F%3E%0A%3C%2Fg%3E%0A%3Cdefs%3E%0A%3Cfilter%20id%3D%22filter0_d_2595_7273%22%20x%3D%2286.1528%22%20y%3D%22-6.5791%22%20width%3D%22169%22%20height%3D%22179%22%20filterUnits%3D%22userSpaceOnUse%22%20color-interpolation-filters%3D%22sRGB%22%3E%0A%3CfeFlood%20flood-opacity%3D%220%22%20result%3D%22BackgroundImageFix%22%2F%3E%0A%3CfeColorMatrix%20in%3D%22SourceAlpha%22%20type%3D%22matrix%22%20values%3D%220%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%20127%200%22%20result%3D%22hardAlpha%22%2F%3E%0A%3CfeOffset%2F%3E%0A%3CfeGaussianBlur%20stdDeviation%3D%2215.5%22%2F%3E%0A%3CfeComposite%20in2%3D%22hardAlpha%22%20operator%3D%22out%22%2F%3E%0A%3CfeColorMatrix%20type%3D%22matrix%22%20values%3D%220%200%200%200%201%200%200%200%200%201%200%200%200%200%201%200%200%200%200.07%200%22%2F%3E%0A%3CfeBlend%20mode%3D%22normal%22%20in2%3D%22BackgroundImageFix%22%20result%3D%22effect1_dropShadow_2595_7273%22%2F%3E%0A%3CfeBlend%20mode%3D%22normal%22%20in%3D%22SourceGraphic%22%20in2%3D%22effect1_dropShadow_2595_7273%22%20result%3D%22shape%22%2F%3E%0A%3C%2Ffilter%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2595_7273%22%20x1%3D%22118.202%22%20y1%3D%2260.3042%22%20x2%3D%22223.159%22%20y2%3D%22113.509%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2300DC82%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23003F25%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2595_7273%22%20x1%3D%22150.495%22%20y1%3D%2271.0767%22%20x2%3D%22191.769%22%20y2%3D%2294.1139%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2300DC82%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23003F25%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint2_linear_2595_7273%22%20x1%3D%22165.653%22%20y1%3D%22-3.0791%22%20x2%3D%22166.153%22%20y2%3D%2219.9209%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2318181B%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2318181B%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint3_linear_2595_7273%22%20x1%3D%22163.5%22%20y1%3D%22-2.30278e-07%22%20x2%3D%22164.091%22%20y2%3D%2224.9979%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2318181B%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2318181B%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint4_linear_2595_7273%22%20x1%3D%22163.5%22%20y1%3D%22-2.30278e-07%22%20x2%3D%22164.091%22%20y2%3D%2224.9979%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2318181B%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2318181B%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint5_linear_2595_7273%22%20x1%3D%22505.653%22%20y1%3D%22-17.0791%22%20x2%3D%22506.244%22%20y2%3D%227.91876%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2318181B%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2318181B%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3CclipPath%20id%3D%22clip0_2595_7273%22%3E%0A%3Crect%20width%3D%22341%22%20height%3D%22164%22%20fill%3D%22white%22%20transform%3D%22translate(0.152832%200.920898)%22%2F%3E%0A%3C%2FclipPath%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="documentation icon" class="documentation-image-color-dark h-32 sm:h-34"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%22342%22%20height%3D%22165%22%20viewBox%3D%220%200%20342%20165%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cg%20clip-path%3D%22url(%23clip0_2687_3977)%22%3E%0A%3Cpath%20d%3D%22M0.152832%20131.851H154.28%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M215.399%20107.359H349.153%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M0.152832%2077.2178L116.191%2077.2178%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M36.1528%20106.921L152.191%20106.921%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M202.153%2042.9209L317.305%2042.9209%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M218.153%2076.9209L345.305%2076.9209%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M285.947%208.45605V166.979%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M252.602%2016.8311V107.36%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M171.153%2016.9209V107.45%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M218.153%2016.9209V43.4501%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M122.153%2016.9211L327.45%2016.9209%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M1.92432%2043.3086H148.163%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M122.392%2016.4209V55.3659%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M36.084%200.920898L36.084%20176.921%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M75.4448%2043.249V175.152%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Ccircle%20opacity%3D%220.7%22%20cx%3D%2275.4448%22%20cy%3D%2277.2178%22%20r%3D%223.5%22%20fill%3D%22%23A1A1AA%22%2F%3E%0A%3Ccircle%20opacity%3D%220.7%22%20cx%3D%2236.1528%22%20cy%3D%22131.85%22%20r%3D%223.5%22%20fill%3D%22%23A1A1AA%22%2F%3E%0A%3Ccircle%20opacity%3D%220.7%22%20cx%3D%22285.947%22%20cy%3D%2242.9209%22%20r%3D%223.5%22%20fill%3D%22%23A1A1AA%22%2F%3E%0A%3Ccircle%20opacity%3D%220.7%22%20cx%3D%22252.602%22%20cy%3D%22107.359%22%20r%3D%223.5%22%20fill%3D%22%23A1A1AA%22%2F%3E%0A%3Cg%20filter%3D%22url(%23filter0_d_2687_3977)%22%3E%0A%3Cpath%20d%3D%22M122.846%2050.7109L163.067%2026.0929C166.656%2023.9507%20171.117%2023.8611%20174.77%2025.8579L217.894%2049.0819C221.524%2051.0665%20223.807%2054.8133%20223.892%2058.9246L224.15%20104.352C224.235%20108.448%20222.13%20112.287%20218.609%20114.46L177.783%20139.658C174.174%20141.886%20169.638%20142.011%20165.931%20139.984L123.774%20116.935C120.045%20114.896%20117.125%20111.001%20117.153%20106.776L117.153%2060.5974C117.18%2056.5529%20119.338%2052.8048%20122.846%2050.7109Z%22%20fill%3D%22white%22%2F%3E%0A%3Cpath%20d%3D%22M222.151%20104.393C222.22%20107.764%20220.487%20110.944%20217.571%20112.75C217.567%20112.753%20217.563%20112.755%20217.559%20112.758L176.733%20137.956C173.748%20139.798%20169.96%20139.907%20166.89%20138.229L124.733%20115.18C121.469%20113.395%20119.131%20110.069%20119.153%20106.79L119.153%20106.776L119.153%2060.6107C119.153%2060.6086%20119.153%2060.6065%20119.153%2060.6044C119.178%2057.2703%20120.958%2054.1669%20123.871%2052.4282L123.881%2052.4225L123.89%2052.4167L164.101%2027.8047C164.101%2027.8047%20164.101%2027.8047%20164.101%2027.8047C164.106%2027.8022%20164.11%2027.7997%20164.114%2027.7972C167.078%2026.0385%20170.793%2025.9632%20173.81%2027.6128L173.81%2027.6128L173.821%2027.6188L216.934%2050.8367C216.936%2050.8377%20216.938%2050.8387%20216.94%2050.8397C219.935%2052.4801%20221.817%2055.5878%20221.892%2058.9515L222.15%20104.363L222.15%20104.378L222.151%20104.393Z%22%20stroke%3D%22url(%23paint0_linear_2687_3977)%22%20stroke-width%3D%224%22%2F%3E%0A%3C%2Fg%3E%0A%3Cpath%20d%3D%22M192.349%2096.9158L190.63%2090.5186L183.778%2064.9088C183.55%2064.0605%20182.994%2063.3375%20182.233%2062.8988C181.472%2062.4601%20180.568%2062.3416%20179.72%2062.5693L173.323%2064.2877L173.116%2064.3498C172.807%2063.945%20172.409%2063.6168%20171.953%2063.3906C171.497%2063.1644%20170.995%2063.0463%20170.486%2063.0455H163.861C163.279%2063.0471%20162.707%2063.2043%20162.205%2063.501C161.703%2063.2043%20161.132%2063.0471%20160.549%2063.0455H153.924C153.045%2063.0455%20152.203%2063.3945%20151.582%2064.0157C150.96%2064.6369%20150.611%2065.4795%20150.611%2066.358V99.483C150.611%20100.362%20150.96%20101.204%20151.582%20101.825C152.203%20102.447%20153.045%20102.796%20153.924%20102.796H160.549C161.132%20102.794%20161.703%20102.637%20162.205%20102.34C162.707%20102.637%20163.279%20102.794%20163.861%20102.796H170.486C171.365%20102.796%20172.207%20102.447%20172.829%20101.825C173.45%20101.204%20173.799%20100.362%20173.799%2099.483V78.8627L177.836%2093.9346L179.554%20100.332C179.742%20101.039%20180.158%20101.665%20180.739%20102.11C181.32%20102.556%20182.031%20102.797%20182.763%20102.796C183.049%20102.791%20183.334%20102.756%20183.612%20102.692L190.009%20100.974C190.43%20100.861%20190.824%20100.665%20191.169%20100.399C191.514%20100.132%20191.802%2099.7997%20192.018%2099.4209C192.238%2099.047%20192.381%2098.6325%20192.438%2098.2021C192.495%2097.7717%20192.465%2097.3342%20192.349%2096.9158V96.9158ZM176.325%2075.4881L182.722%2073.7697L187.007%2089.7732L180.61%2091.4916L176.325%2075.4881ZM180.569%2065.7783L181.873%2070.5607L175.476%2072.2791L174.171%2067.4967L180.569%2065.7783ZM170.486%2066.358V91.2018H163.861V66.358H170.486ZM160.549%2066.358V71.3268H153.924V66.358H160.549ZM153.924%2099.483V74.6393H160.549V99.483H153.924ZM170.486%2099.483H163.861V94.5143H170.486V99.483ZM189.161%2097.7646L182.763%2099.483L181.459%2094.6799L187.877%2092.9615L189.161%2097.7646V97.7646Z%22%20fill%3D%22url(%23paint1_linear_2687_3977)%22%2F%3E%0A%3Crect%20x%3D%222.15283%22%20y%3D%22-3.0791%22%20width%3D%22327%22%20height%3D%2223%22%20fill%3D%22url(%23paint2_linear_2687_3977)%22%2F%3E%0A%3Crect%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22matrix(1%200%200%20-1%202.15283%20166.921)%22%20fill%3D%22url(%23paint3_linear_2687_3977)%22%2F%3E%0A%3Crect%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22matrix(0%201%201%200%200.152832%20-17.0791)%22%20fill%3D%22url(%23paint4_linear_2687_3977)%22%2F%3E%0A%3Crect%20x%3D%22342.153%22%20y%3D%22-17.0791%22%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22rotate(90%20342.153%20-17.0791)%22%20fill%3D%22url(%23paint5_linear_2687_3977)%22%2F%3E%0A%3C%2Fg%3E%0A%3Cdefs%3E%0A%3Cfilter%20id%3D%22filter0_d_2687_3977%22%20x%3D%2286.1528%22%20y%3D%22-6.5791%22%20width%3D%22169%22%20height%3D%22179%22%20filterUnits%3D%22userSpaceOnUse%22%20color-interpolation-filters%3D%22sRGB%22%3E%0A%3CfeFlood%20flood-opacity%3D%220%22%20result%3D%22BackgroundImageFix%22%2F%3E%0A%3CfeColorMatrix%20in%3D%22SourceAlpha%22%20type%3D%22matrix%22%20values%3D%220%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%20127%200%22%20result%3D%22hardAlpha%22%2F%3E%0A%3CfeOffset%2F%3E%0A%3CfeGaussianBlur%20stdDeviation%3D%2215.5%22%2F%3E%0A%3CfeComposite%20in2%3D%22hardAlpha%22%20operator%3D%22out%22%2F%3E%0A%3CfeColorMatrix%20type%3D%22matrix%22%20values%3D%220%200%200%200%200.831373%200%200%200%200%200.831373%200%200%200%200%200.847059%200%200%200%200.07%200%22%2F%3E%0A%3CfeBlend%20mode%3D%22normal%22%20in2%3D%22BackgroundImageFix%22%20result%3D%22effect1_dropShadow_2687_3977%22%2F%3E%0A%3CfeBlend%20mode%3D%22normal%22%20in%3D%22SourceGraphic%22%20in2%3D%22effect1_dropShadow_2687_3977%22%20result%3D%22shape%22%2F%3E%0A%3C%2Ffilter%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2687_3977%22%20x1%3D%22118.202%22%20y1%3D%2260.3042%22%20x2%3D%22223.159%22%20y2%3D%22113.509%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%23D4D4D8%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%233F3F46%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2687_3977%22%20x1%3D%22150.495%22%20y1%3D%2271.0767%22%20x2%3D%22191.769%22%20y2%3D%2294.1139%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%23D4D4D8%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%233F3F46%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint2_linear_2687_3977%22%20x1%3D%22165.653%22%20y1%3D%22-3.0791%22%20x2%3D%22166.153%22%20y2%3D%2219.9209%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22white%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint3_linear_2687_3977%22%20x1%3D%22163.5%22%20y1%3D%22-2.30278e-07%22%20x2%3D%22164.091%22%20y2%3D%2224.9979%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22white%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint4_linear_2687_3977%22%20x1%3D%22163.5%22%20y1%3D%22-2.30278e-07%22%20x2%3D%22164.091%22%20y2%3D%2224.9979%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22white%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint5_linear_2687_3977%22%20x1%3D%22505.653%22%20y1%3D%22-17.0791%22%20x2%3D%22506.244%22%20y2%3D%227.91876%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22white%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3CclipPath%20id%3D%22clip0_2687_3977%22%3E%0A%3Crect%20width%3D%22341%22%20height%3D%22164%22%20fill%3D%22white%22%20transform%3D%22translate(0.152832%200.920898)%22%2F%3E%0A%3C%2FclipPath%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="documentation icon" class="documentation-image-light h-32 sm:h-34"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%22342%22%20height%3D%22165%22%20viewBox%3D%220%200%20342%20165%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cg%20clip-path%3D%22url(%23clip0_2595_7193)%22%3E%0A%3Cpath%20d%3D%22M0.152832%20131.851H154.28%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M215.399%20107.359H349.153%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M0.152832%2077.2178L116.191%2077.2178%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M36.1528%20106.921L152.191%20106.921%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M202.153%2042.9209L317.305%2042.9209%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M218.153%2076.9209L345.305%2076.9209%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M285.947%208.45605V166.979%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M252.602%2016.8311V107.36%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M171.153%2016.9209V107.45%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M218.153%2016.9209V43.4501%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M122.153%2016.9211L327.45%2016.9209%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M1.92432%2043.3086H148.163%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M122.392%2016.4209V55.3659%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M36.084%200.920898L36.084%20176.921%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M75.4448%2043.249V175.152%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Ccircle%20opacity%3D%220.14%22%20cx%3D%2275.4448%22%20cy%3D%2277.2178%22%20r%3D%223.5%22%20fill%3D%22white%22%2F%3E%0A%3Ccircle%20opacity%3D%220.14%22%20cx%3D%2236.1528%22%20cy%3D%22131.85%22%20r%3D%223.5%22%20fill%3D%22white%22%2F%3E%0A%3Ccircle%20opacity%3D%220.14%22%20cx%3D%22285.947%22%20cy%3D%2242.9209%22%20r%3D%223.5%22%20fill%3D%22white%22%2F%3E%0A%3Ccircle%20opacity%3D%220.14%22%20cx%3D%22252.602%22%20cy%3D%22107.359%22%20r%3D%223.5%22%20fill%3D%22white%22%2F%3E%0A%3Cg%20filter%3D%22url(%23filter0_d_2595_7193)%22%3E%0A%3Cpath%20d%3D%22M122.846%2050.7109L163.067%2026.0929C166.656%2023.9507%20171.117%2023.8611%20174.77%2025.8579L217.894%2049.0819C221.524%2051.0665%20223.807%2054.8133%20223.892%2058.9246L224.15%20104.352C224.235%20108.448%20222.13%20112.287%20218.609%20114.46L177.783%20139.658C174.174%20141.886%20169.638%20142.011%20165.931%20139.984L123.774%20116.935C120.045%20114.896%20117.125%20111.001%20117.153%20106.776L117.153%2060.5974C117.18%2056.5529%20119.338%2052.8048%20122.846%2050.7109Z%22%20fill%3D%22%2318181B%22%2F%3E%0A%3Cpath%20d%3D%22M123.871%2052.4282L123.881%2052.4225L123.89%2052.4167L164.101%2027.8047C167.083%2026.0291%20170.786%2025.9592%20173.81%2027.6128L173.81%2027.6128L173.821%2027.6188L216.934%2050.8367C216.936%2050.8376%20216.938%2050.8386%20216.939%2050.8395C219.938%2052.4814%20221.817%2055.5694%20221.892%2058.9515L222.15%20104.363L222.15%20104.378L222.151%20104.393C222.221%20107.772%20220.485%20110.952%20217.559%20112.758L176.733%20137.956C173.732%20139.808%20169.963%20139.909%20166.89%20138.229L124.733%20115.18C121.465%20113.393%20119.131%20110.089%20119.153%20106.79L119.153%20106.776L119.153%2060.6107C119.153%2060.6086%20119.153%2060.6065%20119.153%2060.6044C119.178%2057.2703%20120.958%2054.1669%20123.871%2052.4282Z%22%20stroke%3D%22url(%23paint0_linear_2595_7193)%22%20stroke-width%3D%224%22%2F%3E%0A%3C%2Fg%3E%0A%3Cpath%20d%3D%22M192.349%2096.9158L190.63%2090.5186L183.778%2064.9088C183.55%2064.0605%20182.994%2063.3375%20182.233%2062.8988C181.472%2062.4601%20180.568%2062.3416%20179.72%2062.5693L173.323%2064.2877L173.116%2064.3498C172.807%2063.945%20172.409%2063.6168%20171.953%2063.3906C171.497%2063.1644%20170.995%2063.0463%20170.486%2063.0455H163.861C163.279%2063.0471%20162.707%2063.2043%20162.205%2063.501C161.703%2063.2043%20161.132%2063.0471%20160.549%2063.0455H153.924C153.045%2063.0455%20152.203%2063.3945%20151.582%2064.0157C150.96%2064.6369%20150.611%2065.4795%20150.611%2066.358V99.483C150.611%20100.362%20150.96%20101.204%20151.582%20101.825C152.203%20102.447%20153.045%20102.796%20153.924%20102.796H160.549C161.132%20102.794%20161.703%20102.637%20162.205%20102.34C162.707%20102.637%20163.279%20102.794%20163.861%20102.796H170.486C171.365%20102.796%20172.207%20102.447%20172.829%20101.825C173.45%20101.204%20173.799%20100.362%20173.799%2099.483V78.8627L177.836%2093.9346L179.554%20100.332C179.742%20101.039%20180.158%20101.665%20180.739%20102.11C181.32%20102.556%20182.031%20102.797%20182.763%20102.796C183.049%20102.791%20183.334%20102.756%20183.612%20102.692L190.009%20100.974C190.43%20100.861%20190.824%20100.665%20191.169%20100.399C191.514%20100.132%20191.802%2099.7998%20192.018%2099.4209C192.238%2099.047%20192.381%2098.6325%20192.438%2098.2021C192.495%2097.7717%20192.465%2097.3342%20192.349%2096.9158ZM176.325%2075.4881L182.722%2073.7697L187.007%2089.7732L180.61%2091.4916L176.325%2075.4881ZM180.569%2065.7783L181.873%2070.5607L175.476%2072.2791L174.171%2067.4967L180.569%2065.7783ZM170.486%2066.358V91.2018H163.861V66.358H170.486ZM160.549%2066.358V71.3268H153.924V66.358H160.549ZM153.924%2099.483V74.6393H160.549V99.483H153.924ZM170.486%2099.483H163.861V94.5143H170.486V99.483ZM189.161%2097.7646L182.763%2099.483L181.459%2094.6799L187.877%2092.9615L189.161%2097.7646Z%22%20fill%3D%22url(%23paint1_linear_2595_7193)%22%2F%3E%0A%3Crect%20x%3D%222.15283%22%20y%3D%22-3.0791%22%20width%3D%22327%22%20height%3D%2223%22%20fill%3D%22url(%23paint2_linear_2595_7193)%22%2F%3E%0A%3Crect%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22matrix(1%200%200%20-1%202.15283%20166.921)%22%20fill%3D%22url(%23paint3_linear_2595_7193)%22%2F%3E%0A%3Crect%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22matrix(0%201%201%200%200.152832%20-17.0791)%22%20fill%3D%22url(%23paint4_linear_2595_7193)%22%2F%3E%0A%3Crect%20x%3D%22342.153%22%20y%3D%22-17.0791%22%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22rotate(90%20342.153%20-17.0791)%22%20fill%3D%22url(%23paint5_linear_2595_7193)%22%2F%3E%0A%3C%2Fg%3E%0A%3Cdefs%3E%0A%3Cfilter%20id%3D%22filter0_d_2595_7193%22%20x%3D%2286.1528%22%20y%3D%22-6.5791%22%20width%3D%22169%22%20height%3D%22179%22%20filterUnits%3D%22userSpaceOnUse%22%20color-interpolation-filters%3D%22sRGB%22%3E%0A%3CfeFlood%20flood-opacity%3D%220%22%20result%3D%22BackgroundImageFix%22%2F%3E%0A%3CfeColorMatrix%20in%3D%22SourceAlpha%22%20type%3D%22matrix%22%20values%3D%220%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%20127%200%22%20result%3D%22hardAlpha%22%2F%3E%0A%3CfeOffset%2F%3E%0A%3CfeGaussianBlur%20stdDeviation%3D%2215.5%22%2F%3E%0A%3CfeComposite%20in2%3D%22hardAlpha%22%20operator%3D%22out%22%2F%3E%0A%3CfeColorMatrix%20type%3D%22matrix%22%20values%3D%220%200%200%200%201%200%200%200%200%201%200%200%200%200%201%200%200%200%200.07%200%22%2F%3E%0A%3CfeBlend%20mode%3D%22normal%22%20in2%3D%22BackgroundImageFix%22%20result%3D%22effect1_dropShadow_2595_7193%22%2F%3E%0A%3CfeBlend%20mode%3D%22normal%22%20in%3D%22SourceGraphic%22%20in2%3D%22effect1_dropShadow_2595_7193%22%20result%3D%22shape%22%2F%3E%0A%3C%2Ffilter%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2595_7193%22%20x1%3D%22118.202%22%20y1%3D%2260.3042%22%20x2%3D%22223.159%22%20y2%3D%22113.509%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2371717A%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2595_7193%22%20x1%3D%22150.495%22%20y1%3D%2271.0767%22%20x2%3D%22191.769%22%20y2%3D%2294.1139%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2371717A%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint2_linear_2595_7193%22%20x1%3D%22165.653%22%20y1%3D%22-3.0791%22%20x2%3D%22166.153%22%20y2%3D%2219.9209%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2318181B%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2318181B%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint3_linear_2595_7193%22%20x1%3D%22163.5%22%20y1%3D%22-2.30278e-07%22%20x2%3D%22164.091%22%20y2%3D%2224.9979%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2318181B%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2318181B%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint4_linear_2595_7193%22%20x1%3D%22163.5%22%20y1%3D%22-2.30278e-07%22%20x2%3D%22164.091%22%20y2%3D%2224.9979%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2318181B%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2318181B%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint5_linear_2595_7193%22%20x1%3D%22505.653%22%20y1%3D%22-17.0791%22%20x2%3D%22506.244%22%20y2%3D%227.91876%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2318181B%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2318181B%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3CclipPath%20id%3D%22clip0_2595_7193%22%3E%0A%3Crect%20width%3D%22341%22%20height%3D%22164%22%20fill%3D%22white%22%20transform%3D%22translate(0.152832%200.920898)%22%2F%3E%0A%3C%2FclipPath%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="documentation icon" class="documentation-image-dark h-32 sm:h-34"></div> </a></div><div class="border border-gray-200 col-span-2 dark:border-transparent dark:text-white examples-container hover:border-transparent items-center justify-center lg:col-span-6 lg:min-h-min md:min-h-[180px] relative rounded-xl sm:col-span-1 sm:min-h-[220px] text-black"><div class="gradient-border gradient-border-examples gradient-border-rect"></div><div class="absolute bg-gradient-to-l duration-300 examples-gradient-right from-blue-400 inset-y-0 right-0 rounded-xl to-transparent transition-opacity w-[20%] z-1"></div><a href="https://nuxt.com/docs/examples" target="_blank" class="bg-white dark:bg-gray-900 flex gap-x-4 items-center justify-center lg:min-h-min md:min-h-[180px] px-5 py-6 rounded-xl sm:min-h-[220px]"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2253%22%20height%3D%2258%22%20viewBox%3D%220%200%2053%2058%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M49.1971%2043.7595C49.1113%2043.8209%2049.0231%2043.8796%2048.9325%2043.9357L29.0918%2056.2117C27.6504%2057.1035%2025.8212%2057.1564%2024.3387%2056.3439L3.85107%2045.1148C2.27157%2044.2491%201.14238%2042.6366%201.15291%2041.0494L1.15293%2041.0427L1.153%2018.552C1.15301%2018.5509%201.15302%2018.5499%201.15302%2018.5488C1.16485%2016.9324%202.02611%2015.4289%203.43319%2014.5869L3.43322%2014.587L3.44269%2014.5812L22.9844%202.59084C24.4169%201.73583%2026.2139%201.69824%2027.6729%202.49791L27.6729%202.49792L27.6784%202.50094L48.6303%2013.8121C48.6313%2013.8126%2048.6322%2013.8131%2048.6331%2013.8136C50.0797%2014.6078%2050.9898%2016.1132%2051.026%2017.7438L51.1517%2039.8672L51.1517%2039.8746L51.1519%2039.8821C51.1834%2041.4138%2050.4491%2042.8635%2049.1971%2043.7595Z%22%20fill%3D%22white%22%20stroke%3D%22url(%23paint0_linear_2613_3941)%22%20stroke-width%3D%222%22%2F%3E%0A%3Cpath%20d%3D%22M37.1528%2017.9209H15.1528C14.6224%2017.9209%2014.1137%2018.1316%2013.7386%2018.5067C13.3635%2018.8818%2013.1528%2019.3905%2013.1528%2019.9209V37.9209C13.1528%2038.4513%2013.3635%2038.96%2013.7386%2039.3351C14.1137%2039.7102%2014.6224%2039.9209%2015.1528%2039.9209H37.1528C37.6833%2039.9209%2038.192%2039.7102%2038.567%2039.3351C38.9421%2038.96%2039.1528%2038.4513%2039.1528%2037.9209V19.9209C39.1528%2019.3905%2038.9421%2018.8818%2038.567%2018.5067C38.192%2018.1316%2037.6833%2017.9209%2037.1528%2017.9209V17.9209ZM15.1528%2019.9209H37.1528V24.9209H15.1528V19.9209ZM15.1528%2026.9209H22.1528V37.9209H15.1528V26.9209ZM37.1528%2037.9209H24.1528V26.9209H37.1528V37.9209Z%22%20fill%3D%22url(%23paint1_linear_2613_3941)%22%2F%3E%0A%3Cdefs%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2613_3941%22%20x1%3D%220.662695%22%20y1%3D%2218.4025%22%20x2%3D%2251.7209%22%20y2%3D%2244.2212%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%238DEAFF%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23008AA9%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2613_3941%22%20x1%3D%2213.0804%22%20y1%3D%2222.6224%22%20x2%3D%2237.028%22%20y2%3D%2237.847%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%238DEAFF%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23008AA9%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="examples icon" class="examples-image-color-light"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2253%22%20height%3D%2258%22%20viewBox%3D%220%200%2053%2058%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M3.43319%2014.5869L3.43322%2014.587L3.44269%2014.5812L22.9844%202.59084C24.4246%201.73116%2026.2124%201.69742%2027.6729%202.49791L27.6729%202.49792L27.6784%202.50094L48.6303%2013.8121C48.6313%2013.8126%2048.6322%2013.8131%2048.6331%2013.8137C50.0812%2014.6086%2050.9896%2016.1043%2051.026%2017.7437L51.1517%2039.8672L51.1517%2039.8746L51.1519%2039.8821C51.1856%2041.5203%2050.346%2043.0611%2048.9325%2043.9357L29.0918%2056.2117C27.6424%2057.1085%2025.8227%2057.1572%2024.3387%2056.3439L3.85107%2045.1148C2.26984%2044.2481%201.14232%2042.646%201.15293%2041.0494V41.0427L1.153%2018.552C1.15301%2018.5509%201.15302%2018.5499%201.15302%2018.5488C1.16485%2016.9324%202.02611%2015.4289%203.43319%2014.5869Z%22%20fill%3D%22%2318181B%22%20stroke%3D%22url(%23paint0_linear_2595_7426)%22%20stroke-width%3D%222%22%2F%3E%0A%3Cpath%20d%3D%22M37.1528%2017.9209H15.1528C14.6224%2017.9209%2014.1137%2018.1316%2013.7386%2018.5067C13.3635%2018.8818%2013.1528%2019.3905%2013.1528%2019.9209V37.9209C13.1528%2038.4513%2013.3635%2038.96%2013.7386%2039.3351C14.1137%2039.7102%2014.6224%2039.9209%2015.1528%2039.9209H37.1528C37.6833%2039.9209%2038.192%2039.7102%2038.567%2039.3351C38.9421%2038.96%2039.1528%2038.4513%2039.1528%2037.9209V19.9209C39.1528%2019.3905%2038.9421%2018.8818%2038.567%2018.5067C38.192%2018.1316%2037.6833%2017.9209%2037.1528%2017.9209ZM15.1528%2019.9209H37.1528V24.9209H15.1528V19.9209ZM15.1528%2026.9209H22.1528V37.9209H15.1528V26.9209ZM37.1528%2037.9209H24.1528V26.9209H37.1528V37.9209Z%22%20fill%3D%22url(%23paint1_linear_2595_7426)%22%2F%3E%0A%3Cdefs%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2595_7426%22%20x1%3D%220.662695%22%20y1%3D%2218.4025%22%20x2%3D%2251.7209%22%20y2%3D%2244.2212%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%238DEAFF%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23008AA9%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2595_7426%22%20x1%3D%2213.0804%22%20y1%3D%2222.6224%22%20x2%3D%2237.028%22%20y2%3D%2237.847%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%238DEAFF%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23008AA9%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="examples icon" class="examples-image-color-dark"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2253%22%20height%3D%2258%22%20viewBox%3D%220%200%2053%2058%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M49.1971%2043.7595C49.1113%2043.8209%2049.0231%2043.8796%2048.9325%2043.9357L29.0918%2056.2117C27.6504%2057.1035%2025.8212%2057.1564%2024.3387%2056.3439L3.85107%2045.1148C2.27157%2044.2491%201.14238%2042.6366%201.15291%2041.0494L1.15293%2041.0427L1.153%2018.552C1.15301%2018.5509%201.15302%2018.5499%201.15302%2018.5488C1.16485%2016.9324%202.02611%2015.4289%203.43319%2014.5869L3.43322%2014.587L3.44269%2014.5812L22.9844%202.59084C24.4169%201.73583%2026.2139%201.69824%2027.6729%202.49791L27.6729%202.49792L27.6784%202.50094L48.6303%2013.8121C48.6313%2013.8126%2048.6322%2013.8131%2048.6331%2013.8136C50.0797%2014.6078%2050.9898%2016.1132%2051.026%2017.7438L51.1517%2039.8672L51.1517%2039.8746L51.1519%2039.8821C51.1834%2041.4138%2050.4491%2042.8635%2049.1971%2043.7595Z%22%20fill%3D%22white%22%20stroke%3D%22url(%23paint0_linear_2691_4397)%22%20stroke-width%3D%222%22%2F%3E%0A%3Cpath%20d%3D%22M37.1528%2017.9209H15.1528C14.6224%2017.9209%2014.1137%2018.1316%2013.7386%2018.5067C13.3635%2018.8818%2013.1528%2019.3905%2013.1528%2019.9209V37.9209C13.1528%2038.4513%2013.3635%2038.96%2013.7386%2039.3351C14.1137%2039.7102%2014.6224%2039.9209%2015.1528%2039.9209H37.1528C37.6833%2039.9209%2038.192%2039.7102%2038.567%2039.3351C38.9421%2038.96%2039.1528%2038.4513%2039.1528%2037.9209V19.9209C39.1528%2019.3905%2038.9421%2018.8818%2038.567%2018.5067C38.192%2018.1316%2037.6833%2017.9209%2037.1528%2017.9209V17.9209ZM15.1528%2019.9209H37.1528V24.9209H15.1528V19.9209ZM15.1528%2026.9209H22.1528V37.9209H15.1528V26.9209ZM37.1528%2037.9209H24.1528V26.9209H37.1528V37.9209Z%22%20fill%3D%22url(%23paint1_linear_2691_4397)%22%2F%3E%0A%3Cdefs%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2691_4397%22%20x1%3D%220.662695%22%20y1%3D%2218.4025%22%20x2%3D%2251.7209%22%20y2%3D%2244.2212%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%23D4D4D8%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2371717A%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2691_4397%22%20x1%3D%2213.0804%22%20y1%3D%2222.6224%22%20x2%3D%2237.028%22%20y2%3D%2237.847%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%23D4D4D8%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2371717A%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="examples icon" class="examples-image-light"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2253%22%20height%3D%2258%22%20viewBox%3D%220%200%2053%2058%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M3.43319%2014.5869L3.43322%2014.587L3.44269%2014.5812L22.9844%202.59084C24.4246%201.73116%2026.2124%201.69742%2027.6729%202.49791L27.6729%202.49792L27.6784%202.50094L48.6303%2013.8121C48.6313%2013.8126%2048.6322%2013.8131%2048.6331%2013.8137C50.0812%2014.6086%2050.9896%2016.1043%2051.026%2017.7437L51.1517%2039.8672L51.1517%2039.8746L51.1519%2039.8821C51.1856%2041.5203%2050.346%2043.0611%2048.9325%2043.9357L29.0918%2056.2117C27.6424%2057.1085%2025.8227%2057.1572%2024.3387%2056.3439L3.85107%2045.1148C2.26984%2044.2481%201.14232%2042.646%201.15293%2041.0494V41.0427L1.153%2018.552C1.15301%2018.5509%201.15302%2018.5499%201.15302%2018.5488C1.16485%2016.9324%202.02611%2015.4289%203.43319%2014.5869Z%22%20fill%3D%22%2318181B%22%20stroke%3D%22url(%23paint0_linear_2595_7182)%22%20stroke-width%3D%222%22%2F%3E%0A%3Cpath%20d%3D%22M37.1528%2017.9209H15.1528C14.6224%2017.9209%2014.1137%2018.1316%2013.7386%2018.5067C13.3635%2018.8818%2013.1528%2019.3905%2013.1528%2019.9209V37.9209C13.1528%2038.4513%2013.3635%2038.96%2013.7386%2039.3351C14.1137%2039.7102%2014.6224%2039.9209%2015.1528%2039.9209H37.1528C37.6833%2039.9209%2038.192%2039.7102%2038.567%2039.3351C38.9421%2038.96%2039.1528%2038.4513%2039.1528%2037.9209V19.9209C39.1528%2019.3905%2038.9421%2018.8818%2038.567%2018.5067C38.192%2018.1316%2037.6833%2017.9209%2037.1528%2017.9209ZM15.1528%2019.9209H37.1528V24.9209H15.1528V19.9209ZM15.1528%2026.9209H22.1528V37.9209H15.1528V26.9209ZM37.1528%2037.9209H24.1528V26.9209H37.1528V37.9209Z%22%20fill%3D%22url(%23paint1_linear_2595_7182)%22%2F%3E%0A%3Cdefs%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2595_7182%22%20x1%3D%220.662695%22%20y1%3D%2218.4025%22%20x2%3D%2251.7209%22%20y2%3D%2244.2212%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2371717A%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2595_7182%22%20x1%3D%2213.0804%22%20y1%3D%2222.6224%22%20x2%3D%2237.028%22%20y2%3D%2237.847%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2371717A%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="examples icon" class="examples-image-dark"> <div class="dark:text-white flex flex-col space-y text-black"><h3 class="font-semibold text-xl">Examples</h3><p class="dark:text-gray-300 text-gray-700">Explore different way of using Nuxt features and get inspired with our list of examples.</p></div> </a></div></div></div><footer class="bg-white border-gray-200 border-t dark:bg-black dark:border-gray-900 flex h-[70px] items-center relative w-full"><div class="-top-3 absolute flex inset-x-0 items-center justify-center"><a href="https://nuxt.com" target="_blank" aria-label="Nuxt"> <svg xmlns="http://www.w3.org/2000/svg" width="70" height="20" fill="none"><ellipse cx="34.653" cy="10.421" fill="#fff" class="dark:hidden" rx="34.5" ry="9.5"/><ellipse cx="34.653" cy="10.421" fill="#000" class="dark:block hidden" rx="34.5" ry="9.5"/><path fill="#00DC82" d="M36.06 15.92h6.566a1.18 1.18 0 0 0 1.028-.6 1.21 1.21 0 0 0 0-1.2l-4.41-7.713a1.19 1.19 0 0 0-1.028-.6 1.18 1.18 0 0 0-1.028.6L36.06 8.38l-2.204-3.86a1.2 1.2 0 0 0-1.029-.6 1.18 1.18 0 0 0-1.028.6l-5.487 9.6a1.21 1.21 0 0 0 .434 1.64c.181.106.386.16.595.16h4.12c1.633 0 2.837-.724 3.666-2.137l2.011-3.52 1.078-1.883 3.234 5.658h-4.312zm-4.666-1.884-2.876-.001 4.311-7.542 2.151 3.77-1.44 2.521c-.55.917-1.175 1.252-2.146 1.252"/></svg> </a></div><div class="lg:px-8 mx-auto px-4 sm:px-6 w-full"><div class="flex flex-col gap-3 items-center sm:flex-row sm:justify-between"><div class="flex flex-col-reverse gap-3 items-center sm:flex-row"><span class="dark:text-gray-300 text-gray-700 text-sm">¬© 2016-{{ new Date().getFullYear() }} Nuxt - MIT License</span></div><ul class="flex gap-3 items-center justify-end"><li><a href="https://chat.nuxt.dev" target="_blank" class="dark:hover:text-white dark:text-gray-300 focus-visible:ring-2 hover:text-black text-gray-700"> <span class="sr-only">Nuxt Discord Server</span> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="12" fill="none"><path fill="currentColor" d="M13.37 1.073a.04.04 0 0 0-.019-.018 12.2 12.2 0 0 0-3.053-.966.05.05 0 0 0-.028.003.05.05 0 0 0-.021.02 9 9 0 0 0-.38.797 11.2 11.2 0 0 0-3.43 0 8 8 0 0 0-.386-.797.047.047 0 0 0-.05-.024c-1.053.186-2.08.511-3.052.967a.04.04 0 0 0-.02.018C.986 4.037.453 6.929.715 9.785a.05.05 0 0 0 .02.035 12.4 12.4 0 0 0 3.745 1.932.05.05 0 0 0 .053-.017q.434-.604.766-1.272a.05.05 0 0 0-.026-.067 8 8 0 0 1-1.17-.57.05.05 0 0 1-.024-.039.05.05 0 0 1 .019-.042q.119-.09.232-.186a.05.05 0 0 1 .049-.006c2.455 1.143 5.112 1.143 7.538 0a.05.05 0 0 1 .05.006q.112.095.232.186a.05.05 0 0 1-.004.081 7.6 7.6 0 0 1-1.17.569.1.1 0 0 0-.018.011.05.05 0 0 0-.008.057q.337.664.765 1.271a.05.05 0 0 0 .053.018A12.3 12.3 0 0 0 15.57 9.82a.05.05 0 0 0 .02-.035c.312-3.301-.525-6.17-2.219-8.712M5.666 8.046c-.739 0-1.348-.693-1.348-1.543S4.914 4.96 5.665 4.96c.757 0 1.36.699 1.348 1.543 0 .85-.597 1.543-1.348 1.543m4.985 0c-.74 0-1.348-.693-1.348-1.543S9.899 4.96 10.65 4.96c.756 0 1.36.699 1.348 1.543 0 .85-.592 1.543-1.348 1.543"/></svg> </a></li><li><a href="https://twitter.nuxt.dev" target="_blank" class="dark:hover:text-white dark:text-gray-300 focus-visible:ring-2 hover:text-black text-gray-700"> <span class="sr-only">Nuxt Twitter</span> <svg xmlns="http://www.w3.org/2000/svg" width="18" height="14" fill="none"><path fill="currentColor" d="M17.486 1.754a7 7 0 0 1-1.967.534A3.44 3.44 0 0 0 17.028.396c-.672.4-1.408.682-2.175.833a3.417 3.417 0 0 0-5.834 3.117A9.7 9.7 0 0 1 1.978.771c-.301.525-.46 1.12-.459 1.725a3.41 3.41 0 0 0 1.517 2.842 3.4 3.4 0 0 1-1.55-.425v.041a3.42 3.42 0 0 0 2.75 3.334c-.297.09-.606.138-.917.141a4 4 0 0 1-.641-.058 3.425 3.425 0 0 0 3.191 2.367 6.85 6.85 0 0 1-5.05 1.416 9.64 9.64 0 0 0 5.242 1.542 9.66 9.66 0 0 0 9.758-9.733V3.52a7 7 0 0 0 1.667-1.767"/></svg> </a></li><li><a href="https://github.nuxt.dev" target="_blank" class="dark:hover:text-white dark:text-gray-300 focus-visible:ring-2 hover:text-black text-gray-700"> <span class="sr-only">Nuxt GitHub Repository</span> <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="none"><path fill="currentColor" d="M9.153.793a8.334 8.334 0 0 0-2.636 16.24c.417.072.573-.178.573-.396 0-.198-.01-.854-.01-1.552-2.094.385-2.636-.51-2.802-.98a3 3 0 0 0-.854-1.177c-.292-.156-.709-.541-.01-.552a1.67 1.67 0 0 1 1.28.854 1.78 1.78 0 0 0 2.427.688c.036-.424.225-.82.532-1.115-1.854-.208-3.792-.927-3.792-4.114a3.24 3.24 0 0 1 .854-2.24A3 3 0 0 1 4.8 4.241s.697-.219 2.291.854a7.86 7.86 0 0 1 4.167 0c1.594-1.083 2.292-.854 2.292-.854.308.698.338 1.488.083 2.208.562.61.868 1.411.854 2.24 0 3.198-1.948 3.906-3.802 4.114a1.97 1.97 0 0 1 .562 1.542c0 1.115-.01 2.01-.01 2.292 0 .218.156.479.573.396A8.338 8.338 0 0 0 9.153.793"/></svg> </a></li></ul></div></div></footer></div>
+<div class="antialiased bg-white dark:bg-black dark:text-white flex flex-col items-center justify-center min-h-screen place-content-center sm:text-base text-black text-sm"><div class="flex flex-1 flex-col gap-y-16 py-14"><div class="flex flex-col gap-y-4 items-center justify-center"><a href="https://nuxt.com" target="_blank" aria-label="Nuxt"> <svg xmlns="http://www.w3.org/2000/svg" width="61" height="42" fill="none" viewBox="0 0 61 42"><path fill="#00dc82" d="M33.987 41.221h22.425a4.054 4.054 0 0 0 4.057-4.06 4.06 4.06 0 0 0-.545-2.03l-15.06-26.1a4.057 4.057 0 0 0-5.541-1.486 4.06 4.06 0 0 0-1.485 1.486l-3.851 6.678-7.529-13.058a4.06 4.06 0 0 0-7.028 0L.69 35.13a4.06 4.06 0 0 0 3.511 6.09h14.077c5.577 0 9.69-2.451 12.52-7.233L37.67 22.08l3.68-6.372 11.046 19.14H37.67zm-15.939-6.378-9.823-.003L22.95 9.322l7.348 12.76-4.92 8.527c-1.88 3.103-4.014 4.234-7.33 4.234"/></svg> </a><h1 class="dark:text-white font-semibold sm:text-5xl text-4xl text-black text-center">Welcome to Nuxt!</h1></div><div class="gap-6 grid grid-cols-2 lg:grid-cols-10 max-w-[960px] px-4"><div class="col-span-2 get-started-gradient-border lg:col-span-10 relative"><div class="absolute bg-gradient-to-r duration-300 from-green-400 get-started-gradient-left inset-y-0 left-0 rounded-xl to-transparent transition-opacity w-[20%] z-1"></div><div class="absolute bg-gradient-to-l duration-300 from-blue-400 get-started-gradient-right inset-y-0 right-0 rounded-xl to-transparent transition-opacity w-[20%] z-1"></div><div class="-top-[58px] absolute flex inset-x-0 justify-center w-full"><img alt src="data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22105%22%20height%3D%22116%22%20fill%3D%22none%22%3E%3Cg%20filter%3D%22url(%23a)%22%20shape-rendering%3D%22geometricPrecision%22%3E%3Cpath%20fill%3D%22%2318181B%22%20d%3D%22M17.203%2033.223%2046.9%2014.286a8.416%208.416%200%200%201%208.64-.18L87.38%2031.97c2.68%201.527%204.365%204.409%204.428%207.571l.191%2034.944c.063%203.151-1.491%206.104-4.091%207.776l-30.143%2019.383a8.417%208.417%200%200%201-8.75.251l-31.126-17.73C15.135%2082.595%2012.98%2079.6%2013%2076.35V40.828c.02-3.111%201.614-5.994%204.203-7.605Z%22%2F%3E%3Cpath%20stroke%3D%22url(%23b)%22%20stroke-width%3D%222%22%20d%3D%22M46.9%2014.286%2017.202%2033.223c-2.59%201.61-4.183%204.494-4.203%207.605V76.35m33.9-62.064a8.416%208.416%200%200%201%208.64-.18m-8.64.18a8.435%208.435%200%200%201%208.64-.18M13%2076.35c-.02%203.25%202.135%206.246%204.888%207.814M13%2076.35c-.02%203.233%202.136%206.247%204.888%207.814m0%200%2031.126%2017.731m0%200a8.417%208.417%200%200%200%208.75-.251m-8.75.251a8.438%208.438%200%200%200%208.75-.251m0%200%2030.143-19.383m0%200c2.598-1.67%204.154-4.627%204.091-7.776m-4.091%207.776c2.6-1.672%204.154-4.625%204.091-7.776m0%200-.19-34.944m0%200c-.064-3.162-1.75-6.044-4.43-7.571m4.43%207.571c-.063-3.147-1.75-6.045-4.43-7.571m0%200L55.54%2014.105%22%2F%3E%3C%2Fg%3E%3Cpath%20fill%3D%22url(%23c)%22%20d%3D%22M48.669%2067.696c-.886%202.69-3.02%204.659-6.153%205.709-1.41.465-2.88.72-4.364.755a1.313%201.313%200%200%201-1.312-1.313c.035-1.484.29-2.954.754-4.364%201.05-3.133%203.02-5.266%205.71-6.152a1.312%201.312%200%201%201%20.836%202.477c-3.232%201.083-4.232%204.577-4.544%206.595%202.018-.311%205.512-1.312%206.595-4.544a1.313%201.313%200%200%201%202.477.837Zm16.39-12.486-1.46%201.477v10.057a2.657%202.657%200%200%201-.772%201.854l-5.316%205.3a2.559%202.559%200%200%201-1.853.77%202.413%202.413%200%200%201-.755-.115%202.624%202.624%200%200%201-1.821-2.001l-1.296-6.48-6.858-6.858-6.48-1.297a2.625%202.625%200%200%201-2.002-1.82%202.609%202.609%200%200%201%20.656-2.61l5.3-5.315a2.658%202.658%200%200%201%201.853-.771h10.057l1.477-1.46c4.692-4.692%209.499-4.561%2011.353-4.282a2.576%202.576%200%200%201%202.198%202.198c.28%201.854.41%206.661-4.282%2011.353Zm-26.103.132%206.185%201.23%206.546-6.546h-7.432l-5.299%205.316Zm8.482%202.657L53%2063.561l10.205-10.205c1.28-1.28%204.2-4.724%203.543-9.105-4.38-.656-7.826%202.264-9.105%203.544L47.438%2057.999Zm13.535%201.313-6.546%206.546%201.23%206.185%205.316-5.299v-7.432Z%22%20shape-rendering%3D%22geometricPrecision%22%2F%3E%3Cdefs%3E%3ClinearGradient%20id%3D%22b%22%20x1%3D%2257.994%22%20x2%3D%2292%22%20y1%3D%2258%22%20y2%3D%2258%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%3Cstop%20stop-color%3D%22%2300DC82%22%2F%3E%3Cstop%20offset%3D%22.5%22%20stop-color%3D%22%231DE0B1%22%2F%3E%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2336E4DA%22%2F%3E%3C%2FlinearGradient%3E%3ClinearGradient%20id%3D%22c%22%20x1%3D%2255.197%22%20x2%3D%2269.453%22%20y1%3D%2258.107%22%20y2%3D%2258.107%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%3Cstop%20stop-color%3D%22%2300DC82%22%2F%3E%3Cstop%20offset%3D%22.5%22%20stop-color%3D%22%231DE0B1%22%2F%3E%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2336E4DA%22%2F%3E%3C%2FlinearGradient%3E%3Cfilter%20id%3D%22a%22%20width%3D%22104.897%22%20height%3D%22115.897%22%20x%3D%22.052%22%20y%3D%22.052%22%20color-interpolation-filters%3D%22sRGB%22%20filterUnits%3D%22userSpaceOnUse%22%3E%3CfeFlood%20flood-opacity%3D%220%22%20result%3D%22BackgroundImageFix%22%2F%3E%3CfeColorMatrix%20in%3D%22SourceAlpha%22%20result%3D%22hardAlpha%22%20values%3D%220%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%20127%200%22%2F%3E%3CfeOffset%2F%3E%3CfeGaussianBlur%20stdDeviation%3D%225.974%22%2F%3E%3CfeComposite%20in2%3D%22hardAlpha%22%20operator%3D%22out%22%2F%3E%3CfeColorMatrix%20values%3D%220%200%200%200%201%200%200%200%200%201%200%200%200%200%201%200%200%200%200.07%200%22%2F%3E%3CfeBlend%20in2%3D%22BackgroundImageFix%22%20result%3D%22effect1_dropShadow_2724_4091%22%2F%3E%3CfeBlend%20in%3D%22SourceGraphic%22%20in2%3D%22effect1_dropShadow_2724_4091%22%20result%3D%22shape%22%2F%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3C%2Fsvg%3E%0A" class="dark:block hidden"> <img alt src="data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22105%22%20height%3D%22116%22%20fill%3D%22none%22%3E%3Cg%20filter%3D%22url(%23a)%22%3E%3Cpath%20fill%3D%22%23fff%22%20d%3D%22M17.203%2033.223%2046.9%2014.286a8.416%208.416%200%200%201%208.64-.18L87.38%2031.97c2.68%201.527%204.365%204.409%204.428%207.571l.191%2034.944c.063%203.151-1.491%206.104-4.091%207.776l-30.143%2019.383a8.417%208.417%200%200%201-8.75.251l-31.126-17.73C15.135%2082.595%2012.98%2079.6%2013%2076.35V40.828c.02-3.111%201.614-5.994%204.203-7.605Z%22%2F%3E%3Cpath%20stroke%3D%22url(%23b)%22%20stroke-width%3D%222%22%20d%3D%22M46.9%2014.286%2017.202%2033.223c-2.59%201.61-4.183%204.494-4.203%207.605V76.35m33.9-62.064a8.416%208.416%200%200%201%208.64-.18m-8.64.18a8.435%208.435%200%200%201%208.64-.18M13%2076.35c-.02%203.25%202.135%206.246%204.888%207.814M13%2076.35c-.02%203.233%202.136%206.247%204.888%207.814m0%200%2031.126%2017.731m0%200a8.417%208.417%200%200%200%208.75-.251m-8.75.251a8.438%208.438%200%200%200%208.75-.251m0%200%2030.143-19.383m0%200c2.598-1.67%204.154-4.627%204.091-7.776m-4.091%207.776c2.6-1.672%204.154-4.625%204.091-7.776m0%200-.19-34.944m0%200c-.064-3.162-1.75-6.044-4.43-7.571m4.43%207.571c-.063-3.147-1.75-6.045-4.43-7.571m0%200L55.54%2014.105%22%2F%3E%3C%2Fg%3E%3Cpath%20fill%3D%22%23fff%22%20d%3D%22M32%2037h42v42H32z%22%2F%3E%3Cpath%20fill%3D%22url(%23c)%22%20d%3D%22M48.669%2067.697c-.886%202.69-3.02%204.659-6.153%205.709-1.41.465-2.88.72-4.364.755a1.313%201.313%200%200%201-1.312-1.313c.035-1.484.29-2.954.754-4.364%201.05-3.134%203.02-5.266%205.71-6.152a1.314%201.314%200%201%201%20.836%202.477c-3.232%201.083-4.232%204.577-4.544%206.595%202.018-.311%205.512-1.312%206.595-4.544a1.313%201.313%200%200%201%202.477.837Zm16.39-12.486-1.46%201.477v10.057a2.657%202.657%200%200%201-.772%201.854l-5.316%205.3a2.559%202.559%200%200%201-1.853.77%202.413%202.413%200%200%201-.755-.115%202.626%202.626%200%200%201-1.821-2.001l-1.296-6.48-6.858-6.858-6.48-1.297a2.625%202.625%200%200%201-2.002-1.82%202.609%202.609%200%200%201%20.656-2.61l5.3-5.315a2.658%202.658%200%200%201%201.853-.771h10.057l1.477-1.46c4.692-4.692%209.499-4.561%2011.353-4.282a2.576%202.576%200%200%201%202.198%202.198c.28%201.854.41%206.661-4.282%2011.353Zm-26.103.132%206.185%201.23%206.546-6.546h-7.432l-5.299%205.316ZM47.438%2058%2053%2063.562l10.205-10.204c1.28-1.28%204.2-4.725%203.543-9.106-4.38-.656-7.826%202.264-9.105%203.544L47.438%2058Zm13.535%201.313-6.546%206.546%201.23%206.185%205.316-5.299v-7.432Z%22%2F%3E%3Cdefs%3E%3ClinearGradient%20id%3D%22b%22%20x1%3D%2257.994%22%20x2%3D%2292%22%20y1%3D%2258%22%20y2%3D%2258%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%3Cstop%20stop-color%3D%22%2300DC82%22%2F%3E%3Cstop%20offset%3D%22.5%22%20stop-color%3D%22%231DE0B1%22%2F%3E%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2336E4DA%22%2F%3E%3C%2FlinearGradient%3E%3ClinearGradient%20id%3D%22c%22%20x1%3D%2255.197%22%20x2%3D%2269.453%22%20y1%3D%2258.108%22%20y2%3D%2258.108%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%3Cstop%20stop-color%3D%22%2300DC82%22%2F%3E%3Cstop%20offset%3D%22.5%22%20stop-color%3D%22%231DE0B1%22%2F%3E%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2336E4DA%22%2F%3E%3C%2FlinearGradient%3E%3Cfilter%20id%3D%22a%22%20width%3D%22104.897%22%20height%3D%22115.897%22%20x%3D%22.052%22%20y%3D%22.052%22%20color-interpolation-filters%3D%22sRGB%22%20filterUnits%3D%22userSpaceOnUse%22%3E%3CfeFlood%20flood-opacity%3D%220%22%20result%3D%22BackgroundImageFix%22%2F%3E%3CfeColorMatrix%20in%3D%22SourceAlpha%22%20result%3D%22hardAlpha%22%20values%3D%220%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%20127%200%22%2F%3E%3CfeOffset%2F%3E%3CfeGaussianBlur%20stdDeviation%3D%225.974%22%2F%3E%3CfeComposite%20in2%3D%22hardAlpha%22%20operator%3D%22out%22%2F%3E%3CfeColorMatrix%20values%3D%220%200%200%200%201%200%200%200%200%201%200%200%200%200%201%200%200%200%200.07%200%22%2F%3E%3CfeBlend%20in2%3D%22BackgroundImageFix%22%20result%3D%22effect1_dropShadow_2726_4054%22%2F%3E%3CfeBlend%20in%3D%22SourceGraphic%22%20in2%3D%22effect1_dropShadow_2726_4054%22%20result%3D%22shape%22%2F%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3C%2Fsvg%3E%0A" class="dark:hidden"></div><div class="flex flex-col gap-y-4 items-center pb-6 pt-[58px] px-4 rounded-xl sm:px-28 z-10"><h2 class="dark:text-white font-semibold text-2xl text-black">Get started</h2><p class="mb-2 text-center">Remove this welcome page by replacing <a class="bg-gray-100 dark:bg-white/10 font-bold font-mono p-1 rounded">&lt;NuxtWelcome /&gt;</a> in <a href="https://nuxt.com/docs/guide/directory-structure/app" target="_blank" rel="noopener" class="bg-gray-100 dark:bg-white/10 font-bold font-mono p-1 rounded">app.vue</a> with your own code, or creating your own <span class="bg-gray-100 dark:bg-white/10 font-bold font-mono p-1 rounded">app.vue</span> if it doesn't exist.</p></div></div><div class="border border-gray-200 col-span-2 dark:border-transparent dark:text-white hover:border-transparent items-center justify-center lg:col-span-6 lg:min-h-min md:min-h-[180px] modules-container relative rounded-xl sm:col-span-1 sm:min-h-[220px] text-black"><div class="gradient-border gradient-border-modules gradient-border-rect"></div><div class="absolute bg-gradient-to-l duration-300 from-yellow-400 inset-y-0 modules-gradient-right right-0 rounded-xl to-transparent transition-opacity w-[20%] z-1"></div><a href="https://nuxt.com/modules" target="_blank" class="bg-white dark:bg-gray-900 dark:border-none flex gap-x-4 items-center justify-center lg:min-h-min md:min-h-[180px] px-5 py-6 rounded-xl sm:min-h-[220px]"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2253%22%20height%3D%2258%22%20viewBox%3D%220%200%2053%2058%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cg%20clip-path%3D%22url(%23clip0_2613_3853)%22%3E%0A%3Cpath%20d%3D%22M51.1519%2039.8821C51.154%2039.9844%2051.1527%2040.0863%2051.148%2040.1877C51.0782%2041.7091%2050.2566%2043.1165%2048.9325%2043.9357L29.0918%2056.2117C27.6504%2057.1035%2025.8212%2057.1564%2024.3387%2056.3439L3.85107%2045.1148C2.27157%2044.2491%201.14238%2042.6366%201.15291%2041.0494L1.15293%2041.0427L1.153%2018.552C1.15301%2018.5509%201.15302%2018.5499%201.15302%2018.5488C1.16485%2016.9324%202.02611%2015.4289%203.43319%2014.5869L3.43322%2014.587L3.44269%2014.5812L22.9844%202.59084C24.4169%201.73583%2026.2139%201.69824%2027.6729%202.49791L27.6729%202.49792L27.6784%202.50094L48.6303%2013.8121C48.6313%2013.8126%2048.6322%2013.8131%2048.6331%2013.8136C50.0797%2014.6078%2050.9898%2016.1132%2051.026%2017.7438L51.1517%2039.8672L51.1517%2039.8746L51.1519%2039.8821Z%22%20fill%3D%22white%22%20stroke%3D%22url(%23paint0_linear_2613_3853)%22%20stroke-width%3D%222%22%2F%3E%0A%3Cpath%20d%3D%22M33.8193%2042.2552H17.8193C16.7585%2042.2552%2015.7411%2041.8337%2014.9909%2041.0836C14.2408%2040.3334%2013.8193%2039.316%2013.8193%2038.2552V24.9218C13.8193%2023.861%2014.2408%2022.8435%2014.9909%2022.0934C15.7411%2021.3433%2016.7585%2020.9218%2017.8193%2020.9218H19.1527C19.1751%2019.792%2019.5558%2018.6985%2020.2399%2017.7991C20.924%2016.8996%2021.8761%2016.2407%2022.9589%2015.9173C24.0416%2015.594%2025.1992%2015.6229%2026.2644%2016C27.3297%2016.377%2028.2477%2017.0827%2028.886%2018.0152C29.4839%2018.8674%2029.8094%2019.8808%2029.8193%2020.9218H33.8193C34.173%2020.9218%2034.5121%2021.0623%2034.7621%2021.3124C35.0122%2021.5624%2035.1527%2021.9015%2035.1527%2022.2552V26.2552C36.2825%2026.2776%2037.376%2026.6583%2038.2754%2027.3424C39.1749%2028.0265%2039.8338%2028.9786%2040.1572%2030.0613C40.4805%2031.1441%2040.4516%2032.3016%2040.0745%2033.3669C39.6975%2034.4322%2038.9918%2035.3502%2038.0593%2035.9885C37.2071%2036.5864%2036.1937%2036.9118%2035.1527%2036.9218V36.9218V40.9218C35.1527%2041.2755%2035.0122%2041.6146%2034.7621%2041.8646C34.5121%2042.1147%2034.173%2042.2552%2033.8193%2042.2552ZM17.8193%2023.5885C17.4657%2023.5885%2017.1266%2023.729%2016.8765%2023.979C16.6265%2024.2291%2016.486%2024.5682%2016.486%2024.9218V38.2552C16.486%2038.6088%2016.6265%2038.9479%2016.8765%2039.198C17.1266%2039.448%2017.4657%2039.5885%2017.8193%2039.5885H32.486V35.3485C32.4849%2035.1347%2032.5351%2034.9238%2032.6326%2034.7335C32.7301%2034.5432%2032.8718%2034.3792%2033.046%2034.2552C33.2196%2034.1313%2033.4204%2034.051%2033.6316%2034.0208C33.8427%2033.9907%2034.058%2034.0116%2034.2593%2034.0818C34.6393%2034.2368%2035.0532%2034.2901%2035.46%2034.2363C35.8669%2034.1825%2036.2527%2034.0236%2036.5793%2033.7752C36.9045%2033.5769%2037.1834%2033.3113%2037.3973%2032.9962C37.6111%2032.6811%2037.7551%2032.3239%2037.8193%2031.9485C37.8708%2031.5699%2037.8402%2031.1847%2037.7298%2030.8189C37.6194%2030.4532%2037.4317%2030.1154%2037.1793%2029.8285C36.8381%2029.414%2036.3734%2029.1193%2035.8529%2028.9874C35.3325%2028.8555%2034.7835%2028.8932%2034.286%2029.0952C34.0846%2029.1654%2033.8694%2029.1863%2033.6582%2029.1562C33.4471%2029.126%2033.2463%2029.0457%2033.0727%2028.9218C32.8985%2028.7978%2032.7567%2028.6338%2032.6593%2028.4435C32.5618%2028.2532%2032.5115%2028.0423%2032.5127%2027.8285V23.5885H28.246C28.0269%2023.6009%2027.8081%2023.559%2027.609%2023.4666C27.4099%2023.3742%2027.2368%2023.234%2027.1049%2023.0586C26.973%2022.8832%2026.8864%2022.6779%2026.8529%2022.461C26.8194%2022.2441%2026.8399%2022.0222%2026.9127%2021.8152C27.0677%2021.4352%2027.1209%2021.0213%2027.0671%2020.6145C27.0134%2020.2076%2026.8544%2019.8218%2026.606%2019.4952C26.4091%2019.1607%2026.1395%2018.8749%2025.8172%2018.6588C25.4948%2018.4427%2025.128%2018.3019%2024.7438%2018.2468C24.3597%2018.1917%2023.9681%2018.2238%2023.598%2018.3407C23.2279%2018.4575%2022.8889%2018.6561%2022.606%2018.9218C22.3433%2019.1824%2022.1377%2019.4948%2022.0023%2019.8391C21.8668%2020.1834%2021.8045%2020.5521%2021.8193%2020.9218C21.8224%2021.2277%2021.8812%2021.5304%2021.9927%2021.8152C22.0632%2022.0168%2022.0842%2022.2324%2022.054%2022.4438C22.0237%2022.6553%2021.9432%2022.8564%2021.819%2023.0302C21.6949%2023.204%2021.5308%2023.3454%2021.3406%2023.4426C21.1504%2023.5397%2020.9396%2023.5898%2020.726%2023.5885H17.8193Z%22%20fill%3D%22url(%23paint1_linear_2613_3853)%22%2F%3E%0A%3C%2Fg%3E%0A%3Cdefs%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2613_3853%22%20x1%3D%220.662695%22%20y1%3D%2218.4025%22%20x2%3D%2251.7209%22%20y2%3D%2244.2212%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%23F7D14C%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23A38108%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2613_3853%22%20x1%3D%2213.7453%22%20y1%3D%2221.3705%22%20x2%3D%2240.3876%22%20y2%3D%2235.7024%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%23F7D14C%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23A38108%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3CclipPath%20id%3D%22clip0_2613_3853%22%3E%0A%3Crect%20width%3D%2252%22%20height%3D%2257%22%20fill%3D%22white%22%20transform%3D%22translate(0.152832%200.920898)%22%2F%3E%0A%3C%2FclipPath%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="modules icon" class="modules-image-color-light"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2253%22%20height%3D%2258%22%20viewBox%3D%220%200%2053%2058%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M3.43319%2014.5869L3.43322%2014.587L3.44269%2014.5812L22.9844%202.59084C24.4246%201.73116%2026.2124%201.69742%2027.6729%202.49791L27.6729%202.49792L27.6784%202.50094L48.6303%2013.8121C48.6313%2013.8126%2048.6322%2013.8131%2048.6331%2013.8137C50.0812%2014.6086%2050.9896%2016.1043%2051.026%2017.7437L51.1517%2039.8672L51.1517%2039.8746L51.1519%2039.8821C51.1856%2041.5204%2050.346%2043.0611%2048.9325%2043.9357L29.0918%2056.2117C27.6424%2057.1085%2025.8227%2057.1572%2024.3387%2056.3439L3.85107%2045.1148C2.26984%2044.2481%201.14232%2042.646%201.15293%2041.0494V41.0427L1.153%2018.552C1.15301%2018.5509%201.15302%2018.5499%201.15302%2018.5488C1.16485%2016.9324%202.02611%2015.4289%203.43319%2014.5869Z%22%20fill%3D%22%2318181B%22%20stroke%3D%22url(%23paint0_linear_2595_7337)%22%20stroke-width%3D%222%22%2F%3E%0A%3Cpath%20d%3D%22M33.8193%2042.2542H17.8193C16.7585%2042.2542%2015.7411%2041.8328%2014.9909%2041.0826C14.2408%2040.3325%2013.8193%2039.3151%2013.8193%2038.2542V24.9209C13.8193%2023.86%2014.2408%2022.8426%2014.9909%2022.0924C15.7411%2021.3423%2016.7585%2020.9209%2017.8193%2020.9209H19.1527C19.1751%2019.791%2019.5558%2018.6975%2020.2399%2017.7981C20.924%2016.8986%2021.8761%2016.2397%2022.9589%2015.9164C24.0416%2015.593%2025.1992%2015.6219%2026.2644%2015.999C27.3297%2016.376%2028.2477%2017.0817%2028.886%2018.0142C29.4839%2018.8664%2029.8094%2019.8799%2029.8193%2020.9209H33.8193C34.173%2020.9209%2034.5121%2021.0613%2034.7621%2021.3114C35.0122%2021.5614%2035.1527%2021.9006%2035.1527%2022.2542V26.2542C36.2825%2026.2766%2037.376%2026.6573%2038.2754%2027.3414C39.1749%2028.0255%2039.8338%2028.9776%2040.1572%2030.0604C40.4805%2031.1432%2040.4516%2032.3007%2040.0745%2033.366C39.6975%2034.4312%2038.9918%2035.3492%2038.0593%2035.9875C37.2071%2036.5854%2036.1937%2036.9109%2035.1527%2036.9209V40.9209C35.1527%2041.2745%2035.0122%2041.6136%2034.7621%2041.8637C34.5121%2042.1137%2034.173%2042.2542%2033.8193%2042.2542ZM17.8193%2023.5875C17.4657%2023.5875%2017.1266%2023.728%2016.8765%2023.978C16.6265%2024.2281%2016.486%2024.5672%2016.486%2024.9209V38.2542C16.486%2038.6078%2016.6265%2038.9469%2016.8765%2039.197C17.1266%2039.447%2017.4657%2039.5875%2017.8193%2039.5875H32.486V35.3475C32.4849%2035.1337%2032.5351%2034.9228%2032.6326%2034.7325C32.7301%2034.5422%2032.8718%2034.3782%2033.046%2034.2542C33.2196%2034.1304%2033.4205%2034.05%2033.6316%2034.0198C33.8427%2033.9897%2034.058%2034.0106%2034.2593%2034.0809C34.6393%2034.2359%2035.0532%2034.2891%2035.46%2034.2353C35.8669%2034.1816%2036.2527%2034.0226%2036.5793%2033.7742C36.9045%2033.5759%2037.1834%2033.3103%2037.3973%2032.9952C37.6111%2032.6801%2037.7551%2032.3229%2037.8193%2031.9475C37.8708%2031.5689%2037.8402%2031.1837%2037.7298%2030.8179C37.6194%2030.4522%2037.4317%2030.1144%2037.1793%2029.8275C36.8381%2029.413%2036.3734%2029.1183%2035.8529%2028.9864C35.3325%2028.8545%2034.7835%2028.8923%2034.286%2029.0942C34.0846%2029.1644%2033.8694%2029.1854%2033.6582%2029.1552C33.4471%2029.125%2033.2463%2029.0447%2033.0727%2028.9209C32.8985%2028.7969%2032.7567%2028.6328%2032.6593%2028.4425C32.5618%2028.2522%2032.5115%2028.0413%2032.5127%2027.8275V23.5875H28.246C28.0269%2023.5999%2027.8081%2023.5581%2027.609%2023.4656C27.4099%2023.3732%2027.2368%2023.233%2027.1049%2023.0576C26.973%2022.8822%2026.8864%2022.6769%2026.8529%2022.46C26.8194%2022.2431%2026.8399%2022.0213%2026.9127%2021.8142C27.0677%2021.4342%2027.1209%2021.0204%2027.0671%2020.6135C27.0134%2020.2066%2026.8544%2019.8208%2026.606%2019.4942C26.4091%2019.1597%2026.1395%2018.8739%2025.8172%2018.6578C25.4948%2018.4417%2025.128%2018.3009%2024.7438%2018.2458C24.3597%2018.1908%2023.9681%2018.2228%2023.598%2018.3397C23.2279%2018.4565%2022.8889%2018.6552%2022.606%2018.9209C22.3433%2019.1814%2022.1377%2019.4938%2022.0023%2019.8381C21.8668%2020.1824%2021.8045%2020.5512%2021.8193%2020.9209C21.8224%2021.2267%2021.8812%2021.5294%2021.9927%2021.8142C22.0632%2022.0158%2022.0842%2022.2314%2022.054%2022.4429C22.0237%2022.6543%2021.9432%2022.8554%2021.819%2023.0292C21.6949%2023.203%2021.5308%2023.3444%2021.3406%2023.4416C21.1504%2023.5388%2020.9396%2023.5888%2020.726%2023.5875H17.8193Z%22%20fill%3D%22url(%23paint1_linear_2595_7337)%22%2F%3E%0A%3Cdefs%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2595_7337%22%20x1%3D%220.662695%22%20y1%3D%2218.4025%22%20x2%3D%2251.7209%22%20y2%3D%2244.2212%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%23F7D14C%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23A38108%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2595_7337%22%20x1%3D%2213.7453%22%20y1%3D%2221.3695%22%20x2%3D%2240.3876%22%20y2%3D%2235.7015%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%23F7D14C%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23A38108%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="modules icon" class="modules-image-color-dark"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2253%22%20height%3D%2258%22%20viewBox%3D%220%200%2053%2058%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cg%20clip-path%3D%22url(%23clip0_2691_4389)%22%3E%0A%3Cpath%20d%3D%22M51.1519%2039.8821C51.154%2039.9844%2051.1527%2040.0863%2051.148%2040.1877C51.0782%2041.7091%2050.2566%2043.1165%2048.9325%2043.9357L29.0918%2056.2117C27.6504%2057.1035%2025.8212%2057.1564%2024.3387%2056.3439L3.85107%2045.1148C2.27157%2044.2491%201.14238%2042.6366%201.15291%2041.0494L1.15293%2041.0427L1.153%2018.552C1.15301%2018.5509%201.15302%2018.5499%201.15302%2018.5488C1.16485%2016.9324%202.02611%2015.4289%203.43319%2014.5869L3.43322%2014.587L3.44269%2014.5812L22.9844%202.59084C24.4169%201.73583%2026.2139%201.69824%2027.6729%202.49791L27.6729%202.49792L27.6784%202.50094L48.6303%2013.8121C48.6313%2013.8126%2048.6322%2013.8131%2048.6331%2013.8136C50.0797%2014.6078%2050.9898%2016.1132%2051.026%2017.7438L51.1517%2039.8672L51.1517%2039.8746L51.1519%2039.8821Z%22%20fill%3D%22white%22%20stroke%3D%22url(%23paint0_linear_2691_4389)%22%20stroke-width%3D%222%22%2F%3E%0A%3Cpath%20d%3D%22M33.8193%2042.2542H17.8193C16.7585%2042.2542%2015.7411%2041.8328%2014.9909%2041.0826C14.2408%2040.3325%2013.8193%2039.3151%2013.8193%2038.2542V24.9209C13.8193%2023.86%2014.2408%2022.8426%2014.9909%2022.0924C15.7411%2021.3423%2016.7585%2020.9209%2017.8193%2020.9209H19.1527C19.1751%2019.791%2019.5558%2018.6975%2020.2399%2017.7981C20.924%2016.8986%2021.8761%2016.2397%2022.9589%2015.9164C24.0416%2015.593%2025.1992%2015.6219%2026.2644%2015.999C27.3297%2016.376%2028.2477%2017.0817%2028.886%2018.0142C29.4839%2018.8664%2029.8094%2019.8799%2029.8193%2020.9209H33.8193C34.173%2020.9209%2034.5121%2021.0613%2034.7621%2021.3114C35.0122%2021.5614%2035.1527%2021.9006%2035.1527%2022.2542V26.2542C36.2825%2026.2766%2037.376%2026.6573%2038.2754%2027.3414C39.1749%2028.0255%2039.8338%2028.9776%2040.1572%2030.0604C40.4805%2031.1432%2040.4516%2032.3007%2040.0745%2033.366C39.6975%2034.4312%2038.9918%2035.3492%2038.0593%2035.9875C37.2071%2036.5854%2036.1937%2036.9109%2035.1527%2036.9209V36.9209V40.9209C35.1527%2041.2745%2035.0122%2041.6136%2034.7621%2041.8637C34.5121%2042.1137%2034.173%2042.2542%2033.8193%2042.2542ZM17.8193%2023.5875C17.4657%2023.5875%2017.1266%2023.728%2016.8765%2023.978C16.6265%2024.2281%2016.486%2024.5672%2016.486%2024.9209V38.2542C16.486%2038.6078%2016.6265%2038.9469%2016.8765%2039.197C17.1266%2039.447%2017.4657%2039.5875%2017.8193%2039.5875H32.486V35.3475C32.4849%2035.1337%2032.5351%2034.9228%2032.6326%2034.7325C32.7301%2034.5422%2032.8718%2034.3782%2033.046%2034.2542C33.2196%2034.1304%2033.4204%2034.05%2033.6316%2034.0198C33.8427%2033.9897%2034.058%2034.0106%2034.2593%2034.0809C34.6393%2034.2359%2035.0532%2034.2891%2035.46%2034.2353C35.8669%2034.1816%2036.2527%2034.0226%2036.5793%2033.7742C36.9045%2033.5759%2037.1834%2033.3103%2037.3973%2032.9952C37.6111%2032.6801%2037.7551%2032.3229%2037.8193%2031.9475C37.8708%2031.5689%2037.8402%2031.1837%2037.7298%2030.8179C37.6194%2030.4522%2037.4317%2030.1144%2037.1793%2029.8275C36.8381%2029.413%2036.3734%2029.1183%2035.8529%2028.9864C35.3325%2028.8545%2034.7835%2028.8923%2034.286%2029.0942C34.0846%2029.1644%2033.8694%2029.1854%2033.6582%2029.1552C33.4471%2029.125%2033.2463%2029.0447%2033.0727%2028.9209C32.8985%2028.7969%2032.7567%2028.6328%2032.6593%2028.4425C32.5618%2028.2522%2032.5115%2028.0413%2032.5127%2027.8275V23.5875H28.246C28.0269%2023.5999%2027.8081%2023.5581%2027.609%2023.4656C27.4099%2023.3732%2027.2368%2023.233%2027.1049%2023.0576C26.973%2022.8822%2026.8864%2022.6769%2026.8529%2022.46C26.8194%2022.2431%2026.8399%2022.0213%2026.9127%2021.8142C27.0677%2021.4342%2027.1209%2021.0204%2027.0671%2020.6135C27.0134%2020.2066%2026.8544%2019.8208%2026.606%2019.4942C26.4091%2019.1597%2026.1395%2018.8739%2025.8172%2018.6578C25.4948%2018.4417%2025.128%2018.3009%2024.7438%2018.2458C24.3597%2018.1908%2023.9681%2018.2228%2023.598%2018.3397C23.2279%2018.4565%2022.8889%2018.6552%2022.606%2018.9209C22.3433%2019.1814%2022.1377%2019.4938%2022.0023%2019.8381C21.8668%2020.1824%2021.8045%2020.5512%2021.8193%2020.9209C21.8224%2021.2267%2021.8812%2021.5294%2021.9927%2021.8142C22.0632%2022.0158%2022.0842%2022.2314%2022.054%2022.4429C22.0237%2022.6543%2021.9432%2022.8554%2021.819%2023.0292C21.6949%2023.203%2021.5308%2023.3444%2021.3406%2023.4416C21.1504%2023.5388%2020.9396%2023.5888%2020.726%2023.5875H17.8193Z%22%20fill%3D%22url(%23paint1_linear_2691_4389)%22%2F%3E%0A%3C%2Fg%3E%0A%3Cdefs%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2691_4389%22%20x1%3D%220.662695%22%20y1%3D%2218.4025%22%20x2%3D%2251.7209%22%20y2%3D%2244.2212%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%23D4D4D8%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2371717A%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2691_4389%22%20x1%3D%2213.7453%22%20y1%3D%2221.3695%22%20x2%3D%2240.3876%22%20y2%3D%2235.7015%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%23D4D4D8%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2371717A%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3CclipPath%20id%3D%22clip0_2691_4389%22%3E%0A%3Crect%20width%3D%2252%22%20height%3D%2257%22%20fill%3D%22white%22%20transform%3D%22translate(0.152832%200.920898)%22%2F%3E%0A%3C%2FclipPath%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="modules icon" class="modules-image-light"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2253%22%20height%3D%2258%22%20viewBox%3D%220%200%2053%2058%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M3.43319%2014.5869L3.43322%2014.587L3.44269%2014.5812L22.9844%202.59084C24.4246%201.73116%2026.2124%201.69742%2027.6729%202.49791L27.6729%202.49792L27.6784%202.50094L48.6303%2013.8121C48.6313%2013.8126%2048.6322%2013.8131%2048.6331%2013.8137C50.0812%2014.6086%2050.9896%2016.1043%2051.026%2017.7437L51.1517%2039.8672L51.1517%2039.8746L51.1519%2039.8821C51.1856%2041.5203%2050.346%2043.0611%2048.9325%2043.9357L29.0918%2056.2117C27.6424%2057.1085%2025.8227%2057.1572%2024.3387%2056.3439L3.85107%2045.1148C2.26984%2044.2481%201.14232%2042.646%201.15293%2041.0494V41.0427L1.153%2018.552C1.15301%2018.5509%201.15302%2018.5499%201.15302%2018.5488C1.16485%2016.9324%202.02611%2015.4289%203.43319%2014.5869Z%22%20fill%3D%22%2318181B%22%20stroke%3D%22url(%23paint0_linear_2595_7175)%22%20stroke-width%3D%222%22%2F%3E%0A%3Cpath%20d%3D%22M33.8193%2042.2542H17.8193C16.7585%2042.2542%2015.7411%2041.8328%2014.9909%2041.0826C14.2408%2040.3325%2013.8193%2039.3151%2013.8193%2038.2542V24.9209C13.8193%2023.86%2014.2408%2022.8426%2014.9909%2022.0924C15.7411%2021.3423%2016.7585%2020.9209%2017.8193%2020.9209H19.1527C19.1751%2019.791%2019.5558%2018.6975%2020.2399%2017.7981C20.924%2016.8986%2021.8761%2016.2397%2022.9589%2015.9164C24.0416%2015.593%2025.1992%2015.6219%2026.2644%2015.999C27.3297%2016.376%2028.2477%2017.0817%2028.886%2018.0142C29.4839%2018.8664%2029.8094%2019.8799%2029.8193%2020.9209H33.8193C34.173%2020.9209%2034.5121%2021.0613%2034.7621%2021.3114C35.0122%2021.5614%2035.1527%2021.9006%2035.1527%2022.2542V26.2542C36.2825%2026.2766%2037.376%2026.6573%2038.2754%2027.3414C39.1749%2028.0255%2039.8338%2028.9776%2040.1572%2030.0604C40.4805%2031.1432%2040.4516%2032.3007%2040.0745%2033.366C39.6975%2034.4312%2038.9918%2035.3492%2038.0593%2035.9875C37.2071%2036.5854%2036.1937%2036.9109%2035.1527%2036.9209V40.9209C35.1527%2041.2745%2035.0122%2041.6136%2034.7621%2041.8637C34.5121%2042.1137%2034.173%2042.2542%2033.8193%2042.2542ZM17.8193%2023.5875C17.4657%2023.5875%2017.1266%2023.728%2016.8765%2023.978C16.6265%2024.2281%2016.486%2024.5672%2016.486%2024.9209V38.2542C16.486%2038.6078%2016.6265%2038.9469%2016.8765%2039.197C17.1266%2039.447%2017.4657%2039.5875%2017.8193%2039.5875H32.486V35.3475C32.4849%2035.1337%2032.5351%2034.9228%2032.6326%2034.7325C32.7301%2034.5422%2032.8718%2034.3782%2033.046%2034.2542C33.2196%2034.1304%2033.4205%2034.05%2033.6316%2034.0198C33.8427%2033.9897%2034.058%2034.0106%2034.2593%2034.0809C34.6393%2034.2359%2035.0532%2034.2891%2035.46%2034.2353C35.8669%2034.1816%2036.2527%2034.0226%2036.5793%2033.7742C36.9045%2033.5759%2037.1834%2033.3103%2037.3973%2032.9952C37.6111%2032.6801%2037.7551%2032.3229%2037.8193%2031.9475C37.8708%2031.5689%2037.8402%2031.1837%2037.7298%2030.8179C37.6194%2030.4522%2037.4317%2030.1144%2037.1793%2029.8275C36.8381%2029.413%2036.3734%2029.1183%2035.8529%2028.9864C35.3325%2028.8545%2034.7835%2028.8923%2034.286%2029.0942C34.0846%2029.1644%2033.8694%2029.1854%2033.6582%2029.1552C33.4471%2029.125%2033.2463%2029.0447%2033.0727%2028.9209C32.8985%2028.7969%2032.7567%2028.6328%2032.6593%2028.4425C32.5618%2028.2522%2032.5115%2028.0413%2032.5127%2027.8275V23.5875H28.246C28.0269%2023.5999%2027.8081%2023.5581%2027.609%2023.4656C27.4099%2023.3732%2027.2368%2023.233%2027.1049%2023.0576C26.973%2022.8822%2026.8864%2022.6769%2026.8529%2022.46C26.8194%2022.2431%2026.8399%2022.0213%2026.9127%2021.8142C27.0677%2021.4342%2027.1209%2021.0204%2027.0671%2020.6135C27.0134%2020.2066%2026.8544%2019.8208%2026.606%2019.4942C26.4091%2019.1597%2026.1395%2018.8739%2025.8172%2018.6578C25.4948%2018.4417%2025.128%2018.3009%2024.7438%2018.2458C24.3597%2018.1908%2023.9681%2018.2228%2023.598%2018.3397C23.2279%2018.4565%2022.8889%2018.6552%2022.606%2018.9209C22.3433%2019.1814%2022.1377%2019.4938%2022.0023%2019.8381C21.8668%2020.1824%2021.8045%2020.5512%2021.8193%2020.9209C21.8224%2021.2267%2021.8812%2021.5294%2021.9927%2021.8142C22.0632%2022.0158%2022.0842%2022.2314%2022.054%2022.4429C22.0237%2022.6543%2021.9432%2022.8554%2021.819%2023.0292C21.6949%2023.203%2021.5308%2023.3444%2021.3406%2023.4416C21.1504%2023.5388%2020.9396%2023.5888%2020.726%2023.5875H17.8193Z%22%20fill%3D%22url(%23paint1_linear_2595_7175)%22%2F%3E%0A%3Cdefs%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2595_7175%22%20x1%3D%220.662695%22%20y1%3D%2218.4025%22%20x2%3D%2251.7209%22%20y2%3D%2244.2212%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2371717A%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2595_7175%22%20x1%3D%2213.7453%22%20y1%3D%2221.3695%22%20x2%3D%2240.3876%22%20y2%3D%2235.7015%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2371717A%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="modules icon" class="modules-image-dark"> <div class="dark:text-white flex flex-col space-y text-black"><h3 class="font-semibold text-xl">Modules</h3><p class="dark:text-gray-300 text-gray-700">Discover our list of modules to supercharge your Nuxt project. Created by the Nuxt team and community.</p></div> </a></div><div class="border border-gray-200 col-span-2 dark:border-transparent dark:text-white documentation-container hover:border-transparent items-center justify-center lg:col-span-4 lg:order-none order-last relative rounded-xl row-span-2 text-black"><div class="gradient-border gradient-border-documentation gradient-border-square"></div><a href="https://nuxt.com/docs" target="_blank" class="bg-white dark:bg-gray-900 flex gap-y-4 items-center justify-center lg:flex-col rounded-xl"> <div class="flex flex-col gap-y-2 items-center justify-center lg:flex-col lg:py-7 px-5 py-6 rounded-xl sm:flex-row"><div class="dark:text-white flex flex-col space-y text-black"><h3 class="font-semibold text-xl">Documentation</h3><p class="dark:text-gray-300 text-gray-700">We highly recommend you take a look at the Nuxt documentation to level up.</p></div><img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%22342%22%20height%3D%22165%22%20viewBox%3D%220%200%20342%20165%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cg%20clip-path%3D%22url(%23clip0_2687_3947)%22%3E%0A%3Cpath%20d%3D%22M0.152832%20131.851H154.28%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M215.399%20107.359H349.153%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M0.152832%2077.2178L116.191%2077.2178%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M36.1528%20106.921L152.191%20106.921%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M202.153%2042.9209L317.305%2042.9209%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M218.153%2076.9209L345.305%2076.9209%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M285.947%208.45605V166.979%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M252.602%2016.8311V107.36%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M171.153%2016.9209V107.45%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M218.153%2016.9209V43.4501%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M122.153%2016.9211L327.45%2016.9209%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M1.92432%2043.3086H148.163%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M122.392%2016.4209V55.3659%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M36.084%200.920898L36.084%20176.921%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M75.4448%2043.249V175.152%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Ccircle%20opacity%3D%220.7%22%20cx%3D%2275.4448%22%20cy%3D%2277.2178%22%20r%3D%223.5%22%20fill%3D%22%2300DC82%22%2F%3E%0A%3Ccircle%20opacity%3D%220.7%22%20cx%3D%2236.1528%22%20cy%3D%22131.85%22%20r%3D%223.5%22%20fill%3D%22%2300DC82%22%2F%3E%0A%3Ccircle%20opacity%3D%220.7%22%20cx%3D%22285.947%22%20cy%3D%2242.9209%22%20r%3D%223.5%22%20fill%3D%22%2300DC82%22%2F%3E%0A%3Ccircle%20opacity%3D%220.7%22%20cx%3D%22252.602%22%20cy%3D%22107.359%22%20r%3D%223.5%22%20fill%3D%22%2300DC82%22%2F%3E%0A%3Cg%20filter%3D%22url(%23filter0_d_2687_3947)%22%3E%0A%3Cpath%20d%3D%22M122.846%2050.7109L163.067%2026.0929C166.656%2023.9507%20171.117%2023.8611%20174.77%2025.8579L217.894%2049.0819C221.524%2051.0665%20223.807%2054.8133%20223.892%2058.9246L224.15%20104.352C224.235%20108.448%20222.13%20112.287%20218.609%20114.46L177.783%20139.658C174.174%20141.886%20169.638%20142.011%20165.931%20139.984L123.774%20116.935C120.045%20114.896%20117.125%20111.001%20117.153%20106.776L117.153%2060.5974C117.18%2056.5529%20119.338%2052.8048%20122.846%2050.7109Z%22%20fill%3D%22white%22%2F%3E%0A%3Cpath%20d%3D%22M222.151%20104.393C222.22%20107.764%20220.487%20110.944%20217.571%20112.75C217.567%20112.753%20217.563%20112.755%20217.559%20112.758L176.733%20137.956C173.748%20139.798%20169.96%20139.907%20166.89%20138.229L124.733%20115.18C121.469%20113.395%20119.131%20110.069%20119.153%20106.79L119.153%20106.776L119.153%2060.6107C119.153%2060.6086%20119.153%2060.6065%20119.153%2060.6044C119.178%2057.2703%20120.958%2054.1669%20123.871%2052.4282L123.881%2052.4225L123.89%2052.4167L164.101%2027.8047C164.101%2027.8047%20164.101%2027.8047%20164.101%2027.8047C164.106%2027.8022%20164.11%2027.7997%20164.114%2027.7972C167.078%2026.0385%20170.793%2025.9632%20173.81%2027.6128L173.81%2027.6128L173.821%2027.6188L216.934%2050.8367C216.936%2050.8377%20216.938%2050.8387%20216.94%2050.8397C219.935%2052.4801%20221.817%2055.5878%20221.892%2058.9515L222.15%20104.363L222.15%20104.378L222.151%20104.393Z%22%20stroke%3D%22url(%23paint0_linear_2687_3947)%22%20stroke-width%3D%224%22%2F%3E%0A%3C%2Fg%3E%0A%3Cpath%20d%3D%22M192.349%2096.9158L190.63%2090.5186L183.778%2064.9088C183.55%2064.0605%20182.994%2063.3375%20182.233%2062.8988C181.472%2062.4601%20180.568%2062.3416%20179.72%2062.5693L173.323%2064.2877L173.116%2064.3498C172.807%2063.945%20172.409%2063.6168%20171.953%2063.3906C171.497%2063.1644%20170.995%2063.0463%20170.486%2063.0455H163.861C163.279%2063.0471%20162.707%2063.2043%20162.205%2063.501C161.703%2063.2043%20161.132%2063.0471%20160.549%2063.0455H153.924C153.045%2063.0455%20152.203%2063.3945%20151.582%2064.0157C150.96%2064.6369%20150.611%2065.4795%20150.611%2066.358V99.483C150.611%20100.362%20150.96%20101.204%20151.582%20101.825C152.203%20102.447%20153.045%20102.796%20153.924%20102.796H160.549C161.132%20102.794%20161.703%20102.637%20162.205%20102.34C162.707%20102.637%20163.279%20102.794%20163.861%20102.796H170.486C171.365%20102.796%20172.207%20102.447%20172.829%20101.825C173.45%20101.204%20173.799%20100.362%20173.799%2099.483V78.8627L177.836%2093.9346L179.554%20100.332C179.742%20101.039%20180.158%20101.665%20180.739%20102.11C181.32%20102.556%20182.031%20102.797%20182.763%20102.796C183.049%20102.791%20183.334%20102.756%20183.612%20102.692L190.009%20100.974C190.43%20100.861%20190.824%20100.665%20191.169%20100.399C191.514%20100.132%20191.802%2099.7997%20192.018%2099.4209C192.238%2099.047%20192.381%2098.6325%20192.438%2098.2021C192.495%2097.7717%20192.465%2097.3342%20192.349%2096.9158V96.9158ZM176.325%2075.4881L182.722%2073.7697L187.007%2089.7732L180.61%2091.4916L176.325%2075.4881ZM180.569%2065.7783L181.873%2070.5607L175.476%2072.2791L174.171%2067.4967L180.569%2065.7783ZM170.486%2066.358V91.2018H163.861V66.358H170.486ZM160.549%2066.358V71.3268H153.924V66.358H160.549ZM153.924%2099.483V74.6393H160.549V99.483H153.924ZM170.486%2099.483H163.861V94.5143H170.486V99.483ZM189.161%2097.7646L182.763%2099.483L181.459%2094.6799L187.877%2092.9615L189.161%2097.7646V97.7646Z%22%20fill%3D%22url(%23paint1_linear_2687_3947)%22%2F%3E%0A%3Crect%20x%3D%222.15283%22%20y%3D%22-3.0791%22%20width%3D%22327%22%20height%3D%2223%22%20fill%3D%22url(%23paint2_linear_2687_3947)%22%2F%3E%0A%3Crect%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22matrix(1%200%200%20-1%202.15283%20166.921)%22%20fill%3D%22url(%23paint3_linear_2687_3947)%22%2F%3E%0A%3Crect%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22matrix(0%201%201%200%200.152832%20-17.0791)%22%20fill%3D%22url(%23paint4_linear_2687_3947)%22%2F%3E%0A%3Crect%20x%3D%22342.153%22%20y%3D%22-17.0791%22%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22rotate(90%20342.153%20-17.0791)%22%20fill%3D%22url(%23paint5_linear_2687_3947)%22%2F%3E%0A%3C%2Fg%3E%0A%3Cdefs%3E%0A%3Cfilter%20id%3D%22filter0_d_2687_3947%22%20x%3D%2286.1528%22%20y%3D%22-6.5791%22%20width%3D%22169%22%20height%3D%22179%22%20filterUnits%3D%22userSpaceOnUse%22%20color-interpolation-filters%3D%22sRGB%22%3E%0A%3CfeFlood%20flood-opacity%3D%220%22%20result%3D%22BackgroundImageFix%22%2F%3E%0A%3CfeColorMatrix%20in%3D%22SourceAlpha%22%20type%3D%22matrix%22%20values%3D%220%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%20127%200%22%20result%3D%22hardAlpha%22%2F%3E%0A%3CfeOffset%2F%3E%0A%3CfeGaussianBlur%20stdDeviation%3D%2215.5%22%2F%3E%0A%3CfeComposite%20in2%3D%22hardAlpha%22%20operator%3D%22out%22%2F%3E%0A%3CfeColorMatrix%20type%3D%22matrix%22%20values%3D%220%200%200%200%201%200%200%200%200%201%200%200%200%200%201%200%200%200%200.07%200%22%2F%3E%0A%3CfeBlend%20mode%3D%22normal%22%20in2%3D%22BackgroundImageFix%22%20result%3D%22effect1_dropShadow_2687_3947%22%2F%3E%0A%3CfeBlend%20mode%3D%22normal%22%20in%3D%22SourceGraphic%22%20in2%3D%22effect1_dropShadow_2687_3947%22%20result%3D%22shape%22%2F%3E%0A%3C%2Ffilter%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2687_3947%22%20x1%3D%22118.202%22%20y1%3D%2260.3042%22%20x2%3D%22223.159%22%20y2%3D%22113.509%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2300DC82%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23003F25%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2687_3947%22%20x1%3D%22150.495%22%20y1%3D%2271.0767%22%20x2%3D%22191.769%22%20y2%3D%2294.1139%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2300DC82%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23003F25%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint2_linear_2687_3947%22%20x1%3D%22165.653%22%20y1%3D%22-3.0791%22%20x2%3D%22166.153%22%20y2%3D%2219.9209%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22white%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint3_linear_2687_3947%22%20x1%3D%22163.5%22%20y1%3D%22-2.30278e-07%22%20x2%3D%22164.091%22%20y2%3D%2224.9979%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22white%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint4_linear_2687_3947%22%20x1%3D%22163.5%22%20y1%3D%22-2.30278e-07%22%20x2%3D%22164.091%22%20y2%3D%2224.9979%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22white%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint5_linear_2687_3947%22%20x1%3D%22505.653%22%20y1%3D%22-17.0791%22%20x2%3D%22506.244%22%20y2%3D%227.91876%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22white%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3CclipPath%20id%3D%22clip0_2687_3947%22%3E%0A%3Crect%20width%3D%22341%22%20height%3D%22164%22%20fill%3D%22white%22%20transform%3D%22translate(0.152832%200.920898)%22%2F%3E%0A%3C%2FclipPath%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="documentation icon" class="documentation-image-color-light h-32 sm:h-34"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%22342%22%20height%3D%22165%22%20viewBox%3D%220%200%20342%20165%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cg%20clip-path%3D%22url(%23clip0_2595_7273)%22%3E%0A%3Cpath%20d%3D%22M0.152832%20131.851H154.28%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M215.399%20107.359H349.153%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M0.152832%2077.2178L116.191%2077.2178%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M36.1528%20106.921L152.191%20106.921%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M202.153%2042.9209L317.305%2042.9209%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M218.153%2076.9209L345.305%2076.9209%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M285.947%208.45605V166.979%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M252.602%2016.8311V107.36%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M171.153%2016.9209V107.45%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M218.153%2016.9209V43.4501%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M122.153%2016.9211L327.45%2016.9209%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M1.92432%2043.3086H148.163%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M122.392%2016.4209V55.3659%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M36.084%200.920898L36.084%20176.921%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M75.4448%2043.249V175.152%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Ccircle%20opacity%3D%220.14%22%20cx%3D%2275.4448%22%20cy%3D%2277.2178%22%20r%3D%223.5%22%20fill%3D%22%2300DC82%22%2F%3E%0A%3Ccircle%20opacity%3D%220.14%22%20cx%3D%2236.1528%22%20cy%3D%22131.85%22%20r%3D%223.5%22%20fill%3D%22%2300DC82%22%2F%3E%0A%3Ccircle%20opacity%3D%220.14%22%20cx%3D%22285.947%22%20cy%3D%2242.9209%22%20r%3D%223.5%22%20fill%3D%22%2300DC82%22%2F%3E%0A%3Ccircle%20opacity%3D%220.14%22%20cx%3D%22252.602%22%20cy%3D%22107.359%22%20r%3D%223.5%22%20fill%3D%22%2300DC82%22%2F%3E%0A%3Cg%20filter%3D%22url(%23filter0_d_2595_7273)%22%3E%0A%3Cpath%20d%3D%22M122.846%2050.7109L163.067%2026.0929C166.656%2023.9507%20171.117%2023.8611%20174.77%2025.8579L217.894%2049.0819C221.524%2051.0665%20223.807%2054.8133%20223.892%2058.9246L224.15%20104.352C224.235%20108.448%20222.13%20112.287%20218.609%20114.46L177.783%20139.658C174.174%20141.886%20169.638%20142.011%20165.931%20139.984L123.774%20116.935C120.045%20114.896%20117.125%20111.001%20117.153%20106.776L117.153%2060.5974C117.18%2056.5529%20119.338%2052.8048%20122.846%2050.7109Z%22%20fill%3D%22%2318181B%22%2F%3E%0A%3Cpath%20d%3D%22M123.871%2052.4282L123.881%2052.4225L123.89%2052.4167L164.101%2027.8047C167.083%2026.0291%20170.786%2025.9592%20173.81%2027.6128L173.81%2027.6128L173.821%2027.6188L216.934%2050.8367C216.936%2050.8376%20216.938%2050.8386%20216.939%2050.8395C219.938%2052.4814%20221.817%2055.5694%20221.892%2058.9515L222.15%20104.363L222.15%20104.378L222.151%20104.393C222.221%20107.772%20220.485%20110.952%20217.559%20112.758L176.733%20137.956C173.732%20139.808%20169.963%20139.909%20166.89%20138.229L124.733%20115.18C121.465%20113.393%20119.131%20110.089%20119.153%20106.79L119.153%20106.776L119.153%2060.6107C119.153%2060.6086%20119.153%2060.6065%20119.153%2060.6044C119.178%2057.2703%20120.958%2054.1669%20123.871%2052.4282Z%22%20stroke%3D%22url(%23paint0_linear_2595_7273)%22%20stroke-width%3D%224%22%2F%3E%0A%3C%2Fg%3E%0A%3Cpath%20d%3D%22M192.349%2096.9158L190.63%2090.5186L183.778%2064.9088C183.55%2064.0605%20182.994%2063.3375%20182.233%2062.8988C181.472%2062.4601%20180.568%2062.3416%20179.72%2062.5693L173.323%2064.2877L173.116%2064.3498C172.807%2063.945%20172.409%2063.6168%20171.953%2063.3906C171.497%2063.1644%20170.995%2063.0463%20170.486%2063.0455H163.861C163.279%2063.0471%20162.707%2063.2043%20162.205%2063.501C161.703%2063.2043%20161.132%2063.0471%20160.549%2063.0455H153.924C153.045%2063.0455%20152.203%2063.3945%20151.582%2064.0157C150.96%2064.6369%20150.611%2065.4795%20150.611%2066.358V99.483C150.611%20100.362%20150.96%20101.204%20151.582%20101.825C152.203%20102.447%20153.045%20102.796%20153.924%20102.796H160.549C161.132%20102.794%20161.703%20102.637%20162.205%20102.34C162.707%20102.637%20163.279%20102.794%20163.861%20102.796H170.486C171.365%20102.796%20172.207%20102.447%20172.829%20101.825C173.45%20101.204%20173.799%20100.362%20173.799%2099.483V78.8627L177.836%2093.9346L179.554%20100.332C179.742%20101.039%20180.158%20101.665%20180.739%20102.11C181.32%20102.556%20182.031%20102.797%20182.763%20102.796C183.049%20102.791%20183.334%20102.756%20183.612%20102.692L190.009%20100.974C190.43%20100.861%20190.824%20100.665%20191.169%20100.399C191.514%20100.132%20191.802%2099.7998%20192.018%2099.4209C192.238%2099.047%20192.381%2098.6325%20192.438%2098.2021C192.495%2097.7717%20192.465%2097.3342%20192.349%2096.9158ZM176.325%2075.4881L182.722%2073.7697L187.007%2089.7732L180.61%2091.4916L176.325%2075.4881ZM180.569%2065.7783L181.873%2070.5607L175.476%2072.2791L174.171%2067.4967L180.569%2065.7783ZM170.486%2066.358V91.2018H163.861V66.358H170.486ZM160.549%2066.358V71.3268H153.924V66.358H160.549ZM153.924%2099.483V74.6393H160.549V99.483H153.924ZM170.486%2099.483H163.861V94.5143H170.486V99.483ZM189.161%2097.7646L182.763%2099.483L181.459%2094.6799L187.877%2092.9615L189.161%2097.7646Z%22%20fill%3D%22url(%23paint1_linear_2595_7273)%22%2F%3E%0A%3Crect%20x%3D%222.15283%22%20y%3D%22-3.0791%22%20width%3D%22327%22%20height%3D%2223%22%20fill%3D%22url(%23paint2_linear_2595_7273)%22%2F%3E%0A%3Crect%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22matrix(1%200%200%20-1%202.15283%20166.921)%22%20fill%3D%22url(%23paint3_linear_2595_7273)%22%2F%3E%0A%3Crect%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22matrix(0%201%201%200%200.152832%20-17.0791)%22%20fill%3D%22url(%23paint4_linear_2595_7273)%22%2F%3E%0A%3Crect%20x%3D%22342.153%22%20y%3D%22-17.0791%22%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22rotate(90%20342.153%20-17.0791)%22%20fill%3D%22url(%23paint5_linear_2595_7273)%22%2F%3E%0A%3C%2Fg%3E%0A%3Cdefs%3E%0A%3Cfilter%20id%3D%22filter0_d_2595_7273%22%20x%3D%2286.1528%22%20y%3D%22-6.5791%22%20width%3D%22169%22%20height%3D%22179%22%20filterUnits%3D%22userSpaceOnUse%22%20color-interpolation-filters%3D%22sRGB%22%3E%0A%3CfeFlood%20flood-opacity%3D%220%22%20result%3D%22BackgroundImageFix%22%2F%3E%0A%3CfeColorMatrix%20in%3D%22SourceAlpha%22%20type%3D%22matrix%22%20values%3D%220%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%20127%200%22%20result%3D%22hardAlpha%22%2F%3E%0A%3CfeOffset%2F%3E%0A%3CfeGaussianBlur%20stdDeviation%3D%2215.5%22%2F%3E%0A%3CfeComposite%20in2%3D%22hardAlpha%22%20operator%3D%22out%22%2F%3E%0A%3CfeColorMatrix%20type%3D%22matrix%22%20values%3D%220%200%200%200%201%200%200%200%200%201%200%200%200%200%201%200%200%200%200.07%200%22%2F%3E%0A%3CfeBlend%20mode%3D%22normal%22%20in2%3D%22BackgroundImageFix%22%20result%3D%22effect1_dropShadow_2595_7273%22%2F%3E%0A%3CfeBlend%20mode%3D%22normal%22%20in%3D%22SourceGraphic%22%20in2%3D%22effect1_dropShadow_2595_7273%22%20result%3D%22shape%22%2F%3E%0A%3C%2Ffilter%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2595_7273%22%20x1%3D%22118.202%22%20y1%3D%2260.3042%22%20x2%3D%22223.159%22%20y2%3D%22113.509%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2300DC82%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23003F25%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2595_7273%22%20x1%3D%22150.495%22%20y1%3D%2271.0767%22%20x2%3D%22191.769%22%20y2%3D%2294.1139%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2300DC82%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23003F25%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint2_linear_2595_7273%22%20x1%3D%22165.653%22%20y1%3D%22-3.0791%22%20x2%3D%22166.153%22%20y2%3D%2219.9209%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2318181B%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2318181B%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint3_linear_2595_7273%22%20x1%3D%22163.5%22%20y1%3D%22-2.30278e-07%22%20x2%3D%22164.091%22%20y2%3D%2224.9979%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2318181B%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2318181B%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint4_linear_2595_7273%22%20x1%3D%22163.5%22%20y1%3D%22-2.30278e-07%22%20x2%3D%22164.091%22%20y2%3D%2224.9979%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2318181B%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2318181B%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint5_linear_2595_7273%22%20x1%3D%22505.653%22%20y1%3D%22-17.0791%22%20x2%3D%22506.244%22%20y2%3D%227.91876%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2318181B%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2318181B%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3CclipPath%20id%3D%22clip0_2595_7273%22%3E%0A%3Crect%20width%3D%22341%22%20height%3D%22164%22%20fill%3D%22white%22%20transform%3D%22translate(0.152832%200.920898)%22%2F%3E%0A%3C%2FclipPath%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="documentation icon" class="documentation-image-color-dark h-32 sm:h-34"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%22342%22%20height%3D%22165%22%20viewBox%3D%220%200%20342%20165%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cg%20clip-path%3D%22url(%23clip0_2687_3977)%22%3E%0A%3Cpath%20d%3D%22M0.152832%20131.851H154.28%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M215.399%20107.359H349.153%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M0.152832%2077.2178L116.191%2077.2178%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M36.1528%20106.921L152.191%20106.921%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M202.153%2042.9209L317.305%2042.9209%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M218.153%2076.9209L345.305%2076.9209%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M285.947%208.45605V166.979%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M252.602%2016.8311V107.36%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M171.153%2016.9209V107.45%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M218.153%2016.9209V43.4501%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M122.153%2016.9211L327.45%2016.9209%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M1.92432%2043.3086H148.163%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M122.392%2016.4209V55.3659%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M36.084%200.920898L36.084%20176.921%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Cpath%20d%3D%22M75.4448%2043.249V175.152%22%20stroke%3D%22%23E4E4E7%22%2F%3E%0A%3Ccircle%20opacity%3D%220.7%22%20cx%3D%2275.4448%22%20cy%3D%2277.2178%22%20r%3D%223.5%22%20fill%3D%22%23A1A1AA%22%2F%3E%0A%3Ccircle%20opacity%3D%220.7%22%20cx%3D%2236.1528%22%20cy%3D%22131.85%22%20r%3D%223.5%22%20fill%3D%22%23A1A1AA%22%2F%3E%0A%3Ccircle%20opacity%3D%220.7%22%20cx%3D%22285.947%22%20cy%3D%2242.9209%22%20r%3D%223.5%22%20fill%3D%22%23A1A1AA%22%2F%3E%0A%3Ccircle%20opacity%3D%220.7%22%20cx%3D%22252.602%22%20cy%3D%22107.359%22%20r%3D%223.5%22%20fill%3D%22%23A1A1AA%22%2F%3E%0A%3Cg%20filter%3D%22url(%23filter0_d_2687_3977)%22%3E%0A%3Cpath%20d%3D%22M122.846%2050.7109L163.067%2026.0929C166.656%2023.9507%20171.117%2023.8611%20174.77%2025.8579L217.894%2049.0819C221.524%2051.0665%20223.807%2054.8133%20223.892%2058.9246L224.15%20104.352C224.235%20108.448%20222.13%20112.287%20218.609%20114.46L177.783%20139.658C174.174%20141.886%20169.638%20142.011%20165.931%20139.984L123.774%20116.935C120.045%20114.896%20117.125%20111.001%20117.153%20106.776L117.153%2060.5974C117.18%2056.5529%20119.338%2052.8048%20122.846%2050.7109Z%22%20fill%3D%22white%22%2F%3E%0A%3Cpath%20d%3D%22M222.151%20104.393C222.22%20107.764%20220.487%20110.944%20217.571%20112.75C217.567%20112.753%20217.563%20112.755%20217.559%20112.758L176.733%20137.956C173.748%20139.798%20169.96%20139.907%20166.89%20138.229L124.733%20115.18C121.469%20113.395%20119.131%20110.069%20119.153%20106.79L119.153%20106.776L119.153%2060.6107C119.153%2060.6086%20119.153%2060.6065%20119.153%2060.6044C119.178%2057.2703%20120.958%2054.1669%20123.871%2052.4282L123.881%2052.4225L123.89%2052.4167L164.101%2027.8047C164.101%2027.8047%20164.101%2027.8047%20164.101%2027.8047C164.106%2027.8022%20164.11%2027.7997%20164.114%2027.7972C167.078%2026.0385%20170.793%2025.9632%20173.81%2027.6128L173.81%2027.6128L173.821%2027.6188L216.934%2050.8367C216.936%2050.8377%20216.938%2050.8387%20216.94%2050.8397C219.935%2052.4801%20221.817%2055.5878%20221.892%2058.9515L222.15%20104.363L222.15%20104.378L222.151%20104.393Z%22%20stroke%3D%22url(%23paint0_linear_2687_3977)%22%20stroke-width%3D%224%22%2F%3E%0A%3C%2Fg%3E%0A%3Cpath%20d%3D%22M192.349%2096.9158L190.63%2090.5186L183.778%2064.9088C183.55%2064.0605%20182.994%2063.3375%20182.233%2062.8988C181.472%2062.4601%20180.568%2062.3416%20179.72%2062.5693L173.323%2064.2877L173.116%2064.3498C172.807%2063.945%20172.409%2063.6168%20171.953%2063.3906C171.497%2063.1644%20170.995%2063.0463%20170.486%2063.0455H163.861C163.279%2063.0471%20162.707%2063.2043%20162.205%2063.501C161.703%2063.2043%20161.132%2063.0471%20160.549%2063.0455H153.924C153.045%2063.0455%20152.203%2063.3945%20151.582%2064.0157C150.96%2064.6369%20150.611%2065.4795%20150.611%2066.358V99.483C150.611%20100.362%20150.96%20101.204%20151.582%20101.825C152.203%20102.447%20153.045%20102.796%20153.924%20102.796H160.549C161.132%20102.794%20161.703%20102.637%20162.205%20102.34C162.707%20102.637%20163.279%20102.794%20163.861%20102.796H170.486C171.365%20102.796%20172.207%20102.447%20172.829%20101.825C173.45%20101.204%20173.799%20100.362%20173.799%2099.483V78.8627L177.836%2093.9346L179.554%20100.332C179.742%20101.039%20180.158%20101.665%20180.739%20102.11C181.32%20102.556%20182.031%20102.797%20182.763%20102.796C183.049%20102.791%20183.334%20102.756%20183.612%20102.692L190.009%20100.974C190.43%20100.861%20190.824%20100.665%20191.169%20100.399C191.514%20100.132%20191.802%2099.7997%20192.018%2099.4209C192.238%2099.047%20192.381%2098.6325%20192.438%2098.2021C192.495%2097.7717%20192.465%2097.3342%20192.349%2096.9158V96.9158ZM176.325%2075.4881L182.722%2073.7697L187.007%2089.7732L180.61%2091.4916L176.325%2075.4881ZM180.569%2065.7783L181.873%2070.5607L175.476%2072.2791L174.171%2067.4967L180.569%2065.7783ZM170.486%2066.358V91.2018H163.861V66.358H170.486ZM160.549%2066.358V71.3268H153.924V66.358H160.549ZM153.924%2099.483V74.6393H160.549V99.483H153.924ZM170.486%2099.483H163.861V94.5143H170.486V99.483ZM189.161%2097.7646L182.763%2099.483L181.459%2094.6799L187.877%2092.9615L189.161%2097.7646V97.7646Z%22%20fill%3D%22url(%23paint1_linear_2687_3977)%22%2F%3E%0A%3Crect%20x%3D%222.15283%22%20y%3D%22-3.0791%22%20width%3D%22327%22%20height%3D%2223%22%20fill%3D%22url(%23paint2_linear_2687_3977)%22%2F%3E%0A%3Crect%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22matrix(1%200%200%20-1%202.15283%20166.921)%22%20fill%3D%22url(%23paint3_linear_2687_3977)%22%2F%3E%0A%3Crect%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22matrix(0%201%201%200%200.152832%20-17.0791)%22%20fill%3D%22url(%23paint4_linear_2687_3977)%22%2F%3E%0A%3Crect%20x%3D%22342.153%22%20y%3D%22-17.0791%22%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22rotate(90%20342.153%20-17.0791)%22%20fill%3D%22url(%23paint5_linear_2687_3977)%22%2F%3E%0A%3C%2Fg%3E%0A%3Cdefs%3E%0A%3Cfilter%20id%3D%22filter0_d_2687_3977%22%20x%3D%2286.1528%22%20y%3D%22-6.5791%22%20width%3D%22169%22%20height%3D%22179%22%20filterUnits%3D%22userSpaceOnUse%22%20color-interpolation-filters%3D%22sRGB%22%3E%0A%3CfeFlood%20flood-opacity%3D%220%22%20result%3D%22BackgroundImageFix%22%2F%3E%0A%3CfeColorMatrix%20in%3D%22SourceAlpha%22%20type%3D%22matrix%22%20values%3D%220%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%20127%200%22%20result%3D%22hardAlpha%22%2F%3E%0A%3CfeOffset%2F%3E%0A%3CfeGaussianBlur%20stdDeviation%3D%2215.5%22%2F%3E%0A%3CfeComposite%20in2%3D%22hardAlpha%22%20operator%3D%22out%22%2F%3E%0A%3CfeColorMatrix%20type%3D%22matrix%22%20values%3D%220%200%200%200%200.831373%200%200%200%200%200.831373%200%200%200%200%200.847059%200%200%200%200.07%200%22%2F%3E%0A%3CfeBlend%20mode%3D%22normal%22%20in2%3D%22BackgroundImageFix%22%20result%3D%22effect1_dropShadow_2687_3977%22%2F%3E%0A%3CfeBlend%20mode%3D%22normal%22%20in%3D%22SourceGraphic%22%20in2%3D%22effect1_dropShadow_2687_3977%22%20result%3D%22shape%22%2F%3E%0A%3C%2Ffilter%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2687_3977%22%20x1%3D%22118.202%22%20y1%3D%2260.3042%22%20x2%3D%22223.159%22%20y2%3D%22113.509%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%23D4D4D8%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%233F3F46%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2687_3977%22%20x1%3D%22150.495%22%20y1%3D%2271.0767%22%20x2%3D%22191.769%22%20y2%3D%2294.1139%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%23D4D4D8%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%233F3F46%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint2_linear_2687_3977%22%20x1%3D%22165.653%22%20y1%3D%22-3.0791%22%20x2%3D%22166.153%22%20y2%3D%2219.9209%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22white%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint3_linear_2687_3977%22%20x1%3D%22163.5%22%20y1%3D%22-2.30278e-07%22%20x2%3D%22164.091%22%20y2%3D%2224.9979%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22white%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint4_linear_2687_3977%22%20x1%3D%22163.5%22%20y1%3D%22-2.30278e-07%22%20x2%3D%22164.091%22%20y2%3D%2224.9979%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22white%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint5_linear_2687_3977%22%20x1%3D%22505.653%22%20y1%3D%22-17.0791%22%20x2%3D%22506.244%22%20y2%3D%227.91876%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22white%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3CclipPath%20id%3D%22clip0_2687_3977%22%3E%0A%3Crect%20width%3D%22341%22%20height%3D%22164%22%20fill%3D%22white%22%20transform%3D%22translate(0.152832%200.920898)%22%2F%3E%0A%3C%2FclipPath%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="documentation icon" class="documentation-image-light h-32 sm:h-34"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%22342%22%20height%3D%22165%22%20viewBox%3D%220%200%20342%20165%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cg%20clip-path%3D%22url(%23clip0_2595_7193)%22%3E%0A%3Cpath%20d%3D%22M0.152832%20131.851H154.28%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M215.399%20107.359H349.153%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M0.152832%2077.2178L116.191%2077.2178%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M36.1528%20106.921L152.191%20106.921%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M202.153%2042.9209L317.305%2042.9209%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M218.153%2076.9209L345.305%2076.9209%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M285.947%208.45605V166.979%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M252.602%2016.8311V107.36%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M171.153%2016.9209V107.45%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M218.153%2016.9209V43.4501%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M122.153%2016.9211L327.45%2016.9209%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M1.92432%2043.3086H148.163%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M122.392%2016.4209V55.3659%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M36.084%200.920898L36.084%20176.921%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Cpath%20d%3D%22M75.4448%2043.249V175.152%22%20stroke%3D%22%2327272A%22%2F%3E%0A%3Ccircle%20opacity%3D%220.14%22%20cx%3D%2275.4448%22%20cy%3D%2277.2178%22%20r%3D%223.5%22%20fill%3D%22white%22%2F%3E%0A%3Ccircle%20opacity%3D%220.14%22%20cx%3D%2236.1528%22%20cy%3D%22131.85%22%20r%3D%223.5%22%20fill%3D%22white%22%2F%3E%0A%3Ccircle%20opacity%3D%220.14%22%20cx%3D%22285.947%22%20cy%3D%2242.9209%22%20r%3D%223.5%22%20fill%3D%22white%22%2F%3E%0A%3Ccircle%20opacity%3D%220.14%22%20cx%3D%22252.602%22%20cy%3D%22107.359%22%20r%3D%223.5%22%20fill%3D%22white%22%2F%3E%0A%3Cg%20filter%3D%22url(%23filter0_d_2595_7193)%22%3E%0A%3Cpath%20d%3D%22M122.846%2050.7109L163.067%2026.0929C166.656%2023.9507%20171.117%2023.8611%20174.77%2025.8579L217.894%2049.0819C221.524%2051.0665%20223.807%2054.8133%20223.892%2058.9246L224.15%20104.352C224.235%20108.448%20222.13%20112.287%20218.609%20114.46L177.783%20139.658C174.174%20141.886%20169.638%20142.011%20165.931%20139.984L123.774%20116.935C120.045%20114.896%20117.125%20111.001%20117.153%20106.776L117.153%2060.5974C117.18%2056.5529%20119.338%2052.8048%20122.846%2050.7109Z%22%20fill%3D%22%2318181B%22%2F%3E%0A%3Cpath%20d%3D%22M123.871%2052.4282L123.881%2052.4225L123.89%2052.4167L164.101%2027.8047C167.083%2026.0291%20170.786%2025.9592%20173.81%2027.6128L173.81%2027.6128L173.821%2027.6188L216.934%2050.8367C216.936%2050.8376%20216.938%2050.8386%20216.939%2050.8395C219.938%2052.4814%20221.817%2055.5694%20221.892%2058.9515L222.15%20104.363L222.15%20104.378L222.151%20104.393C222.221%20107.772%20220.485%20110.952%20217.559%20112.758L176.733%20137.956C173.732%20139.808%20169.963%20139.909%20166.89%20138.229L124.733%20115.18C121.465%20113.393%20119.131%20110.089%20119.153%20106.79L119.153%20106.776L119.153%2060.6107C119.153%2060.6086%20119.153%2060.6065%20119.153%2060.6044C119.178%2057.2703%20120.958%2054.1669%20123.871%2052.4282Z%22%20stroke%3D%22url(%23paint0_linear_2595_7193)%22%20stroke-width%3D%224%22%2F%3E%0A%3C%2Fg%3E%0A%3Cpath%20d%3D%22M192.349%2096.9158L190.63%2090.5186L183.778%2064.9088C183.55%2064.0605%20182.994%2063.3375%20182.233%2062.8988C181.472%2062.4601%20180.568%2062.3416%20179.72%2062.5693L173.323%2064.2877L173.116%2064.3498C172.807%2063.945%20172.409%2063.6168%20171.953%2063.3906C171.497%2063.1644%20170.995%2063.0463%20170.486%2063.0455H163.861C163.279%2063.0471%20162.707%2063.2043%20162.205%2063.501C161.703%2063.2043%20161.132%2063.0471%20160.549%2063.0455H153.924C153.045%2063.0455%20152.203%2063.3945%20151.582%2064.0157C150.96%2064.6369%20150.611%2065.4795%20150.611%2066.358V99.483C150.611%20100.362%20150.96%20101.204%20151.582%20101.825C152.203%20102.447%20153.045%20102.796%20153.924%20102.796H160.549C161.132%20102.794%20161.703%20102.637%20162.205%20102.34C162.707%20102.637%20163.279%20102.794%20163.861%20102.796H170.486C171.365%20102.796%20172.207%20102.447%20172.829%20101.825C173.45%20101.204%20173.799%20100.362%20173.799%2099.483V78.8627L177.836%2093.9346L179.554%20100.332C179.742%20101.039%20180.158%20101.665%20180.739%20102.11C181.32%20102.556%20182.031%20102.797%20182.763%20102.796C183.049%20102.791%20183.334%20102.756%20183.612%20102.692L190.009%20100.974C190.43%20100.861%20190.824%20100.665%20191.169%20100.399C191.514%20100.132%20191.802%2099.7998%20192.018%2099.4209C192.238%2099.047%20192.381%2098.6325%20192.438%2098.2021C192.495%2097.7717%20192.465%2097.3342%20192.349%2096.9158ZM176.325%2075.4881L182.722%2073.7697L187.007%2089.7732L180.61%2091.4916L176.325%2075.4881ZM180.569%2065.7783L181.873%2070.5607L175.476%2072.2791L174.171%2067.4967L180.569%2065.7783ZM170.486%2066.358V91.2018H163.861V66.358H170.486ZM160.549%2066.358V71.3268H153.924V66.358H160.549ZM153.924%2099.483V74.6393H160.549V99.483H153.924ZM170.486%2099.483H163.861V94.5143H170.486V99.483ZM189.161%2097.7646L182.763%2099.483L181.459%2094.6799L187.877%2092.9615L189.161%2097.7646Z%22%20fill%3D%22url(%23paint1_linear_2595_7193)%22%2F%3E%0A%3Crect%20x%3D%222.15283%22%20y%3D%22-3.0791%22%20width%3D%22327%22%20height%3D%2223%22%20fill%3D%22url(%23paint2_linear_2595_7193)%22%2F%3E%0A%3Crect%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22matrix(1%200%200%20-1%202.15283%20166.921)%22%20fill%3D%22url(%23paint3_linear_2595_7193)%22%2F%3E%0A%3Crect%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22matrix(0%201%201%200%200.152832%20-17.0791)%22%20fill%3D%22url(%23paint4_linear_2595_7193)%22%2F%3E%0A%3Crect%20x%3D%22342.153%22%20y%3D%22-17.0791%22%20width%3D%22327%22%20height%3D%2225%22%20transform%3D%22rotate(90%20342.153%20-17.0791)%22%20fill%3D%22url(%23paint5_linear_2595_7193)%22%2F%3E%0A%3C%2Fg%3E%0A%3Cdefs%3E%0A%3Cfilter%20id%3D%22filter0_d_2595_7193%22%20x%3D%2286.1528%22%20y%3D%22-6.5791%22%20width%3D%22169%22%20height%3D%22179%22%20filterUnits%3D%22userSpaceOnUse%22%20color-interpolation-filters%3D%22sRGB%22%3E%0A%3CfeFlood%20flood-opacity%3D%220%22%20result%3D%22BackgroundImageFix%22%2F%3E%0A%3CfeColorMatrix%20in%3D%22SourceAlpha%22%20type%3D%22matrix%22%20values%3D%220%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%20127%200%22%20result%3D%22hardAlpha%22%2F%3E%0A%3CfeOffset%2F%3E%0A%3CfeGaussianBlur%20stdDeviation%3D%2215.5%22%2F%3E%0A%3CfeComposite%20in2%3D%22hardAlpha%22%20operator%3D%22out%22%2F%3E%0A%3CfeColorMatrix%20type%3D%22matrix%22%20values%3D%220%200%200%200%201%200%200%200%200%201%200%200%200%200%201%200%200%200%200.07%200%22%2F%3E%0A%3CfeBlend%20mode%3D%22normal%22%20in2%3D%22BackgroundImageFix%22%20result%3D%22effect1_dropShadow_2595_7193%22%2F%3E%0A%3CfeBlend%20mode%3D%22normal%22%20in%3D%22SourceGraphic%22%20in2%3D%22effect1_dropShadow_2595_7193%22%20result%3D%22shape%22%2F%3E%0A%3C%2Ffilter%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2595_7193%22%20x1%3D%22118.202%22%20y1%3D%2260.3042%22%20x2%3D%22223.159%22%20y2%3D%22113.509%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2371717A%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2595_7193%22%20x1%3D%22150.495%22%20y1%3D%2271.0767%22%20x2%3D%22191.769%22%20y2%3D%2294.1139%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2371717A%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint2_linear_2595_7193%22%20x1%3D%22165.653%22%20y1%3D%22-3.0791%22%20x2%3D%22166.153%22%20y2%3D%2219.9209%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2318181B%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2318181B%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint3_linear_2595_7193%22%20x1%3D%22163.5%22%20y1%3D%22-2.30278e-07%22%20x2%3D%22164.091%22%20y2%3D%2224.9979%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2318181B%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2318181B%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint4_linear_2595_7193%22%20x1%3D%22163.5%22%20y1%3D%22-2.30278e-07%22%20x2%3D%22164.091%22%20y2%3D%2224.9979%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2318181B%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2318181B%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint5_linear_2595_7193%22%20x1%3D%22505.653%22%20y1%3D%22-17.0791%22%20x2%3D%22506.244%22%20y2%3D%227.91876%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%2318181B%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2318181B%22%20stop-opacity%3D%220%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3CclipPath%20id%3D%22clip0_2595_7193%22%3E%0A%3Crect%20width%3D%22341%22%20height%3D%22164%22%20fill%3D%22white%22%20transform%3D%22translate(0.152832%200.920898)%22%2F%3E%0A%3C%2FclipPath%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="documentation icon" class="documentation-image-dark h-32 sm:h-34"></div> </a></div><div class="border border-gray-200 col-span-2 dark:border-transparent dark:text-white examples-container hover:border-transparent items-center justify-center lg:col-span-6 lg:min-h-min md:min-h-[180px] relative rounded-xl sm:col-span-1 sm:min-h-[220px] text-black"><div class="gradient-border gradient-border-examples gradient-border-rect"></div><div class="absolute bg-gradient-to-l duration-300 examples-gradient-right from-blue-400 inset-y-0 right-0 rounded-xl to-transparent transition-opacity w-[20%] z-1"></div><a href="https://nuxt.com/docs/examples" target="_blank" class="bg-white dark:bg-gray-900 flex gap-x-4 items-center justify-center lg:min-h-min md:min-h-[180px] px-5 py-6 rounded-xl sm:min-h-[220px]"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2253%22%20height%3D%2258%22%20viewBox%3D%220%200%2053%2058%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M49.1971%2043.7595C49.1113%2043.8209%2049.0231%2043.8796%2048.9325%2043.9357L29.0918%2056.2117C27.6504%2057.1035%2025.8212%2057.1564%2024.3387%2056.3439L3.85107%2045.1148C2.27157%2044.2491%201.14238%2042.6366%201.15291%2041.0494L1.15293%2041.0427L1.153%2018.552C1.15301%2018.5509%201.15302%2018.5499%201.15302%2018.5488C1.16485%2016.9324%202.02611%2015.4289%203.43319%2014.5869L3.43322%2014.587L3.44269%2014.5812L22.9844%202.59084C24.4169%201.73583%2026.2139%201.69824%2027.6729%202.49791L27.6729%202.49792L27.6784%202.50094L48.6303%2013.8121C48.6313%2013.8126%2048.6322%2013.8131%2048.6331%2013.8136C50.0797%2014.6078%2050.9898%2016.1132%2051.026%2017.7438L51.1517%2039.8672L51.1517%2039.8746L51.1519%2039.8821C51.1834%2041.4138%2050.4491%2042.8635%2049.1971%2043.7595Z%22%20fill%3D%22white%22%20stroke%3D%22url(%23paint0_linear_2613_3941)%22%20stroke-width%3D%222%22%2F%3E%0A%3Cpath%20d%3D%22M37.1528%2017.9209H15.1528C14.6224%2017.9209%2014.1137%2018.1316%2013.7386%2018.5067C13.3635%2018.8818%2013.1528%2019.3905%2013.1528%2019.9209V37.9209C13.1528%2038.4513%2013.3635%2038.96%2013.7386%2039.3351C14.1137%2039.7102%2014.6224%2039.9209%2015.1528%2039.9209H37.1528C37.6833%2039.9209%2038.192%2039.7102%2038.567%2039.3351C38.9421%2038.96%2039.1528%2038.4513%2039.1528%2037.9209V19.9209C39.1528%2019.3905%2038.9421%2018.8818%2038.567%2018.5067C38.192%2018.1316%2037.6833%2017.9209%2037.1528%2017.9209V17.9209ZM15.1528%2019.9209H37.1528V24.9209H15.1528V19.9209ZM15.1528%2026.9209H22.1528V37.9209H15.1528V26.9209ZM37.1528%2037.9209H24.1528V26.9209H37.1528V37.9209Z%22%20fill%3D%22url(%23paint1_linear_2613_3941)%22%2F%3E%0A%3Cdefs%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2613_3941%22%20x1%3D%220.662695%22%20y1%3D%2218.4025%22%20x2%3D%2251.7209%22%20y2%3D%2244.2212%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%238DEAFF%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23008AA9%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2613_3941%22%20x1%3D%2213.0804%22%20y1%3D%2222.6224%22%20x2%3D%2237.028%22%20y2%3D%2237.847%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%238DEAFF%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23008AA9%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="examples icon" class="examples-image-color-light"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2253%22%20height%3D%2258%22%20viewBox%3D%220%200%2053%2058%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M3.43319%2014.5869L3.43322%2014.587L3.44269%2014.5812L22.9844%202.59084C24.4246%201.73116%2026.2124%201.69742%2027.6729%202.49791L27.6729%202.49792L27.6784%202.50094L48.6303%2013.8121C48.6313%2013.8126%2048.6322%2013.8131%2048.6331%2013.8137C50.0812%2014.6086%2050.9896%2016.1043%2051.026%2017.7437L51.1517%2039.8672L51.1517%2039.8746L51.1519%2039.8821C51.1856%2041.5203%2050.346%2043.0611%2048.9325%2043.9357L29.0918%2056.2117C27.6424%2057.1085%2025.8227%2057.1572%2024.3387%2056.3439L3.85107%2045.1148C2.26984%2044.2481%201.14232%2042.646%201.15293%2041.0494V41.0427L1.153%2018.552C1.15301%2018.5509%201.15302%2018.5499%201.15302%2018.5488C1.16485%2016.9324%202.02611%2015.4289%203.43319%2014.5869Z%22%20fill%3D%22%2318181B%22%20stroke%3D%22url(%23paint0_linear_2595_7426)%22%20stroke-width%3D%222%22%2F%3E%0A%3Cpath%20d%3D%22M37.1528%2017.9209H15.1528C14.6224%2017.9209%2014.1137%2018.1316%2013.7386%2018.5067C13.3635%2018.8818%2013.1528%2019.3905%2013.1528%2019.9209V37.9209C13.1528%2038.4513%2013.3635%2038.96%2013.7386%2039.3351C14.1137%2039.7102%2014.6224%2039.9209%2015.1528%2039.9209H37.1528C37.6833%2039.9209%2038.192%2039.7102%2038.567%2039.3351C38.9421%2038.96%2039.1528%2038.4513%2039.1528%2037.9209V19.9209C39.1528%2019.3905%2038.9421%2018.8818%2038.567%2018.5067C38.192%2018.1316%2037.6833%2017.9209%2037.1528%2017.9209ZM15.1528%2019.9209H37.1528V24.9209H15.1528V19.9209ZM15.1528%2026.9209H22.1528V37.9209H15.1528V26.9209ZM37.1528%2037.9209H24.1528V26.9209H37.1528V37.9209Z%22%20fill%3D%22url(%23paint1_linear_2595_7426)%22%2F%3E%0A%3Cdefs%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2595_7426%22%20x1%3D%220.662695%22%20y1%3D%2218.4025%22%20x2%3D%2251.7209%22%20y2%3D%2244.2212%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%238DEAFF%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23008AA9%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2595_7426%22%20x1%3D%2213.0804%22%20y1%3D%2222.6224%22%20x2%3D%2237.028%22%20y2%3D%2237.847%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%238DEAFF%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%23008AA9%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="examples icon" class="examples-image-color-dark"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2253%22%20height%3D%2258%22%20viewBox%3D%220%200%2053%2058%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M49.1971%2043.7595C49.1113%2043.8209%2049.0231%2043.8796%2048.9325%2043.9357L29.0918%2056.2117C27.6504%2057.1035%2025.8212%2057.1564%2024.3387%2056.3439L3.85107%2045.1148C2.27157%2044.2491%201.14238%2042.6366%201.15291%2041.0494L1.15293%2041.0427L1.153%2018.552C1.15301%2018.5509%201.15302%2018.5499%201.15302%2018.5488C1.16485%2016.9324%202.02611%2015.4289%203.43319%2014.5869L3.43322%2014.587L3.44269%2014.5812L22.9844%202.59084C24.4169%201.73583%2026.2139%201.69824%2027.6729%202.49791L27.6729%202.49792L27.6784%202.50094L48.6303%2013.8121C48.6313%2013.8126%2048.6322%2013.8131%2048.6331%2013.8136C50.0797%2014.6078%2050.9898%2016.1132%2051.026%2017.7438L51.1517%2039.8672L51.1517%2039.8746L51.1519%2039.8821C51.1834%2041.4138%2050.4491%2042.8635%2049.1971%2043.7595Z%22%20fill%3D%22white%22%20stroke%3D%22url(%23paint0_linear_2691_4397)%22%20stroke-width%3D%222%22%2F%3E%0A%3Cpath%20d%3D%22M37.1528%2017.9209H15.1528C14.6224%2017.9209%2014.1137%2018.1316%2013.7386%2018.5067C13.3635%2018.8818%2013.1528%2019.3905%2013.1528%2019.9209V37.9209C13.1528%2038.4513%2013.3635%2038.96%2013.7386%2039.3351C14.1137%2039.7102%2014.6224%2039.9209%2015.1528%2039.9209H37.1528C37.6833%2039.9209%2038.192%2039.7102%2038.567%2039.3351C38.9421%2038.96%2039.1528%2038.4513%2039.1528%2037.9209V19.9209C39.1528%2019.3905%2038.9421%2018.8818%2038.567%2018.5067C38.192%2018.1316%2037.6833%2017.9209%2037.1528%2017.9209V17.9209ZM15.1528%2019.9209H37.1528V24.9209H15.1528V19.9209ZM15.1528%2026.9209H22.1528V37.9209H15.1528V26.9209ZM37.1528%2037.9209H24.1528V26.9209H37.1528V37.9209Z%22%20fill%3D%22url(%23paint1_linear_2691_4397)%22%2F%3E%0A%3Cdefs%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2691_4397%22%20x1%3D%220.662695%22%20y1%3D%2218.4025%22%20x2%3D%2251.7209%22%20y2%3D%2244.2212%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%23D4D4D8%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2371717A%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2691_4397%22%20x1%3D%2213.0804%22%20y1%3D%2222.6224%22%20x2%3D%2237.028%22%20y2%3D%2237.847%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22%23D4D4D8%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2371717A%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="examples icon" class="examples-image-light"> <img src="data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2253%22%20height%3D%2258%22%20viewBox%3D%220%200%2053%2058%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M3.43319%2014.5869L3.43322%2014.587L3.44269%2014.5812L22.9844%202.59084C24.4246%201.73116%2026.2124%201.69742%2027.6729%202.49791L27.6729%202.49792L27.6784%202.50094L48.6303%2013.8121C48.6313%2013.8126%2048.6322%2013.8131%2048.6331%2013.8137C50.0812%2014.6086%2050.9896%2016.1043%2051.026%2017.7437L51.1517%2039.8672L51.1517%2039.8746L51.1519%2039.8821C51.1856%2041.5203%2050.346%2043.0611%2048.9325%2043.9357L29.0918%2056.2117C27.6424%2057.1085%2025.8227%2057.1572%2024.3387%2056.3439L3.85107%2045.1148C2.26984%2044.2481%201.14232%2042.646%201.15293%2041.0494V41.0427L1.153%2018.552C1.15301%2018.5509%201.15302%2018.5499%201.15302%2018.5488C1.16485%2016.9324%202.02611%2015.4289%203.43319%2014.5869Z%22%20fill%3D%22%2318181B%22%20stroke%3D%22url(%23paint0_linear_2595_7182)%22%20stroke-width%3D%222%22%2F%3E%0A%3Cpath%20d%3D%22M37.1528%2017.9209H15.1528C14.6224%2017.9209%2014.1137%2018.1316%2013.7386%2018.5067C13.3635%2018.8818%2013.1528%2019.3905%2013.1528%2019.9209V37.9209C13.1528%2038.4513%2013.3635%2038.96%2013.7386%2039.3351C14.1137%2039.7102%2014.6224%2039.9209%2015.1528%2039.9209H37.1528C37.6833%2039.9209%2038.192%2039.7102%2038.567%2039.3351C38.9421%2038.96%2039.1528%2038.4513%2039.1528%2037.9209V19.9209C39.1528%2019.3905%2038.9421%2018.8818%2038.567%2018.5067C38.192%2018.1316%2037.6833%2017.9209%2037.1528%2017.9209ZM15.1528%2019.9209H37.1528V24.9209H15.1528V19.9209ZM15.1528%2026.9209H22.1528V37.9209H15.1528V26.9209ZM37.1528%2037.9209H24.1528V26.9209H37.1528V37.9209Z%22%20fill%3D%22url(%23paint1_linear_2595_7182)%22%2F%3E%0A%3Cdefs%3E%0A%3ClinearGradient%20id%3D%22paint0_linear_2595_7182%22%20x1%3D%220.662695%22%20y1%3D%2218.4025%22%20x2%3D%2251.7209%22%20y2%3D%2244.2212%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2371717A%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3ClinearGradient%20id%3D%22paint1_linear_2595_7182%22%20x1%3D%2213.0804%22%20y1%3D%2222.6224%22%20x2%3D%2237.028%22%20y2%3D%2237.847%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%0A%3Cstop%20stop-color%3D%22white%22%2F%3E%0A%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2371717A%22%2F%3E%0A%3C%2FlinearGradient%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A" alt="examples icon" class="examples-image-dark"> <div class="dark:text-white flex flex-col space-y text-black"><h3 class="font-semibold text-xl">Examples</h3><p class="dark:text-gray-300 text-gray-700">Explore different way of using Nuxt features and get inspired with our list of examples.</p></div> </a></div></div></div><footer class="bg-white border-gray-200 border-t dark:bg-black dark:border-gray-900 flex h-[70px] items-center relative w-full"><div class="-top-3 absolute flex inset-x-0 items-center justify-center"><a href="https://nuxt.com" target="_blank" aria-label="Nuxt"> <svg xmlns="http://www.w3.org/2000/svg" width="70" height="20" fill="none" viewBox="0 0 70 20"><ellipse cx="34.653" cy="10.421" fill="#fff" class="dark:hidden" rx="34.5" ry="9.5"/><ellipse cx="34.653" cy="10.421" fill="#000" class="dark:block hidden" rx="34.5" ry="9.5"/><path fill="#00dc82" d="M36.06 15.92h6.566a1.18 1.18 0 0 0 1.028-.6 1.21 1.21 0 0 0 0-1.2l-4.41-7.713a1.19 1.19 0 0 0-1.028-.6 1.18 1.18 0 0 0-1.028.6L36.06 8.38l-2.204-3.86a1.2 1.2 0 0 0-1.029-.6 1.18 1.18 0 0 0-1.028.6l-5.487 9.6a1.21 1.21 0 0 0 .434 1.64c.181.106.386.16.595.16h4.12c1.633 0 2.837-.724 3.666-2.137l2.011-3.52 1.078-1.883 3.234 5.658h-4.312zm-4.666-1.884-2.876-.001 4.311-7.542 2.151 3.77-1.44 2.521c-.55.917-1.175 1.252-2.146 1.252"/></svg> </a></div><div class="lg:px-8 mx-auto px-4 sm:px-6 w-full"><div class="flex flex-col gap-3 items-center sm:flex-row sm:justify-between"><div class="flex flex-col-reverse gap-3 items-center sm:flex-row"><span class="dark:text-gray-300 text-gray-700 text-sm">¬© 2016-{{ new Date().getFullYear() }} Nuxt - MIT License</span></div><ul class="flex gap-3 items-center justify-end"><li><a href="https://chat.nuxt.dev" target="_blank" class="dark:hover:text-white dark:text-gray-300 focus-visible:ring-2 hover:text-black text-gray-700"> <span class="sr-only">Nuxt Discord Server</span> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="12" fill="none" viewBox="0 0 16 12"><path fill="currentColor" d="M13.37 1.073a.04.04 0 0 0-.019-.018 12.2 12.2 0 0 0-3.053-.966.05.05 0 0 0-.028.003.05.05 0 0 0-.021.02 9 9 0 0 0-.38.797 11.2 11.2 0 0 0-3.43 0 8 8 0 0 0-.386-.797.047.047 0 0 0-.05-.024c-1.053.186-2.08.511-3.052.967a.04.04 0 0 0-.02.018C.986 4.037.453 6.929.715 9.785a.05.05 0 0 0 .02.035 12.4 12.4 0 0 0 3.745 1.932.05.05 0 0 0 .053-.017q.434-.604.766-1.272a.05.05 0 0 0-.026-.067 8 8 0 0 1-1.17-.57.05.05 0 0 1-.024-.039.05.05 0 0 1 .019-.042q.119-.09.232-.186a.05.05 0 0 1 .049-.006c2.455 1.143 5.112 1.143 7.538 0a.05.05 0 0 1 .05.006q.112.095.232.186a.05.05 0 0 1-.004.081 7.6 7.6 0 0 1-1.17.569.1.1 0 0 0-.018.011.05.05 0 0 0-.008.057q.337.664.765 1.271a.05.05 0 0 0 .053.018A12.3 12.3 0 0 0 15.57 9.82a.05.05 0 0 0 .02-.035c.312-3.301-.525-6.17-2.219-8.712M5.666 8.046c-.739 0-1.348-.693-1.348-1.543S4.914 4.96 5.665 4.96c.757 0 1.36.699 1.348 1.543 0 .85-.597 1.543-1.348 1.543m4.985 0c-.74 0-1.348-.693-1.348-1.543S9.899 4.96 10.65 4.96c.756 0 1.36.699 1.348 1.543 0 .85-.592 1.543-1.348 1.543"/></svg> </a></li><li><a href="https://twitter.nuxt.dev" target="_blank" class="dark:hover:text-white dark:text-gray-300 focus-visible:ring-2 hover:text-black text-gray-700"> <span class="sr-only">Nuxt Twitter</span> <svg xmlns="http://www.w3.org/2000/svg" width="18" height="14" fill="none" viewBox="0 0 18 14"><path fill="currentColor" d="M17.486 1.754a7 7 0 0 1-1.967.534A3.44 3.44 0 0 0 17.028.396c-.672.4-1.408.682-2.175.833a3.417 3.417 0 0 0-5.834 3.117A9.7 9.7 0 0 1 1.978.771c-.301.525-.46 1.12-.459 1.725a3.41 3.41 0 0 0 1.517 2.842 3.4 3.4 0 0 1-1.55-.425v.041a3.42 3.42 0 0 0 2.75 3.334c-.297.09-.606.138-.917.141a4 4 0 0 1-.641-.058 3.425 3.425 0 0 0 3.191 2.367 6.85 6.85 0 0 1-5.05 1.416 9.64 9.64 0 0 0 5.242 1.542 9.66 9.66 0 0 0 9.758-9.733V3.52a7 7 0 0 0 1.667-1.767"/></svg> </a></li><li><a href="https://github.nuxt.dev" target="_blank" class="dark:hover:text-white dark:text-gray-300 focus-visible:ring-2 hover:text-black text-gray-700"> <span class="sr-only">Nuxt GitHub Repository</span> <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="none" viewBox="0 0 18 18"><path fill="currentColor" d="M9.153.793a8.334 8.334 0 0 0-2.636 16.24c.417.072.573-.178.573-.396 0-.198-.01-.854-.01-1.552-2.094.385-2.636-.51-2.802-.98a3 3 0 0 0-.854-1.177c-.292-.156-.709-.541-.01-.552a1.67 1.67 0 0 1 1.28.854 1.78 1.78 0 0 0 2.427.688c.036-.424.225-.82.532-1.115-1.854-.208-3.792-.927-3.792-4.114a3.24 3.24 0 0 1 .854-2.24A3 3 0 0 1 4.8 4.241s.697-.219 2.291.854a7.86 7.86 0 0 1 4.167 0c1.594-1.083 2.292-.854 2.292-.854.308.698.338 1.488.083 2.208.562.61.868 1.411.854 2.24 0 3.198-1.948 3.906-3.802 4.114a1.97 1.97 0 0 1 .562 1.542c0 1.115-.01 2.01-.01 2.292 0 .218.156.479.573.396A8.338 8.338 0 0 0 9.153.793"/></svg> </a></li></ul></div></div></footer></div>
 </template>
+
 <style scoped>
 @media (prefers-color-scheme:light){.get-started-gradient-border{background:linear-gradient(90deg,#fff,#fff),linear-gradient(90deg,#00dc82,#1de0b1,#36e4da)}.gradient-border-modules{background:linear-gradient(var(--gradient-angle),#f7d14c,rgba(247,209,76,.6),hsla(0,0%,100%,.8),#f7d14c)}.gradient-border-examples{background:linear-gradient(var(--gradient-angle),#8deaff,rgba(141,234,255,.6),hsla(0,0%,100%,.8),#8deaff)}.gradient-border-documentation{background:linear-gradient(var(--gradient-angle),#00dc82,rgba(0,220,130,.6),hsla(0,0%,100%,.8),#00dc82)}}@media (prefers-color-scheme:dark){.get-started-gradient-border{background:linear-gradient(90deg,#18181b,#18181b),linear-gradient(90deg,#00dc82,#1de0b1,#36e4da)}.gradient-border-modules{background:linear-gradient(var(--gradient-angle),#f7d14c,#a38108,hsla(0,0%,100%,.3),#a38108)}.gradient-border-examples{background:linear-gradient(var(--gradient-angle),#8deaff,#008aa9,hsla(0,0%,100%,.3),#008aa9)}.gradient-border-documentation{background:linear-gradient(var(--gradient-angle),#00dc82,#003f25,hsla(0,0%,100%,.2),#003f25)}}.get-started-gradient-border{background-clip:padding-box,border-box;background-origin:padding-box,border-box;border-color:transparent;border-radius:12px;border-width:1px}.get-started-gradient-border:hover>:is(.get-started-gradient-left,.get-started-gradient-right){opacity:.2}.get-started-gradient-left,.get-started-gradient-right{opacity:0}.gradient-border{border-radius:12px;left:0;opacity:0;position:absolute;top:0;transform:translate(-1px,-1px);width:calc(100% + 2px);z-index:-1}.gradient-border-rect{height:calc(100% + 2px)}@media (min-width:1024px){.gradient-border-rect{height:calc(100% + 1px)}}.gradient-border-square{height:calc(100% + 2px)}.modules-gradient-right{opacity:0}.documentation-container:hover>.gradient-border,.examples-container:hover>.gradient-border,.modules-container:hover>.gradient-border{animation:gradient-rotate 5s linear 0s infinite reverse;opacity:1;transition:all .3s linear}.examples-container:hover>.examples-gradient-right,.modules-container:hover>.modules-gradient-right{opacity:.2}.examples-gradient-right{opacity:0}.documentation-image-color-dark,.documentation-image-color-light,.examples-image-color-dark,.examples-image-color-light,.modules-image-color-dark,.modules-image-color-light{display:none}@media (prefers-color-scheme:light){.modules-image-light{display:block}.modules-container:hover>a>.modules-image-light,.modules-image-dark{display:none}.examples-image-light,.modules-container:hover>a>.modules-image-color-light{display:block}.examples-container:hover>a>.examples-image-light,.examples-image-dark{display:none}.documentation-image-light,.examples-container:hover>a>.examples-image-color-light{display:block}.documentation-container:hover>a>div>.documentation-image-light,.documentation-image-dark{display:none}.documentation-container:hover>a>div>.documentation-image-color-light{display:block}}@media (prefers-color-scheme:dark){.modules-image-dark{display:block}.modules-image-light{display:none}.modules-container:hover>a>.modules-image-color-dark{display:block}.modules-container:hover>a>.modules-image-dark{display:none}.examples-image-dark{display:block}.examples-image-light{display:none}.examples-container:hover>a>.examples-image-color-dark{display:block}.examples-container:hover>a>.examples-image-dark{display:none}.documentation-image-dark{display:block}.documentation-image-light{display:none}.documentation-container:hover>a>div>.documentation-image-color-dark{display:block}.documentation-container:hover>a>div>.documentation-image-dark{display:none}}.sr-only{height:1px;margin:-1px;overflow:hidden;padding:0;width:1px;clip:rect(0,0,0,0);border-width:0;white-space:nowrap}.absolute,.sr-only{position:absolute}.relative{position:relative}.inset-x-0{left:0;right:0}.inset-y-0{bottom:0;top:0}.-top-\[58px\]{top:-58px}.-top-3{top:-.75rem}.left-0{left:0}.right-0{right:0}.z-1{z-index:1}.z-10{z-index:10}.order-last{order:9999}.grid{display:grid}.col-span-2{grid-column:span 2/span 2}.row-span-2{grid-row:span 2/span 2}.grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.mx-auto{margin-left:auto;margin-right:auto}.mb-2{margin-bottom:.5rem}.hidden{display:none}.h-\[70px\]{height:70px}.h-32{height:8rem}.max-w-\[960px\]{max-width:960px}.min-h-screen{min-height:100vh}.w-\[20\%\]{width:20%}.w-full{width:100%}.flex{display:flex}.flex-1{flex:1 1 0%}.flex-col{flex-direction:column}.flex-col-reverse{flex-direction:column-reverse}.place-content-center{place-content:center}.items-center{align-items:center}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.gap-3{gap:.75rem}.gap-6{gap:1.5rem}.gap-x-4{-moz-column-gap:1rem;column-gap:1rem}.gap-y-16{row-gap:4rem}.gap-y-2{row-gap:.5rem}.gap-y-4{row-gap:1rem}.border{border-width:1px}.border-t{border-top-width:1px}.border-gray-200{--un-border-opacity:1;border-color:rgb(224 224 224/var(--un-border-opacity))}.hover\:border-transparent:hover{border-color:transparent}.rounded{border-radius:.25rem}.rounded-xl{border-radius:.75rem}.bg-gray-100{--un-bg-opacity:1;background-color:rgb(238 238 238/var(--un-bg-opacity))}.bg-white{--un-bg-opacity:1;background-color:rgb(255 255 255/var(--un-bg-opacity))}.from-blue-400{--un-gradient-from-position:0%;--un-gradient-from:rgb(96 165 250/var(--un-from-opacity,1)) var(--un-gradient-from-position);--un-gradient-to-position:100%;--un-gradient-to:rgba(96,165,250,0) var(--un-gradient-to-position);--un-gradient-stops:var(--un-gradient-from),var(--un-gradient-to)}.from-green-400{--un-gradient-from-position:0%;--un-gradient-from:rgb(55 233 144/var(--un-from-opacity,1)) var(--un-gradient-from-position);--un-gradient-to-position:100%;--un-gradient-to:rgba(55,233,144,0) var(--un-gradient-to-position);--un-gradient-stops:var(--un-gradient-from),var(--un-gradient-to)}.from-yellow-400{--un-gradient-from-position:0%;--un-gradient-from:rgb(250 204 21/var(--un-from-opacity,1)) var(--un-gradient-from-position);--un-gradient-to-position:100%;--un-gradient-to:rgba(250,204,21,0) var(--un-gradient-to-position);--un-gradient-stops:var(--un-gradient-from),var(--un-gradient-to)}.to-transparent{--un-gradient-to-position:100%;--un-gradient-to:transparent var(--un-gradient-to-position)}.bg-gradient-to-l{--un-gradient-shape:to left in oklch;--un-gradient:var(--un-gradient-shape),var(--un-gradient-stops)}.bg-gradient-to-l,.bg-gradient-to-r{background-image:linear-gradient(var(--un-gradient))}.bg-gradient-to-r{--un-gradient-shape:to right in oklch;--un-gradient:var(--un-gradient-shape),var(--un-gradient-stops)}.p-1{padding:.25rem}.px-4{padding-left:1rem;padding-right:1rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.py-14{padding-bottom:3.5rem;padding-top:3.5rem}.py-6{padding-top:1.5rem}.pb-6,.py-6{padding-bottom:1.5rem}.pt-\[58px\]{padding-top:58px}.text-center{text-align:center}.text-2xl{font-size:1.5rem;line-height:2rem}.text-4xl{font-size:2.25rem;line-height:2.5rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-black{--un-text-opacity:1;color:rgb(0 0 0/var(--un-text-opacity))}.text-gray-700{--un-text-opacity:1;color:rgb(66 66 66/var(--un-text-opacity))}.hover\:text-black:hover{--un-text-opacity:1;color:rgb(0 0 0/var(--un-text-opacity))}.font-bold{font-weight:700}.font-semibold{font-weight:600}.font-mono{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.focus-visible\:ring-2:focus-visible{--un-ring-width:2px;--un-ring-offset-shadow:var(--un-ring-inset) 0 0 0 var(--un-ring-offset-width) var(--un-ring-offset-color);--un-ring-shadow:var(--un-ring-inset) 0 0 0 calc(var(--un-ring-width) + var(--un-ring-offset-width)) var(--un-ring-color);box-shadow:var(--un-ring-offset-shadow),var(--un-ring-shadow),var(--un-shadow)}.transition-opacity{transition-duration:.15s;transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration-300{transition-duration:.3s}@media (prefers-color-scheme:dark){.dark\:block{display:block}.dark\:hidden{display:none}.dark\:border-gray-900{--un-border-opacity:1;border-color:rgb(24 24 27/var(--un-border-opacity))}.dark\:border-transparent{border-color:transparent}.dark\:border-none{border-style:none}.dark\:bg-black{--un-bg-opacity:1;background-color:rgb(0 0 0/var(--un-bg-opacity))}.dark\:bg-gray-900{--un-bg-opacity:1;background-color:rgb(24 24 27/var(--un-bg-opacity))}.dark\:bg-white\/10{background-color:#ffffff1a}.dark\:text-gray-300{--un-text-opacity:1;color:rgb(189 189 189/var(--un-text-opacity))}.dark\:hover\:text-white:hover,.dark\:text-white{--un-text-opacity:1;color:rgb(255 255 255/var(--un-text-opacity))}}@media (min-width:640px){.sm\:col-span-1{grid-column:span 1/span 1}.sm\:h-34{height:8.5rem}.sm\:min-h-\[220px\]{min-height:220px}.sm\:flex-row{flex-direction:row}.sm\:justify-between{justify-content:space-between}.sm\:px-28{padding-left:7rem;padding-right:7rem}.sm\:px-6{padding-left:1.5rem;padding-right:1.5rem}.sm\:text-5xl{font-size:3rem;line-height:1}.sm\:text-base{font-size:1rem;line-height:1.5rem}}@media (min-width:768px){.md\:min-h-\[180px\]{min-height:180px}}@media (min-width:1024px){.lg\:order-none{order:0}.lg\:col-span-10{grid-column:span 10/span 10}.lg\:col-span-4{grid-column:span 4/span 4}.lg\:col-span-6{grid-column:span 6/span 6}.lg\:grid-cols-10{grid-template-columns:repeat(10,minmax(0,1fr))}.lg\:min-h-min{min-height:-moz-min-content;min-height:min-content}.lg\:flex-col{flex-direction:column}.lg\:px-8{padding-left:2rem;padding-right:2rem}.lg\:py-7{padding-bottom:1.75rem;padding-top:1.75rem}}
 </style>
diff --git a/node_modules/nuxt/dist/app/components/welcome.vue.d.ts b/node_modules/nuxt/dist/app/components/welcome.vue.d.ts
new file mode 100644
index 0000000..94c6c42
--- /dev/null
+++ b/node_modules/nuxt/dist/app/components/welcome.vue.d.ts
@@ -0,0 +1,10 @@
+declare const _default: import("vue").DefineComponent<{}, {
+    appName: string;
+    version: string;
+    title: string;
+    readDocs: string;
+    followTwitter: string;
+    starGitHub: string;
+    $props: any;
+}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export default _default;
diff --git a/node_modules/nuxt/dist/app/composables/asyncData.d.ts b/node_modules/nuxt/dist/app/composables/asyncData.d.ts
index 902d774..7fab118 100644
--- a/node_modules/nuxt/dist/app/composables/asyncData.d.ts
+++ b/node_modules/nuxt/dist/app/composables/asyncData.d.ts
@@ -1,7 +1,7 @@
-import type { MultiWatchSources, Ref } from 'vue';
+import type { MaybeRefOrGetter, MultiWatchSources, Ref } from 'vue';
+import type { DedupeOption, DefaultAsyncDataErrorValue, DefaultAsyncDataValue } from 'nuxt/app/defaults';
 import type { NuxtApp } from '../nuxt.js';
 import type { NuxtError } from './error.js';
-import type { DedupeOption, DefaultAsyncDataErrorValue, DefaultAsyncDataValue } from '#app/defaults';
 export type AsyncDataRequestStatus = 'idle' | 'pending' | 'success' | 'error';
 export type _Transform<Input = any, Output = any> = (input: Input) => Output | Promise<Output>;
 export type PickFrom<T, K extends Array<string>> = T extends Array<any> ? T : T extends Record<string, any> ? keyof T extends K[number] ? T : K[number] extends never ? T : Pick<T, K[number]> : T;
@@ -9,6 +9,7 @@ export type KeysOf<T> = Array<T extends T ? keyof T extends string ? keyof T : n
 export type KeyOfRes<Transform extends _Transform> = KeysOf<ReturnType<Transform>>;
 export type { MultiWatchSources };
 export type NoInfer<T> = [T][T extends any ? 0 : never];
+export type AsyncDataRefreshCause = 'initial' | 'refresh:hook' | 'refresh:manual' | 'watch';
 export interface AsyncDataOptions<ResT, DataT = ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DefaultAsyncDataValue> {
     /**
      * Whether to fetch on the server side.
@@ -29,7 +30,9 @@ export interface AsyncDataOptions<ResT, DataT = ResT, PickKeys extends KeysOf<Da
      * An `undefined` return value will trigger a fetch.
      * Default is `key => nuxt.isHydrating ? nuxt.payload.data[key] : nuxt.static.data[key]` which only caches data when payloadExtraction is enabled.
      */
-    getCachedData?: (key: string, nuxtApp: NuxtApp) => NoInfer<DataT> | undefined;
+    getCachedData?: (key: string, nuxtApp: NuxtApp, context: {
+        cause: AsyncDataRefreshCause;
+    }) => NoInfer<DataT> | undefined;
     /**
      * A function that can be used to alter handler function result after resolving.
      * Do not use it along with the `pick` option.
@@ -60,7 +63,6 @@ export interface AsyncDataOptions<ResT, DataT = ResT, PickKeys extends KeysOf<Da
     dedupe?: 'cancel' | 'defer';
 }
 export interface AsyncDataExecuteOptions {
-    _initial?: boolean;
     /**
      * Force a refresh, even if there is already a pending request. Previous requests will
      * not be cancelled, but their result will not affect the data/pending state - and any
@@ -70,12 +72,12 @@ export interface AsyncDataExecuteOptions {
      * Boolean values will be removed in a future release.
      */
     dedupe?: DedupeOption;
+    cause?: AsyncDataRefreshCause;
+    /** @internal */
+    cachedData?: any;
 }
 export interface _AsyncData<DataT, ErrorT> {
     data: Ref<DataT>;
-    /**
-     * @deprecated Use `status` instead. This may be removed in a future major version.
-     */
     pending: Ref<boolean>;
     refresh: (opts?: AsyncDataExecuteOptions) => Promise<void>;
     execute: (opts?: AsyncDataExecuteOptions) => Promise<void>;
@@ -92,34 +94,34 @@ export type AsyncData<Data, Error> = _AsyncData<Data, Error> & Promise<_AsyncDat
  * @param options customize the behavior of useAsyncData
  */
 export declare function useAsyncData<ResT, NuxtErrorDataT = unknown, DataT = ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DefaultAsyncDataValue>(handler: (ctx?: NuxtApp) => Promise<ResT>, options?: AsyncDataOptions<ResT, DataT, PickKeys, DefaultT>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, (NuxtErrorDataT extends Error | NuxtError ? NuxtErrorDataT : NuxtError<NuxtErrorDataT>) | DefaultAsyncDataErrorValue>;
+export declare function useAsyncData<ResT, NuxtErrorDataT = unknown, DataT = ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DataT>(handler: (ctx?: NuxtApp) => Promise<ResT>, options?: AsyncDataOptions<ResT, DataT, PickKeys, DefaultT>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, (NuxtErrorDataT extends Error | NuxtError ? NuxtErrorDataT : NuxtError<NuxtErrorDataT>) | DefaultAsyncDataErrorValue>;
 /**
  * Provides access to data that resolves asynchronously in an SSR-friendly composable.
  * See {@link https://nuxt.com/docs/api/composables/use-async-data}
+ * @param key A unique key to ensure that data fetching can be properly de-duplicated across requests.
  * @param handler An asynchronous function that must return a truthy value (for example, it should not be `undefined` or `null`) or the request may be duplicated on the client side.
  * @param options customize the behavior of useAsyncData
  */
-export declare function useAsyncData<ResT, NuxtErrorDataT = unknown, DataT = ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DataT>(handler: (ctx?: NuxtApp) => Promise<ResT>, options?: AsyncDataOptions<ResT, DataT, PickKeys, DefaultT>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, (NuxtErrorDataT extends Error | NuxtError ? NuxtErrorDataT : NuxtError<NuxtErrorDataT>) | DefaultAsyncDataErrorValue>;
+export declare function useAsyncData<ResT, NuxtErrorDataT = unknown, DataT = ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DefaultAsyncDataValue>(key: MaybeRefOrGetter<string>, handler: (ctx?: NuxtApp) => Promise<ResT>, options?: AsyncDataOptions<ResT, DataT, PickKeys, DefaultT>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, (NuxtErrorDataT extends Error | NuxtError ? NuxtErrorDataT : NuxtError<NuxtErrorDataT>) | DefaultAsyncDataErrorValue>;
+export declare function useAsyncData<ResT, NuxtErrorDataT = unknown, DataT = ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DataT>(key: MaybeRefOrGetter<string>, handler: (ctx?: NuxtApp) => Promise<ResT>, options?: AsyncDataOptions<ResT, DataT, PickKeys, DefaultT>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, (NuxtErrorDataT extends Error | NuxtError ? NuxtErrorDataT : NuxtError<NuxtErrorDataT>) | DefaultAsyncDataErrorValue>;
 /**
  * Provides access to data that resolves asynchronously in an SSR-friendly composable.
- * See {@link https://nuxt.com/docs/api/composables/use-async-data}
- * @param key A unique key to ensure that data fetching can be properly de-duplicated across requests.
+ * See {@link https://nuxt.com/docs/api/composables/use-lazy-async-data}
+ * @since 3.0.0
  * @param handler An asynchronous function that must return a truthy value (for example, it should not be `undefined` or `null`) or the request may be duplicated on the client side.
- * @param options customize the behavior of useAsyncData
+ * @param options customize the behavior of useLazyAsyncData
  */
-export declare function useAsyncData<ResT, NuxtErrorDataT = unknown, DataT = ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DefaultAsyncDataValue>(key: string, handler: (ctx?: NuxtApp) => Promise<ResT>, options?: AsyncDataOptions<ResT, DataT, PickKeys, DefaultT>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, (NuxtErrorDataT extends Error | NuxtError ? NuxtErrorDataT : NuxtError<NuxtErrorDataT>) | DefaultAsyncDataErrorValue>;
+export declare function useLazyAsyncData<ResT, NuxtErrorDataT = unknown, DataT = ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DefaultAsyncDataValue>(handler: (ctx?: NuxtApp) => Promise<ResT>, options?: Omit<AsyncDataOptions<ResT, DataT, PickKeys, DefaultT>, 'lazy'>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, (NuxtErrorDataT extends Error | NuxtError ? NuxtErrorDataT : NuxtError<NuxtErrorDataT>) | DefaultAsyncDataErrorValue>;
+export declare function useLazyAsyncData<ResT, NuxtErrorDataT = unknown, DataT = ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DataT>(handler: (ctx?: NuxtApp) => Promise<ResT>, options?: Omit<AsyncDataOptions<ResT, DataT, PickKeys, DefaultT>, 'lazy'>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, (NuxtErrorDataT extends Error | NuxtError ? NuxtErrorDataT : NuxtError<NuxtErrorDataT>) | DefaultAsyncDataErrorValue>;
 /**
  * Provides access to data that resolves asynchronously in an SSR-friendly composable.
- * See {@link https://nuxt.com/docs/api/composables/use-async-data}
+ * See {@link https://nuxt.com/docs/api/composables/use-lazy-async-data}
  * @param key A unique key to ensure that data fetching can be properly de-duplicated across requests.
  * @param handler An asynchronous function that must return a truthy value (for example, it should not be `undefined` or `null`) or the request may be duplicated on the client side.
- * @param options customize the behavior of useAsyncData
+ * @param options customize the behavior of useLazyAsyncData
  */
-export declare function useAsyncData<ResT, NuxtErrorDataT = unknown, DataT = ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DataT>(key: string, handler: (ctx?: NuxtApp) => Promise<ResT>, options?: AsyncDataOptions<ResT, DataT, PickKeys, DefaultT>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, (NuxtErrorDataT extends Error | NuxtError ? NuxtErrorDataT : NuxtError<NuxtErrorDataT>) | DefaultAsyncDataErrorValue>;
-/** @since 3.0.0 */
-export declare function useLazyAsyncData<ResT, DataE = Error, DataT = ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DefaultAsyncDataValue>(handler: (ctx?: NuxtApp) => Promise<ResT>, options?: Omit<AsyncDataOptions<ResT, DataT, PickKeys, DefaultT>, 'lazy'>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, DataE | DefaultAsyncDataValue>;
-export declare function useLazyAsyncData<ResT, DataE = Error, DataT = ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DataT>(handler: (ctx?: NuxtApp) => Promise<ResT>, options?: Omit<AsyncDataOptions<ResT, DataT, PickKeys, DefaultT>, 'lazy'>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, DataE | DefaultAsyncDataValue>;
-export declare function useLazyAsyncData<ResT, DataE = Error, DataT = ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DefaultAsyncDataValue>(key: string, handler: (ctx?: NuxtApp) => Promise<ResT>, options?: Omit<AsyncDataOptions<ResT, DataT, PickKeys, DefaultT>, 'lazy'>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, DataE | DefaultAsyncDataValue>;
-export declare function useLazyAsyncData<ResT, DataE = Error, DataT = ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DataT>(key: string, handler: (ctx?: NuxtApp) => Promise<ResT>, options?: Omit<AsyncDataOptions<ResT, DataT, PickKeys, DefaultT>, 'lazy'>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, DataE | DefaultAsyncDataValue>;
+export declare function useLazyAsyncData<ResT, NuxtErrorDataT = unknown, DataT = ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DefaultAsyncDataValue>(key: MaybeRefOrGetter<string>, handler: (ctx?: NuxtApp) => Promise<ResT>, options?: Omit<AsyncDataOptions<ResT, DataT, PickKeys, DefaultT>, 'lazy'>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, (NuxtErrorDataT extends Error | NuxtError ? NuxtErrorDataT : NuxtError<NuxtErrorDataT>) | DefaultAsyncDataErrorValue>;
+export declare function useLazyAsyncData<ResT, NuxtErrorDataT = unknown, DataT = ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DataT>(key: MaybeRefOrGetter<string>, handler: (ctx?: NuxtApp) => Promise<ResT>, options?: Omit<AsyncDataOptions<ResT, DataT, PickKeys, DefaultT>, 'lazy'>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, (NuxtErrorDataT extends Error | NuxtError ? NuxtErrorDataT : NuxtError<NuxtErrorDataT>) | DefaultAsyncDataErrorValue>;
 /** @since 3.1.0 */
 export declare function useNuxtData<DataT = any>(key: string): {
     data: Ref<DataT | DefaultAsyncDataValue>;
@@ -128,3 +130,11 @@ export declare function useNuxtData<DataT = any>(key: string): {
 export declare function refreshNuxtData(keys?: string | string[]): Promise<void>;
 /** @since 3.0.0 */
 export declare function clearNuxtData(keys?: string | string[] | ((key: string) => boolean)): void;
+export type CreatedAsyncData<ResT, NuxtErrorDataT = unknown, DataT = ResT, DefaultT = undefined> = Omit<_AsyncData<DataT | DefaultT, (NuxtErrorDataT extends Error | NuxtError ? NuxtErrorDataT : NuxtError<NuxtErrorDataT>)>, 'clear' | 'refresh'> & {
+    _off: () => void;
+    _hash?: Record<string, string | undefined>;
+    _default: () => unknown;
+    _init: boolean;
+    _deps: number;
+    _execute: (opts?: AsyncDataExecuteOptions) => Promise<void>;
+};
diff --git a/node_modules/nuxt/dist/app/composables/asyncData.js b/node_modules/nuxt/dist/app/composables/asyncData.js
index aa995f3..f28d4d1 100644
--- a/node_modules/nuxt/dist/app/composables/asyncData.js
+++ b/node_modules/nuxt/dist/app/composables/asyncData.js
@@ -1,119 +1,74 @@
-import { computed, getCurrentInstance, getCurrentScope, onBeforeMount, onScopeDispose, onServerPrefetch, onUnmounted, ref, shallowRef, toRef, unref, watch } from "vue";
+import { computed, getCurrentInstance, getCurrentScope, inject, isShallow, nextTick, onBeforeMount, onScopeDispose, onServerPrefetch, onUnmounted, ref, shallowRef, toRef, toValue, unref, watch } from "vue";
+import { captureStackTrace } from "errx";
+import { debounce } from "perfect-debounce";
+import { hash } from "ohash";
 import { useNuxtApp } from "../nuxt.js";
 import { toArray } from "../utils.js";
+import { clientOnlySymbol } from "../components/client-only.js";
 import { createError } from "./error.js";
 import { onNuxtReady } from "./ready.js";
-import { asyncDataDefaults, resetAsyncDataToUndefined } from "#build/nuxt.config.mjs";
+import { asyncDataDefaults, granularCachedData, pendingWhenIdle, purgeCachedData, resetAsyncDataToUndefined } from "#build/nuxt.config.mjs";
 const isDefer = (dedupe) => dedupe === "defer" || dedupe === false;
 export function useAsyncData(...args) {
   const autoKey = typeof args[args.length - 1] === "string" ? args.pop() : void 0;
-  if (typeof args[0] !== "string") {
+  if (_isAutoKeyNeeded(args[0], args[1])) {
     args.unshift(autoKey);
   }
-  let [key, _handler, options = {}] = args;
-  if (typeof key !== "string") {
-    throw new TypeError("[nuxt] [asyncData] key must be a string.");
+  let [_key, _handler, options = {}] = args;
+  const key = computed(() => toValue(_key));
+  if (typeof key.value !== "string") {
+    throw new TypeError("[nuxt] [useAsyncData] key must be a string.");
   }
   if (typeof _handler !== "function") {
-    throw new TypeError("[nuxt] [asyncData] handler must be a function.");
+    throw new TypeError("[nuxt] [useAsyncData] handler must be a function.");
   }
   const nuxtApp = useNuxtApp();
-  const handler = import.meta.client || !import.meta.prerender || !nuxtApp.ssrContext?._sharedPrerenderCache ? _handler : () => {
-    const value = nuxtApp.ssrContext._sharedPrerenderCache.get(key);
-    if (value) {
-      return value;
-    }
-    const promise = Promise.resolve().then(() => nuxtApp.runWithContext(_handler));
-    nuxtApp.ssrContext._sharedPrerenderCache.set(key, promise);
-    return promise;
-  };
-  const getDefault = () => asyncDataDefaults.value;
-  const getDefaultCachedData = () => nuxtApp.isHydrating ? nuxtApp.payload.data[key] : nuxtApp.static.data[key];
-  options.server = options.server ?? true;
-  options.default = options.default ?? getDefault;
-  options.getCachedData = options.getCachedData ?? getDefaultCachedData;
-  options.lazy = options.lazy ?? false;
-  options.immediate = options.immediate ?? true;
-  options.deep = options.deep ?? asyncDataDefaults.deep;
-  options.dedupe = options.dedupe ?? "cancel";
+  options.server ??= true;
+  options.default ??= getDefault;
+  options.getCachedData ??= getDefaultCachedData;
+  options.lazy ??= false;
+  options.immediate ??= true;
+  options.deep ??= asyncDataDefaults.deep;
+  options.dedupe ??= "cancel";
+  const functionName = options._functionName || "useAsyncData";
   if (import.meta.dev && typeof options.dedupe === "boolean") {
-    console.warn("[nuxt] `boolean` values are deprecated for the `dedupe` option of `useAsyncData` and will be removed in the future. Use 'cancel' or 'defer' instead.");
-  }
-  const initialCachedData = options.getCachedData(key, nuxtApp);
-  const hasCachedData = initialCachedData != null;
-  if (!nuxtApp._asyncData[key] || !options.immediate) {
-    nuxtApp.payload._errors[key] ??= asyncDataDefaults.errorValue;
-    const _ref = options.deep ? ref : shallowRef;
-    nuxtApp._asyncData[key] = {
-      data: _ref(hasCachedData ? initialCachedData : options.default()),
-      pending: ref(!hasCachedData),
-      error: toRef(nuxtApp.payload._errors, key),
-      status: ref("idle"),
-      _default: options.default
-    };
+    console.warn(`[nuxt] \`boolean\` values are deprecated for the \`dedupe\` option of \`${functionName}\` and will be removed in the future. Use 'cancel' or 'defer' instead.`);
   }
-  const asyncData = { ...nuxtApp._asyncData[key] };
-  delete asyncData._default;
-  asyncData.refresh = asyncData.execute = (opts = {}) => {
-    if (nuxtApp._asyncDataPromises[key]) {
-      if (isDefer(opts.dedupe ?? options.dedupe)) {
-        return nuxtApp._asyncDataPromises[key];
-      }
-      nuxtApp._asyncDataPromises[key].cancelled = true;
+  const currentData = nuxtApp._asyncData[key.value];
+  if (isDev && currentData) {
+    const warnings = [];
+    const values = createHash(_handler, options);
+    if (values.handler !== currentData._hash?.handler) {
+      warnings.push(`different handler`);
     }
-    if (opts._initial || nuxtApp.isHydrating && opts._initial !== false) {
-      const cachedData = opts._initial ? initialCachedData : options.getCachedData(key, nuxtApp);
-      if (cachedData != null) {
-        return Promise.resolve(cachedData);
+    for (const opt of ["transform", "pick", "getCachedData"]) {
+      if (values[opt] !== currentData._hash[opt]) {
+        warnings.push(`different \`${opt}\` option`);
       }
     }
-    asyncData.pending.value = true;
-    asyncData.status.value = "pending";
-    const promise = new Promise(
-      (resolve, reject) => {
-        try {
-          resolve(handler(nuxtApp));
-        } catch (err) {
-          reject(err);
-        }
-      }
-    ).then(async (_result) => {
-      if (promise.cancelled) {
-        return nuxtApp._asyncDataPromises[key];
-      }
-      let result = _result;
-      if (options.transform) {
-        result = await options.transform(_result);
-      }
-      if (options.pick) {
-        result = pick(result, options.pick);
-      }
-      if (import.meta.dev && import.meta.server && typeof result === "undefined") {
-        console.warn(`[nuxt] \`${options._functionName || "useAsyncData"}\` must return a value (it should not be \`undefined\`) or the request may be duplicated on the client side.`);
-      }
-      nuxtApp.payload.data[key] = result;
-      asyncData.data.value = result;
-      asyncData.error.value = asyncDataDefaults.errorValue;
-      asyncData.status.value = "success";
-    }).catch((error) => {
-      if (promise.cancelled) {
-        return nuxtApp._asyncDataPromises[key];
-      }
-      asyncData.error.value = createError(error);
-      asyncData.data.value = unref(options.default());
-      asyncData.status.value = "error";
-    }).finally(() => {
-      if (promise.cancelled) {
-        return;
-      }
-      asyncData.pending.value = false;
-      delete nuxtApp._asyncDataPromises[key];
-    });
-    nuxtApp._asyncDataPromises[key] = promise;
-    return nuxtApp._asyncDataPromises[key];
-  };
-  asyncData.clear = () => clearNuxtDataByKey(nuxtApp, key);
-  const initialFetch = () => asyncData.refresh({ _initial: true });
+    if (currentData._default.toString() !== options.default.toString()) {
+      warnings.push(`different \`default\` value`);
+    }
+    if (options.deep && isShallow(currentData.data)) {
+      warnings.push(`mismatching \`deep\` option`);
+    }
+    if (warnings.length) {
+      const distURL = import.meta.url.replace(/\/app\/.*$/, "/app");
+      const { source, line, column } = captureStackTrace().find((entry) => !entry.source.startsWith(distURL)) ?? {};
+      const explanation = source ? ` (used at ${source.replace(/^file:\/\//, "")}:${line}:${column})` : "";
+      console.warn(`[nuxt] [${functionName}] Incompatible options detected for "${key.value}"${explanation}:
+${warnings.map((w) => `- ${w}`).join("\n")}
+You can use a different key or move the call to a composable to ensure the options are shared across calls.`);
+    }
+  }
+  const initialFetchOptions = { cause: "initial", dedupe: options.dedupe };
+  if (!nuxtApp._asyncData[key.value]?._init) {
+    initialFetchOptions.cachedData = options.getCachedData(key.value, nuxtApp, { cause: "initial" });
+    nuxtApp._asyncData[key.value] = createAsyncData(nuxtApp, key.value, _handler, options, initialFetchOptions.cachedData);
+  }
+  const asyncData = nuxtApp._asyncData[key.value];
+  asyncData._deps++;
+  const initialFetch = () => nuxtApp._asyncData[key.value].execute(initialFetchOptions);
   const fetchOnServer = options.server !== false && nuxtApp.payload.serverRendered;
   if (import.meta.server && fetchOnServer && options.immediate) {
     const promise = initialFetch();
@@ -126,9 +81,21 @@ export function useAsyncData(...args) {
     }
   }
   if (import.meta.client) {
+    let unregister = function(key2) {
+      const data = nuxtApp._asyncData[key2];
+      if (data?._deps) {
+        data._deps--;
+        if (data._deps === 0) {
+          data?._off();
+        }
+      }
+    };
     const instance = getCurrentInstance();
+    if (instance && fetchOnServer && options.immediate && !instance.sp) {
+      instance.sp = [];
+    }
     if (import.meta.dev && !nuxtApp.isHydrating && !nuxtApp._processingMiddleware && (!instance || instance?.isMounted)) {
-      console.warn(`[nuxt] [${options._functionName || "useAsyncData"}] Component is already mounted, please use $fetch instead. See https://nuxt.com/docs/getting-started/data-fetching`);
+      console.warn(`[nuxt] [${functionName}] Component is already mounted, please use $fetch instead. See https://nuxt.com/docs/getting-started/data-fetching`);
     }
     if (instance && !instance._nuxtOnBeforeMountCbs) {
       instance._nuxtOnBeforeMountCbs = [];
@@ -141,50 +108,117 @@ export function useAsyncData(...args) {
       });
       onUnmounted(() => cbs.splice(0, cbs.length));
     }
-    if (fetchOnServer && nuxtApp.isHydrating && (asyncData.error.value || initialCachedData != null)) {
-      asyncData.pending.value = false;
+    const isWithinClientOnly = instance && (instance._nuxtClientOnly || inject(clientOnlySymbol, false));
+    if (fetchOnServer && nuxtApp.isHydrating && (asyncData.error.value || asyncData.data.value != null)) {
+      if (pendingWhenIdle) {
+        asyncData.pending.value = false;
+      }
       asyncData.status.value = asyncData.error.value ? "error" : "success";
-    } else if (instance && (nuxtApp.payload.serverRendered && nuxtApp.isHydrating || options.lazy) && options.immediate) {
+    } else if (instance && (!isWithinClientOnly && nuxtApp.payload.serverRendered && nuxtApp.isHydrating || options.lazy) && options.immediate) {
       instance._nuxtOnBeforeMountCbs.push(initialFetch);
     } else if (options.immediate) {
       initialFetch();
     }
     const hasScope = getCurrentScope();
-    if (options.watch) {
-      const unsub = watch(options.watch, () => asyncData.refresh());
-      if (hasScope) {
-        onScopeDispose(unsub);
-      }
-    }
-    const off = nuxtApp.hook("app:data:refresh", async (keys) => {
-      if (!keys || keys.includes(key)) {
-        await asyncData.refresh();
+    const unsubExecute = watch([key, ...options.watch || []], ([newKey], [oldKey]) => {
+      if ((newKey || oldKey) && newKey !== oldKey) {
+        const hasRun = nuxtApp._asyncData[oldKey]?.data.value !== asyncDataDefaults.value;
+        const isRunning = nuxtApp._asyncDataPromises[oldKey] !== void 0;
+        if (oldKey) {
+          unregister(oldKey);
+        }
+        const initialFetchOptions2 = { cause: "initial", dedupe: options.dedupe };
+        if (!nuxtApp._asyncData[newKey]?._init) {
+          let value;
+          if (oldKey && hasRun) {
+            value = nuxtApp._asyncData[oldKey]?.data.value;
+          } else {
+            value = options.getCachedData(newKey, nuxtApp, { cause: "initial" });
+            initialFetchOptions2.cachedData = value;
+          }
+          nuxtApp._asyncData[newKey] = createAsyncData(nuxtApp, newKey, _handler, options, value);
+        }
+        nuxtApp._asyncData[newKey]._deps++;
+        if (options.immediate || hasRun || isRunning) {
+          nuxtApp._asyncData[newKey].execute(initialFetchOptions2);
+        }
+      } else {
+        asyncData._execute({ cause: "watch", dedupe: options.dedupe });
       }
-    });
+    }, { flush: "sync" });
     if (hasScope) {
-      onScopeDispose(off);
+      onScopeDispose(() => {
+        unsubExecute();
+        unregister(key.value);
+      });
     }
   }
-  const asyncDataPromise = Promise.resolve(nuxtApp._asyncDataPromises[key]).then(() => asyncData);
-  Object.assign(asyncDataPromise, asyncData);
+  const asyncReturn = {
+    data: writableComputedRef(() => nuxtApp._asyncData[key.value]?.data),
+    pending: writableComputedRef(() => nuxtApp._asyncData[key.value]?.pending),
+    status: writableComputedRef(() => nuxtApp._asyncData[key.value]?.status),
+    error: writableComputedRef(() => nuxtApp._asyncData[key.value]?.error),
+    refresh: (...args2) => nuxtApp._asyncData[key.value].execute(...args2),
+    execute: (...args2) => nuxtApp._asyncData[key.value].execute(...args2),
+    clear: () => clearNuxtDataByKey(nuxtApp, key.value)
+  };
+  const asyncDataPromise = Promise.resolve(nuxtApp._asyncDataPromises[key.value]).then(() => asyncReturn);
+  Object.assign(asyncDataPromise, asyncReturn);
   return asyncDataPromise;
 }
+function writableComputedRef(getter) {
+  return computed({
+    get() {
+      return getter()?.value;
+    },
+    set(value) {
+      const ref2 = getter();
+      if (ref2) {
+        ref2.value = value;
+      }
+    }
+  });
+}
 export function useLazyAsyncData(...args) {
   const autoKey = typeof args[args.length - 1] === "string" ? args.pop() : void 0;
-  if (typeof args[0] !== "string") {
+  if (_isAutoKeyNeeded(args[0], args[1])) {
     args.unshift(autoKey);
   }
   const [key, handler, options = {}] = args;
-  if (import.meta.dev && import.meta.client) {
+  if (import.meta.dev) {
     options._functionName ||= "useLazyAsyncData";
   }
   return useAsyncData(key, handler, { ...options, lazy: true }, null);
 }
+function _isAutoKeyNeeded(keyOrFetcher, fetcher) {
+  if (typeof keyOrFetcher === "string") {
+    return false;
+  }
+  if (typeof keyOrFetcher === "object" && keyOrFetcher !== null) {
+    return false;
+  }
+  if (typeof keyOrFetcher === "function" && typeof fetcher === "function") {
+    return false;
+  }
+  return true;
+}
 export function useNuxtData(key) {
   const nuxtApp = useNuxtApp();
   if (!(key in nuxtApp.payload.data)) {
     nuxtApp.payload.data[key] = asyncDataDefaults.value;
   }
+  if (nuxtApp._asyncData[key]) {
+    const data = nuxtApp._asyncData[key];
+    data._deps++;
+    if (getCurrentScope()) {
+      onScopeDispose(() => {
+        data._deps--;
+        if (data._deps === 0) {
+          data?._off();
+        }
+      });
+    }
+  }
   return {
     data: computed({
       get() {
@@ -224,9 +258,11 @@ function clearNuxtDataByKey(nuxtApp, key) {
     nuxtApp.payload._errors[key] = asyncDataDefaults.errorValue;
   }
   if (nuxtApp._asyncData[key]) {
-    nuxtApp._asyncData[key].data.value = resetAsyncDataToUndefined ? void 0 : nuxtApp._asyncData[key]._default();
+    nuxtApp._asyncData[key].data.value = resetAsyncDataToUndefined ? void 0 : unref(nuxtApp._asyncData[key]._default());
     nuxtApp._asyncData[key].error.value = asyncDataDefaults.errorValue;
-    nuxtApp._asyncData[key].pending.value = false;
+    if (pendingWhenIdle) {
+      nuxtApp._asyncData[key].pending.value = false;
+    }
     nuxtApp._asyncData[key].status.value = "idle";
   }
   if (key in nuxtApp._asyncDataPromises) {
@@ -243,3 +279,141 @@ function pick(obj, keys) {
   }
   return newObj;
 }
+const isDev = import.meta.dev;
+function createAsyncData(nuxtApp, key, _handler, options, initialCachedData) {
+  nuxtApp.payload._errors[key] ??= asyncDataDefaults.errorValue;
+  const hasCustomGetCachedData = options.getCachedData !== getDefaultCachedData;
+  const handler = import.meta.client || !import.meta.prerender || !nuxtApp.ssrContext?._sharedPrerenderCache ? _handler : () => {
+    const value = nuxtApp.ssrContext._sharedPrerenderCache.get(key);
+    if (value) {
+      return value;
+    }
+    const promise = Promise.resolve().then(() => nuxtApp.runWithContext(() => _handler(nuxtApp)));
+    nuxtApp.ssrContext._sharedPrerenderCache.set(key, promise);
+    return promise;
+  };
+  const _ref = options.deep ? ref : shallowRef;
+  const hasCachedData = initialCachedData != null;
+  const unsubRefreshAsyncData = nuxtApp.hook("app:data:refresh", async (keys) => {
+    if (!keys || keys.includes(key)) {
+      await asyncData.execute({ cause: "refresh:hook" });
+    }
+  });
+  const asyncData = {
+    data: _ref(hasCachedData ? initialCachedData : options.default()),
+    pending: pendingWhenIdle ? shallowRef(!hasCachedData) : computed(() => asyncData.status.value === "pending"),
+    error: toRef(nuxtApp.payload._errors, key),
+    status: shallowRef("idle"),
+    execute: (...args) => {
+      const [_opts, newValue = void 0] = args;
+      const opts = _opts && newValue === void 0 && typeof _opts === "object" ? _opts : {};
+      if (import.meta.dev && newValue !== void 0 && (!_opts || typeof _opts !== "object")) {
+        console.warn(`[nuxt] [${options._functionName}] Do not pass \`execute\` directly to \`watch\`. Instead, use an inline function, such as \`watch(q, () => execute())\`.`);
+      }
+      if (nuxtApp._asyncDataPromises[key]) {
+        if (isDefer(opts.dedupe ?? options.dedupe)) {
+          return nuxtApp._asyncDataPromises[key];
+        }
+        nuxtApp._asyncDataPromises[key].cancelled = true;
+      }
+      if (granularCachedData || opts.cause === "initial" || nuxtApp.isHydrating) {
+        const cachedData = "cachedData" in opts ? opts.cachedData : options.getCachedData(key, nuxtApp, { cause: opts.cause ?? "refresh:manual" });
+        if (cachedData != null) {
+          nuxtApp.payload.data[key] = asyncData.data.value = cachedData;
+          asyncData.error.value = asyncDataDefaults.errorValue;
+          asyncData.status.value = "success";
+          return Promise.resolve(cachedData);
+        }
+      }
+      if (pendingWhenIdle) {
+        asyncData.pending.value = true;
+      }
+      asyncData.status.value = "pending";
+      const promise = new Promise(
+        (resolve, reject) => {
+          try {
+            resolve(handler(nuxtApp));
+          } catch (err) {
+            reject(err);
+          }
+        }
+      ).then(async (_result) => {
+        if (promise.cancelled) {
+          return nuxtApp._asyncDataPromises[key];
+        }
+        let result = _result;
+        if (options.transform) {
+          result = await options.transform(_result);
+        }
+        if (options.pick) {
+          result = pick(result, options.pick);
+        }
+        if (import.meta.dev && import.meta.server && result == null) {
+          const stack = captureStackTrace();
+          const { source, line, column } = stack[stack.length - 1] ?? {};
+          const explanation = source ? ` (used at ${source.replace(/^file:\/\//, "")}:${line}:${column})` : "";
+          console.warn(`[nuxt] \`${options._functionName || "useAsyncData"}${explanation}\` must return a value (it should not be \`undefined\` or \`null\`) or the request may be duplicated on the client side.`);
+        }
+        nuxtApp.payload.data[key] = result;
+        asyncData.data.value = result;
+        asyncData.error.value = asyncDataDefaults.errorValue;
+        asyncData.status.value = "success";
+      }).catch((error) => {
+        if (promise.cancelled) {
+          return nuxtApp._asyncDataPromises[key];
+        }
+        asyncData.error.value = createError(error);
+        asyncData.data.value = unref(options.default());
+        asyncData.status.value = "error";
+      }).finally(() => {
+        if (promise.cancelled) {
+          return;
+        }
+        if (pendingWhenIdle) {
+          asyncData.pending.value = false;
+        }
+        delete nuxtApp._asyncDataPromises[key];
+      });
+      nuxtApp._asyncDataPromises[key] = promise;
+      return nuxtApp._asyncDataPromises[key];
+    },
+    _execute: debounce((...args) => asyncData.execute(...args), 0, { leading: true }),
+    _default: options.default,
+    _deps: 0,
+    _init: true,
+    _hash: isDev ? createHash(_handler, options) : void 0,
+    _off: () => {
+      unsubRefreshAsyncData();
+      if (nuxtApp._asyncData[key]?._init) {
+        nuxtApp._asyncData[key]._init = false;
+      }
+      if (purgeCachedData && !hasCustomGetCachedData) {
+        nextTick(() => {
+          if (!nuxtApp._asyncData[key]?._init) {
+            clearNuxtDataByKey(nuxtApp, key);
+            asyncData.execute = () => Promise.resolve();
+            asyncData.data.value = asyncDataDefaults.value;
+          }
+        });
+      }
+    }
+  };
+  return asyncData;
+}
+const getDefault = () => asyncDataDefaults.value;
+const getDefaultCachedData = (key, nuxtApp, ctx) => {
+  if (nuxtApp.isHydrating) {
+    return nuxtApp.payload.data[key];
+  }
+  if (ctx.cause !== "refresh:manual" && ctx.cause !== "refresh:hook") {
+    return nuxtApp.static.data[key];
+  }
+};
+function createHash(_handler, options) {
+  return {
+    handler: hash(_handler),
+    transform: options.transform ? hash(options.transform) : void 0,
+    pick: options.pick ? hash(options.pick) : void 0,
+    getCachedData: options.getCachedData ? hash(options.getCachedData) : void 0
+  };
+}
diff --git a/node_modules/nuxt/dist/app/composables/component.js b/node_modules/nuxt/dist/app/composables/component.js
index 29d08e9..e578302 100644
--- a/node_modules/nuxt/dist/app/composables/component.js
+++ b/node_modules/nuxt/dist/app/composables/component.js
@@ -1,22 +1,42 @@
-import { getCurrentInstance, reactive, toRefs } from "vue";
-import { useHead } from "@unhead/vue";
-import { useNuxtApp } from "../nuxt.js";
+import { computed, getCurrentInstance } from "vue";
+import { hash } from "ohash";
+import { getNuxtAppCtx, useNuxtApp } from "../nuxt.js";
+import { useHead } from "./head.js";
 import { useAsyncData } from "./asyncData.js";
 import { useRoute } from "./router.js";
 import { createError } from "./error.js";
 export const NuxtComponentIndicator = "__nuxt_component";
+// @__NO_SIDE_EFFECTS__
+function getFetchKey() {
+  const vm = getCurrentInstance();
+  const route = useRoute();
+  const { _fetchKeyBase } = vm.proxy.$options;
+  return hash([
+    _fetchKeyBase,
+    route.path,
+    route.query,
+    route.matched.findIndex((r) => Object.values(r.components || {}).includes(vm.type))
+  ]);
+}
 async function runLegacyAsyncData(res, fn) {
   const nuxtApp = useNuxtApp();
-  const route = useRoute();
-  const vm = getCurrentInstance();
-  const { fetchKey, _fetchKeyBase } = vm.proxy.$options;
-  const key = (typeof fetchKey === "function" ? fetchKey(() => "") : fetchKey) || [_fetchKeyBase, route.fullPath, route.matched.findIndex((r) => Object.values(r.components || {}).includes(vm.type))].join(":");
+  const { fetchKey } = getCurrentInstance().proxy.$options;
+  const key = (typeof fetchKey === "function" ? fetchKey(() => "") : fetchKey) || /* @__PURE__ */ getFetchKey();
   const { data, error } = await useAsyncData(`options:asyncdata:${key}`, () => import.meta.server ? nuxtApp.runWithContext(() => fn(nuxtApp)) : fn(nuxtApp));
   if (error.value) {
     throw createError(error.value);
   }
   if (data.value && typeof data.value === "object") {
-    Object.assign(await res, toRefs(reactive(data.value)));
+    const _res = await res;
+    for (const key2 in data.value) {
+      _res[key2] = computed({
+        get: () => data.value?.[key2],
+        set(v) {
+          data.value ||= {};
+          data.value[key2] = v;
+        }
+      });
+    }
   } else if (import.meta.dev) {
     console.warn("[nuxt] asyncData should return an object", data);
   }
@@ -36,7 +56,17 @@ export const defineNuxtComponent = /* @__NO_SIDE_EFFECTS__ */ function defineNux
     ...options,
     setup(props, ctx) {
       const nuxtApp = useNuxtApp();
-      const res = setup ? Promise.resolve(nuxtApp.runWithContext(() => setup(props, ctx))).then((r) => r || {}) : {};
+      let res = {};
+      if (setup) {
+        const fn = () => Promise.resolve(setup(props, ctx)).then((r) => r || {});
+        const nuxtAppCtx = getNuxtAppCtx(nuxtApp._id);
+        if (import.meta.server) {
+          res = nuxtAppCtx.callAsync(nuxtApp, fn);
+        } else {
+          nuxtAppCtx.set(nuxtApp);
+          res = fn();
+        }
+      }
       const promises = [];
       if (options.asyncData) {
         promises.push(runLegacyAsyncData(res, options.asyncData));
diff --git a/node_modules/nuxt/dist/app/composables/cookie.js b/node_modules/nuxt/dist/app/composables/cookie.js
index e58b709..f6e6857 100644
--- a/node_modules/nuxt/dist/app/composables/cookie.js
+++ b/node_modules/nuxt/dist/app/composables/cookie.js
@@ -25,6 +25,7 @@ export function useCookie(name, _opts) {
     delay = opts.expires.getTime() - Date.now();
   }
   const hasExpired = delay !== void 0 && delay <= 0;
+  const shouldSetInitialClientCookie = import.meta.client && (hasExpired || cookies[name] === void 0 || cookies[name] === null);
   const cookieValue = klona(hasExpired ? void 0 : cookies[name] ?? opts.default?.());
   const cookie = import.meta.client && delay && !hasExpired ? cookieRef(cookieValue, delay, opts.watch && opts.watch !== "shallow") : ref(cookieValue);
   if (import.meta.dev && hasExpired) {
@@ -38,9 +39,11 @@ export function useCookie(name, _opts) {
       }
     } catch {
     }
-    const callback = () => {
-      if (opts.readonly || isEqual(cookie.value, cookies[name])) {
-        return;
+    const callback = (force = false) => {
+      if (!force) {
+        if (opts.readonly || isEqual(cookie.value, cookies[name])) {
+          return;
+        }
       }
       writeClientCookie(name, cookie.value, opts);
       cookies[name] = klona(cookie.value);
@@ -93,8 +96,9 @@ export function useCookie(name, _opts) {
         },
         { deep: opts.watch !== "shallow" }
       );
-    } else {
-      callback();
+    }
+    if (shouldSetInitialClientCookie) {
+      callback(shouldSetInitialClientCookie);
     }
   } else if (import.meta.server) {
     const nuxtApp = useNuxtApp();
diff --git a/node_modules/nuxt/dist/app/composables/error.d.ts b/node_modules/nuxt/dist/app/composables/error.d.ts
index 2fee64f..fedf659 100644
--- a/node_modules/nuxt/dist/app/composables/error.d.ts
+++ b/node_modules/nuxt/dist/app/composables/error.d.ts
@@ -5,6 +5,7 @@ export declare const NUXT_ERROR_SIGNATURE = "__nuxt_error";
 /** @since 3.0.0 */
 export declare const useError: () => Ref<NuxtPayload["error"]>;
 export interface NuxtError<DataT = unknown> extends H3Error<DataT> {
+    error?: true;
 }
 /** @since 3.0.0 */
 export declare const showError: <DataT = unknown>(error: string | Error | (Partial<NuxtError<DataT>> & {
diff --git a/node_modules/nuxt/dist/app/composables/error.js b/node_modules/nuxt/dist/app/composables/error.js
index 40e8791..44df9bc 100644
--- a/node_modules/nuxt/dist/app/composables/error.js
+++ b/node_modules/nuxt/dist/app/composables/error.js
@@ -13,7 +13,7 @@ export const showError = (error) => {
     if (import.meta.client) {
       nuxtApp.hooks.callHook("app:error", nuxtError);
     }
-    error2.value = error2.value || nuxtError;
+    error2.value ||= nuxtError;
   } catch {
     throw nuxtError;
   }
diff --git a/node_modules/nuxt/dist/app/composables/fetch.d.ts b/node_modules/nuxt/dist/app/composables/fetch.d.ts
index a0fb23c..c39c8b7 100644
--- a/node_modules/nuxt/dist/app/composables/fetch.d.ts
+++ b/node_modules/nuxt/dist/app/composables/fetch.d.ts
@@ -1,8 +1,8 @@
 import type { FetchError, FetchOptions } from 'ofetch';
 import type { NitroFetchRequest, TypedInternalResponse, AvailableRouterMethod as _AvailableRouterMethod } from 'nitropack';
-import type { Ref } from 'vue';
+import type { MaybeRefOrGetter, Ref } from 'vue';
+import type { DefaultAsyncDataErrorValue, DefaultAsyncDataValue } from 'nuxt/app/defaults';
 import type { AsyncData, AsyncDataOptions, KeysOf, MultiWatchSources, PickFrom } from './asyncData.js';
-import type { DefaultAsyncDataErrorValue, DefaultAsyncDataValue } from '#app/defaults';
 type AvailableRouterMethod<R extends NitroFetchRequest> = _AvailableRouterMethod<R> | Uppercase<_AvailableRouterMethod<R>>;
 export type FetchResult<ReqT extends NitroFetchRequest, M extends AvailableRouterMethod<ReqT>> = TypedInternalResponse<ReqT, unknown, Lowercase<M>>;
 type ComputedOptions<T extends Record<string, any>> = {
@@ -13,7 +13,7 @@ interface NitroFetchOptions<R extends NitroFetchRequest, M extends AvailableRout
 }
 type ComputedFetchOptions<R extends NitroFetchRequest, M extends AvailableRouterMethod<R>> = ComputedOptions<NitroFetchOptions<R, M>>;
 export interface UseFetchOptions<ResT, DataT = ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DefaultAsyncDataValue, R extends NitroFetchRequest = string & {}, M extends AvailableRouterMethod<R> = AvailableRouterMethod<R>> extends Omit<AsyncDataOptions<ResT, DataT, PickKeys, DefaultT>, 'watch'>, ComputedFetchOptions<R, M> {
-    key?: string;
+    key?: MaybeRefOrGetter<string>;
     $fetch?: typeof globalThis.$fetch;
     watch?: MultiWatchSources | false;
 }
@@ -25,14 +25,14 @@ export interface UseFetchOptions<ResT, DataT = ResT, PickKeys extends KeysOf<Dat
  * @param opts extends $fetch options and useAsyncData options
  */
 export declare function useFetch<ResT = void, ErrorT = FetchError, ReqT extends NitroFetchRequest = NitroFetchRequest, Method extends AvailableRouterMethod<ReqT> = ResT extends void ? 'get' extends AvailableRouterMethod<ReqT> ? 'get' : AvailableRouterMethod<ReqT> : AvailableRouterMethod<ReqT>, _ResT = ResT extends void ? FetchResult<ReqT, Method> : ResT, DataT = _ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DefaultAsyncDataValue>(request: Ref<ReqT> | ReqT | (() => ReqT), opts?: UseFetchOptions<_ResT, DataT, PickKeys, DefaultT, ReqT, Method>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, ErrorT | DefaultAsyncDataErrorValue>;
+export declare function useFetch<ResT = void, ErrorT = FetchError, ReqT extends NitroFetchRequest = NitroFetchRequest, Method extends AvailableRouterMethod<ReqT> = ResT extends void ? 'get' extends AvailableRouterMethod<ReqT> ? 'get' : AvailableRouterMethod<ReqT> : AvailableRouterMethod<ReqT>, _ResT = ResT extends void ? FetchResult<ReqT, Method> : ResT, DataT = _ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DataT>(request: Ref<ReqT> | ReqT | (() => ReqT), opts?: UseFetchOptions<_ResT, DataT, PickKeys, DefaultT, ReqT, Method>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, ErrorT | DefaultAsyncDataErrorValue>;
 /**
  * Fetch data from an API endpoint with an SSR-friendly composable.
- * See {@link https://nuxt.com/docs/api/composables/use-fetch}
+ * See {@link https://nuxt.com/docs/api/composables/use-lazy-fetch}
+ * @since 3.0.0
  * @param request The URL to fetch
  * @param opts extends $fetch options and useAsyncData options
  */
-export declare function useFetch<ResT = void, ErrorT = FetchError, ReqT extends NitroFetchRequest = NitroFetchRequest, Method extends AvailableRouterMethod<ReqT> = ResT extends void ? 'get' extends AvailableRouterMethod<ReqT> ? 'get' : AvailableRouterMethod<ReqT> : AvailableRouterMethod<ReqT>, _ResT = ResT extends void ? FetchResult<ReqT, Method> : ResT, DataT = _ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DataT>(request: Ref<ReqT> | ReqT | (() => ReqT), opts?: UseFetchOptions<_ResT, DataT, PickKeys, DefaultT, ReqT, Method>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, ErrorT | DefaultAsyncDataErrorValue>;
-/** @since 3.0.0 */
 export declare function useLazyFetch<ResT = void, ErrorT = FetchError, ReqT extends NitroFetchRequest = NitroFetchRequest, Method extends AvailableRouterMethod<ReqT> = ResT extends void ? 'get' extends AvailableRouterMethod<ReqT> ? 'get' : AvailableRouterMethod<ReqT> : AvailableRouterMethod<ReqT>, _ResT = ResT extends void ? FetchResult<ReqT, Method> : ResT, DataT = _ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DefaultAsyncDataValue>(request: Ref<ReqT> | ReqT | (() => ReqT), opts?: Omit<UseFetchOptions<_ResT, DataT, PickKeys, DefaultT, ReqT, Method>, 'lazy'>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, ErrorT | DefaultAsyncDataErrorValue>;
 export declare function useLazyFetch<ResT = void, ErrorT = FetchError, ReqT extends NitroFetchRequest = NitroFetchRequest, Method extends AvailableRouterMethod<ReqT> = ResT extends void ? 'get' extends AvailableRouterMethod<ReqT> ? 'get' : AvailableRouterMethod<ReqT> : AvailableRouterMethod<ReqT>, _ResT = ResT extends void ? FetchResult<ReqT, Method> : ResT, DataT = _ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DataT>(request: Ref<ReqT> | ReqT | (() => ReqT), opts?: Omit<UseFetchOptions<_ResT, DataT, PickKeys, DefaultT, ReqT, Method>, 'lazy'>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, ErrorT | DefaultAsyncDataErrorValue>;
 export {};
diff --git a/node_modules/nuxt/dist/app/composables/fetch.js b/node_modules/nuxt/dist/app/composables/fetch.js
index 3dd474b..2447b55 100644
--- a/node_modules/nuxt/dist/app/composables/fetch.js
+++ b/node_modules/nuxt/dist/app/composables/fetch.js
@@ -1,19 +1,13 @@
-import { computed, reactive, toValue } from "vue";
+import { computed, reactive, toValue, watch } from "vue";
 import { hash } from "ohash";
+import { isPlainObject } from "@vue/shared";
 import { useRequestFetch } from "./ssr.js";
 import { useAsyncData } from "./asyncData.js";
-import { fetchDefaults } from "#build/nuxt.config.mjs";
+import { alwaysRunFetchOnKeyChange, fetchDefaults } from "#build/nuxt.config.mjs";
 export function useFetch(request, arg1, arg2) {
   const [opts = {}, autoKey] = typeof arg1 === "string" ? [{}, arg1] : [arg1, arg2];
   const _request = computed(() => toValue(request));
-  const _key = opts.key || hash([autoKey, typeof _request.value === "string" ? _request.value : "", ...generateOptionSegments(opts)]);
-  if (!_key || typeof _key !== "string") {
-    throw new TypeError("[nuxt] [useFetch] key must be a string: " + _key);
-  }
-  if (!request) {
-    throw new Error("[nuxt] [useFetch] request is missing.");
-  }
-  const key = _key === autoKey ? "$f" + _key : _key;
+  const key = computed(() => toValue(opts.key) || "$f" + hash([autoKey, typeof _request.value === "string" ? _request.value : "", ...generateOptionSegments(opts)]));
   if (!opts.baseURL && typeof _request.value === "string" && (_request.value[0] === "/" && _request.value[1] === "/")) {
     throw new Error('[nuxt] [useFetch] the request URL must not start with "//".');
   }
@@ -23,7 +17,7 @@ export function useFetch(request, arg1, arg2) {
     default: defaultFn,
     transform,
     pick,
-    watch,
+    watch: watchSources,
     immediate,
     getCachedData,
     deep,
@@ -45,13 +39,20 @@ export function useFetch(request, arg1, arg2) {
     getCachedData,
     deep,
     dedupe,
-    watch: watch === false ? [] : [_fetchOptions, _request, ...watch || []]
+    watch: watchSources === false ? [] : [...watchSources || [], _fetchOptions]
   };
-  if (import.meta.dev && import.meta.client) {
-    _asyncDataOptions._functionName = opts._functionName || "useFetch";
+  if (import.meta.dev) {
+    _asyncDataOptions._functionName ||= "useFetch";
+  }
+  if (alwaysRunFetchOnKeyChange && !immediate) {
+    let setImmediate = function() {
+      _asyncDataOptions.immediate = true;
+    };
+    watch(key, setImmediate, { flush: "sync", once: true });
+    watch([...watchSources || [], _fetchOptions], setImmediate, { flush: "sync", once: true });
   }
   let controller;
-  const asyncData = useAsyncData(key, () => {
+  const asyncData = useAsyncData(watchSources === false ? key.value : key, () => {
     controller?.abort?.(new DOMException("Request aborted as another request to the same endpoint was initiated.", "AbortError"));
     controller = typeof AbortController !== "undefined" ? new AbortController() : {};
     const timeoutLength = toValue(opts.timeout);
@@ -75,7 +76,7 @@ export function useFetch(request, arg1, arg2) {
 }
 export function useLazyFetch(request, arg1, arg2) {
   const [opts = {}, autoKey] = typeof arg1 === "string" ? [{}, arg1] : [arg1, arg2];
-  if (import.meta.dev && import.meta.client) {
+  if (import.meta.dev) {
     opts._functionName ||= "useLazyFetch";
   }
   return useFetch(
@@ -104,5 +105,28 @@ function generateOptionSegments(opts) {
     }
     segments.push(unwrapped);
   }
+  if (opts.body) {
+    const value = toValue(opts.body);
+    if (!value) {
+      segments.push(hash(value));
+    } else if (value instanceof ArrayBuffer) {
+      segments.push(hash(Object.fromEntries([...new Uint8Array(value).entries()].map(([k, v]) => [k, v.toString()]))));
+    } else if (value instanceof FormData) {
+      const obj = {};
+      for (const entry of value.entries()) {
+        const [key, val] = entry;
+        obj[key] = val instanceof File ? val.name : val;
+      }
+      segments.push(hash(obj));
+    } else if (isPlainObject(value)) {
+      segments.push(hash(reactive(value)));
+    } else {
+      try {
+        segments.push(hash(value));
+      } catch {
+        console.warn("[useFetch] Failed to hash body", value);
+      }
+    }
+  }
   return segments;
 }
diff --git a/node_modules/nuxt/dist/app/composables/head.d.ts b/node_modules/nuxt/dist/app/composables/head.d.ts
new file mode 100644
index 0000000..f7cfd8b
--- /dev/null
+++ b/node_modules/nuxt/dist/app/composables/head.d.ts
@@ -0,0 +1 @@
+export { injectHead, useHead, useServerHead, useSeoMeta, useServerSeoMeta, useHeadSafe, useServerHeadSafe, } from '#unhead/composables';
diff --git a/node_modules/nuxt/dist/app/composables/head.js b/node_modules/nuxt/dist/app/composables/head.js
new file mode 100644
index 0000000..c78ed5f
--- /dev/null
+++ b/node_modules/nuxt/dist/app/composables/head.js
@@ -0,0 +1,9 @@
+export {
+  injectHead,
+  useHead,
+  useServerHead,
+  useSeoMeta,
+  useServerSeoMeta,
+  useHeadSafe,
+  useServerHeadSafe
+} from "#unhead/composables";
diff --git a/node_modules/nuxt/dist/app/composables/id.d.ts b/node_modules/nuxt/dist/app/composables/id.d.ts
index 5b5d4d4..088e9ee 100644
--- a/node_modules/nuxt/dist/app/composables/id.d.ts
+++ b/node_modules/nuxt/dist/app/composables/id.d.ts
@@ -1,2 +1,3 @@
 import { useId as _useId } from 'vue';
+/** @deprecated Use `useId` from `vue` */
 export declare const useId: typeof _useId;
diff --git a/node_modules/nuxt/dist/app/composables/index.d.ts b/node_modules/nuxt/dist/app/composables/index.d.ts
index da2bd59..d89f8eb 100644
--- a/node_modules/nuxt/dist/app/composables/index.d.ts
+++ b/node_modules/nuxt/dist/app/composables/index.d.ts
@@ -1,14 +1,3 @@
-import type { UseHeadInput } from '@unhead/vue';
-import type { HeadAugmentations } from 'nuxt/schema';
-/** @deprecated Use `UseHeadInput` from `@unhead/vue` instead. This may be removed in a future minor version. */
-export type MetaObject = UseHeadInput<HeadAugmentations>;
-export { 
-/** @deprecated Import `useHead` from `#imports` instead. This may be removed in a future minor version. */
-useHead, 
-/** @deprecated Import `useSeoMeta` from `#imports` instead. This may be removed in a future minor version. */
-useSeoMeta, 
-/** @deprecated Import `useServerSeoMeta` from `#imports` instead. This may be removed in a future minor version. */
-useServerSeoMeta, } from '@unhead/vue';
 export { defineNuxtComponent } from './component.js';
 export { useAsyncData, useLazyAsyncData, useNuxtData, refreshNuxtData, clearNuxtData } from './asyncData.js';
 export type { AsyncDataOptions, AsyncData, AsyncDataRequestStatus } from './asyncData.js';
@@ -35,4 +24,6 @@ export { useRequestURL } from './url.js';
 export { usePreviewMode } from './preview.js';
 export { useId } from './id.js';
 export { useRouteAnnouncer } from './route-announcer.js';
+export type { Politeness } from './route-announcer.js';
 export { useRuntimeHook } from './runtime-hook.js';
+export { injectHead, useHead, useHeadSafe, useSeoMeta, useServerHead, useServerHeadSafe, useServerSeoMeta } from './head.js';
diff --git a/node_modules/nuxt/dist/app/composables/index.js b/node_modules/nuxt/dist/app/composables/index.js
index 3442189..85ce059 100644
--- a/node_modules/nuxt/dist/app/composables/index.js
+++ b/node_modules/nuxt/dist/app/composables/index.js
@@ -1,8 +1,3 @@
-export {
-  useHead,
-  useSeoMeta,
-  useServerSeoMeta
-} from "@unhead/vue";
 export { defineNuxtComponent } from "./component.js";
 export { useAsyncData, useLazyAsyncData, useNuxtData, refreshNuxtData, clearNuxtData } from "./asyncData.js";
 export { useHydration } from "./hydrate.js";
@@ -23,3 +18,4 @@ export { usePreviewMode } from "./preview.js";
 export { useId } from "./id.js";
 export { useRouteAnnouncer } from "./route-announcer.js";
 export { useRuntimeHook } from "./runtime-hook.js";
+export { injectHead, useHead, useHeadSafe, useSeoMeta, useServerHead, useServerHeadSafe, useServerSeoMeta } from "./head.js";
diff --git a/node_modules/nuxt/dist/app/composables/lazy-hydration.d.ts b/node_modules/nuxt/dist/app/composables/lazy-hydration.d.ts
new file mode 100644
index 0000000..d811a6f
--- /dev/null
+++ b/node_modules/nuxt/dist/app/composables/lazy-hydration.d.ts
@@ -0,0 +1,40 @@
+import type { AsyncComponentLoader, Component, ComponentPublicInstance, DefineComponent } from 'vue';
+type LazyHydrationComponent<T extends Component, Props> = T & DefineComponent<Props, {}, {}, {}, {}, {}, {}, {
+    hydrated: () => void;
+}>;
+export declare function defineLazyHydrationComponent<T extends Component = {
+    new (): ComponentPublicInstance;
+}>(strategy: 'visible', source: AsyncComponentLoader<T>): LazyHydrationComponent<T, {
+    hydrateOnVisible?: IntersectionObserverInit | true;
+}>;
+export declare function defineLazyHydrationComponent<T extends Component = {
+    new (): ComponentPublicInstance;
+}>(strategy: 'idle', source: AsyncComponentLoader<T>): LazyHydrationComponent<T, {
+    hydrateOnIdle?: number | true;
+}>;
+export declare function defineLazyHydrationComponent<T extends Component = {
+    new (): ComponentPublicInstance;
+}>(strategy: 'interaction', source: AsyncComponentLoader<T>): LazyHydrationComponent<T, {
+    hydrateOnInteraction?: keyof HTMLElementEventMap | Array<keyof HTMLElementEventMap>;
+}>;
+export declare function defineLazyHydrationComponent<T extends Component = {
+    new (): ComponentPublicInstance;
+}>(strategy: 'mediaQuery', source: AsyncComponentLoader<T>): LazyHydrationComponent<T, {
+    hydrateOnMediaQuery: string;
+}>;
+export declare function defineLazyHydrationComponent<T extends Component = {
+    new (): ComponentPublicInstance;
+}>(strategy: 'if', source: AsyncComponentLoader<T>): LazyHydrationComponent<T, {
+    hydrateWhen: boolean;
+}>;
+export declare function defineLazyHydrationComponent<T extends Component = {
+    new (): ComponentPublicInstance;
+}>(strategy: 'time', source: AsyncComponentLoader<T>): LazyHydrationComponent<T, {
+    hydrateAfter: number | true;
+}>;
+export declare function defineLazyHydrationComponent<T extends Component = {
+    new (): ComponentPublicInstance;
+}>(strategy: 'never', source: AsyncComponentLoader<T>): LazyHydrationComponent<T, {
+    hydrateNever?: true;
+}>;
+export {};
diff --git a/node_modules/nuxt/dist/app/composables/lazy-hydration.js b/node_modules/nuxt/dist/app/composables/lazy-hydration.js
new file mode 100644
index 0000000..6356f33
--- /dev/null
+++ b/node_modules/nuxt/dist/app/composables/lazy-hydration.js
@@ -0,0 +1,2 @@
+export function defineLazyHydrationComponent(_strategy, _source) {
+}
diff --git a/node_modules/nuxt/dist/app/composables/loading-indicator.d.ts b/node_modules/nuxt/dist/app/composables/loading-indicator.d.ts
index 82aad61..8c8181f 100644
--- a/node_modules/nuxt/dist/app/composables/loading-indicator.d.ts
+++ b/node_modules/nuxt/dist/app/composables/loading-indicator.d.ts
@@ -20,8 +20,12 @@ export type LoadingIndicator = {
     progress: Ref<number>;
     isLoading: Ref<boolean>;
     error: Ref<boolean>;
-    start: () => void;
-    set: (value: number) => void;
+    start: (opts?: {
+        force?: boolean;
+    }) => void;
+    set: (value: number, opts?: {
+        force?: boolean;
+    }) => void;
     finish: (opts?: {
         force?: boolean;
         error?: boolean;
diff --git a/node_modules/nuxt/dist/app/composables/loading-indicator.js b/node_modules/nuxt/dist/app/composables/loading-indicator.js
index a1c21fb..13aa5e6 100644
--- a/node_modules/nuxt/dist/app/composables/loading-indicator.js
+++ b/node_modules/nuxt/dist/app/composables/loading-indicator.js
@@ -1,5 +1,5 @@
-import { computed, getCurrentScope, onScopeDispose, ref } from "vue";
-import { useNuxtApp } from "#app/nuxt";
+import { computed, getCurrentScope, onScopeDispose, shallowRef } from "vue";
+import { useNuxtApp } from "../nuxt.js";
 function defaultEstimatedProgress(duration, elapsed) {
   const completionPercentage = elapsed / duration * 100;
   return 2 / Math.PI * 100 * Math.atan(completionPercentage / 50);
@@ -8,32 +8,34 @@ function createLoadingIndicator(opts = {}) {
   const { duration = 2e3, throttle = 200, hideDelay = 500, resetDelay = 400 } = opts;
   const getProgress = opts.estimatedProgress || defaultEstimatedProgress;
   const nuxtApp = useNuxtApp();
-  const progress = ref(0);
-  const isLoading = ref(false);
-  const error = ref(false);
+  const progress = shallowRef(0);
+  const isLoading = shallowRef(false);
+  const error = shallowRef(false);
   let done = false;
   let rafId;
   let throttleTimeout;
   let hideTimeout;
   let resetTimeout;
-  const start = () => {
+  const start = (opts2 = {}) => {
+    _clearTimeouts();
     error.value = false;
-    set(0);
+    set(0, opts2);
   };
-  function set(at = 0) {
+  function set(at = 0, opts2 = {}) {
     if (nuxtApp.isHydrating) {
       return;
     }
     if (at >= 100) {
-      return finish();
+      return finish({ force: opts2.force });
     }
     clear();
     progress.value = at < 0 ? 0 : at;
-    if (throttle && import.meta.client) {
+    const throttleTime = opts2.force ? 0 : throttle;
+    if (throttleTime && import.meta.client) {
       throttleTimeout = setTimeout(() => {
         isLoading.value = true;
         _startProgress();
-      }, throttle);
+      }, throttleTime);
     } else {
       isLoading.value = true;
       _startProgress();
@@ -124,9 +126,9 @@ function createLoadingIndicator(opts = {}) {
 }
 export function useLoadingIndicator(opts = {}) {
   const nuxtApp = useNuxtApp();
-  const indicator = nuxtApp._loadingIndicator = nuxtApp._loadingIndicator || createLoadingIndicator(opts);
+  const indicator = nuxtApp._loadingIndicator ||= createLoadingIndicator(opts);
   if (import.meta.client && getCurrentScope()) {
-    nuxtApp._loadingIndicatorDeps = nuxtApp._loadingIndicatorDeps || 0;
+    nuxtApp._loadingIndicatorDeps ||= 0;
     nuxtApp._loadingIndicatorDeps++;
     onScopeDispose(() => {
       nuxtApp._loadingIndicatorDeps--;
diff --git a/node_modules/nuxt/dist/app/composables/manifest.d.ts b/node_modules/nuxt/dist/app/composables/manifest.d.ts
index 1e3b124..9ac356f 100644
--- a/node_modules/nuxt/dist/app/composables/manifest.d.ts
+++ b/node_modules/nuxt/dist/app/composables/manifest.d.ts
@@ -1,4 +1,6 @@
 import type { MatcherExport } from 'radix3';
+import type { H3Event } from 'h3';
+import type { NitroRouteRules } from 'nitropack';
 export interface NuxtAppManifestMeta {
     id: string;
     timestamp: number;
@@ -10,4 +12,9 @@ export interface NuxtAppManifest extends NuxtAppManifestMeta {
 /** @since 3.7.4 */
 export declare function getAppManifest(): Promise<NuxtAppManifest>;
 /** @since 3.7.4 */
+export declare function getRouteRules(event: H3Event): Promise<NitroRouteRules>;
+export declare function getRouteRules(options: {
+    path: string;
+}): Promise<Record<string, any>>;
+/** @deprecated use `getRouteRules({ path })` instead */
 export declare function getRouteRules(url: string): Promise<Record<string, any>>;
diff --git a/node_modules/nuxt/dist/app/composables/manifest.js b/node_modules/nuxt/dist/app/composables/manifest.js
index 00dbdd1..c28f3df 100644
--- a/node_modules/nuxt/dist/app/composables/manifest.js
+++ b/node_modules/nuxt/dist/app/composables/manifest.js
@@ -1,6 +1,6 @@
 import { createMatcherFromExport, createRouter as createRadixRouter, toRouteMatcher } from "radix3";
 import { defu } from "defu";
-import { useRuntimeConfig } from "../nuxt.js";
+import { useNuxtApp, useRuntimeConfig } from "../nuxt.js";
 import { appManifest as isAppManifestEnabled } from "#build/nuxt.config.mjs";
 import { buildAssetsURL } from "#internal/nuxt/paths";
 let manifest;
@@ -9,9 +9,15 @@ function fetchManifest() {
   if (!isAppManifestEnabled) {
     throw new Error("[nuxt] app manifest should be enabled with `experimental.appManifest`");
   }
-  manifest = $fetch(buildAssetsURL(`builds/meta/${useRuntimeConfig().app.buildId}.json`), {
-    responseType: "json"
-  });
+  if (import.meta.server) {
+    manifest = import("#app-manifest");
+  } else {
+    manifest = $fetch(buildAssetsURL(`builds/meta/${useRuntimeConfig().app.buildId}.json`), {
+      responseType: "json",
+      retry: 30,
+      retryDelay: 1000
+    });
+  }
   manifest.then((m) => {
     matcher = createMatcherFromExport(m.matcher);
   }).catch((e) => {
@@ -23,14 +29,19 @@ export function getAppManifest() {
   if (!isAppManifestEnabled) {
     throw new Error("[nuxt] app manifest should be enabled with `experimental.appManifest`");
   }
+  if (import.meta.server) {
+    useNuxtApp().ssrContext._preloadManifest = true;
+  }
   return manifest || fetchManifest();
 }
-export async function getRouteRules(url) {
+export async function getRouteRules(arg) {
+  const path = typeof arg === "string" ? arg : arg.path;
   if (import.meta.server) {
+    useNuxtApp().ssrContext._preloadManifest = true;
     const _routeRulesMatcher = toRouteMatcher(
       createRadixRouter({ routes: useRuntimeConfig().nitro.routeRules })
     );
-    return defu({}, ..._routeRulesMatcher.matchAll(url).reverse());
+    return defu({}, ..._routeRulesMatcher.matchAll(path).reverse());
   }
   await getAppManifest();
   if (!matcher) {
@@ -38,7 +49,7 @@ export async function getRouteRules(url) {
     return {};
   }
   try {
-    return defu({}, ...matcher.matchAll(url).reverse());
+    return defu({}, ...matcher.matchAll(path).reverse());
   } catch (e) {
     console.error("[nuxt] Error matching route rules.", e);
     return {};
diff --git a/node_modules/nuxt/dist/app/composables/once.d.ts b/node_modules/nuxt/dist/app/composables/once.d.ts
index bb615ed..c733f72 100644
--- a/node_modules/nuxt/dist/app/composables/once.d.ts
+++ b/node_modules/nuxt/dist/app/composables/once.d.ts
@@ -1,9 +1,14 @@
+type CallOnceOptions = {
+    mode?: 'navigation' | 'render';
+};
 /**
  * An SSR-friendly utility to call a method once
  * @param key a unique key ensuring the function can be properly de-duplicated across requests
  * @param fn a function to call
+ * @param options Setup the mode, e.g. to re-execute on navigation
  * @see https://nuxt.com/docs/api/utils/call-once
  * @since 3.9.0
  */
-export declare function callOnce(key?: string, fn?: (() => any | Promise<any>)): Promise<void>;
-export declare function callOnce(fn?: (() => any | Promise<any>)): Promise<void>;
+export declare function callOnce(key?: string, fn?: (() => any | Promise<any>), options?: CallOnceOptions): Promise<void>;
+export declare function callOnce(fn?: (() => any | Promise<any>), options?: CallOnceOptions): Promise<void>;
+export {};
diff --git a/node_modules/nuxt/dist/app/composables/once.js b/node_modules/nuxt/dist/app/composables/once.js
index 87f8e77..fa0bd67 100644
--- a/node_modules/nuxt/dist/app/composables/once.js
+++ b/node_modules/nuxt/dist/app/composables/once.js
@@ -1,10 +1,11 @@
+import { useRouter } from "./router.js";
 import { useNuxtApp } from "../nuxt.js";
 export async function callOnce(...args) {
   const autoKey = typeof args[args.length - 1] === "string" ? args.pop() : void 0;
   if (typeof args[0] !== "string") {
     args.unshift(autoKey);
   }
-  const [_key, fn] = args;
+  const [_key, fn, options] = args;
   if (!_key || typeof _key !== "string") {
     throw new TypeError("[nuxt] [callOnce] key must be a string: " + _key);
   }
@@ -12,11 +13,21 @@ export async function callOnce(...args) {
     throw new Error("[nuxt] [callOnce] fn must be a function: " + fn);
   }
   const nuxtApp = useNuxtApp();
+  if (options?.mode === "navigation") {
+    let callback = function() {
+      nuxtApp.payload.once.delete(_key);
+      for (const cleanup of cleanups) {
+        cleanup();
+      }
+    };
+    const cleanups = [];
+    cleanups.push(nuxtApp.hooks.hook("page:start", callback), useRouter().beforeResolve(callback));
+  }
   if (nuxtApp.payload.once.has(_key)) {
     return;
   }
-  nuxtApp._once = nuxtApp._once || {};
-  nuxtApp._once[_key] = nuxtApp._once[_key] || fn() || true;
+  nuxtApp._once ||= {};
+  nuxtApp._once[_key] ||= fn() || true;
   await nuxtApp._once[_key];
   nuxtApp.payload.once.add(_key);
   delete nuxtApp._once[_key];
diff --git a/node_modules/nuxt/dist/app/composables/payload.js b/node_modules/nuxt/dist/app/composables/payload.js
index 246a8bf..42cb4ec 100644
--- a/node_modules/nuxt/dist/app/composables/payload.js
+++ b/node_modules/nuxt/dist/app/composables/payload.js
@@ -1,8 +1,8 @@
 import { hasProtocol, joinURL, withoutTrailingSlash } from "ufo";
 import { parse } from "devalue";
-import { useHead } from "@unhead/vue";
 import { getCurrentInstance, onServerPrefetch, reactive } from "vue";
 import { useNuxtApp, useRuntimeConfig } from "../nuxt.js";
+import { useHead } from "./head.js";
 import { useRoute } from "./router.js";
 import { getAppManifest, getRouteRules } from "./manifest.js";
 import { appId, appManifest, multiApp, payloadExtraction, renderJsonPayloads } from "#build/nuxt.config.mjs";
@@ -10,35 +10,42 @@ export async function loadPayload(url, opts = {}) {
   if (import.meta.server || !payloadExtraction) {
     return null;
   }
+  const shouldLoadPayload = await isPrerendered(url);
+  if (!shouldLoadPayload) {
+    return null;
+  }
   const payloadURL = await _getPayloadURL(url, opts);
-  const nuxtApp = useNuxtApp();
-  const cache = nuxtApp._payloadCache = nuxtApp._payloadCache || {};
-  if (payloadURL in cache) {
-    return cache[payloadURL] || null;
-  }
-  cache[payloadURL] = isPrerendered(url).then((prerendered) => {
-    if (!prerendered) {
-      cache[payloadURL] = null;
-      return null;
-    }
-    return _importPayload(payloadURL).then((payload) => {
-      if (payload) {
-        return payload;
-      }
-      delete cache[payloadURL];
-      return null;
-    });
-  });
-  return cache[payloadURL];
+  return await _importPayload(payloadURL) || null;
+}
+let linkRelType;
+function detectLinkRelType() {
+  if (import.meta.server) {
+    return "preload";
+  }
+  if (linkRelType) {
+    return linkRelType;
+  }
+  const relList = document.createElement("link").relList;
+  linkRelType = relList && relList.supports && relList.supports("prefetch") ? "prefetch" : "preload";
+  return linkRelType;
 }
 export function preloadPayload(url, opts = {}) {
   const nuxtApp = useNuxtApp();
   const promise = _getPayloadURL(url, opts).then((payloadURL) => {
-    nuxtApp.runWithContext(() => useHead({
-      link: [
-        { rel: "modulepreload", href: payloadURL }
-      ]
-    }));
+    const link = renderJsonPayloads ? { rel: detectLinkRelType(), as: "fetch", crossorigin: "anonymous", href: payloadURL } : { rel: "modulepreload", crossorigin: "", href: payloadURL };
+    if (import.meta.server) {
+      nuxtApp.runWithContext(() => useHead({ link: [link] }));
+    } else {
+      const linkEl = document.createElement("link");
+      for (const key of Object.keys(link)) {
+        linkEl[key === "crossorigin" ? "crossOrigin" : key] = link[key];
+      }
+      document.head.appendChild(linkEl);
+      return new Promise((resolve, reject) => {
+        linkEl.addEventListener("load", () => resolve());
+        linkEl.addEventListener("error", () => reject());
+      });
+    }
   });
   if (import.meta.server) {
     onServerPrefetch(() => promise);
@@ -61,7 +68,7 @@ async function _importPayload(payloadURL) {
   if (import.meta.server || !payloadExtraction) {
     return null;
   }
-  const payloadPromise = renderJsonPayloads ? fetch(payloadURL).then((res) => res.text().then(parsePayload)) : import(
+  const payloadPromise = renderJsonPayloads ? fetch(payloadURL, { cache: "force-cache" }).then((res) => res.text().then(parsePayload)) : import(
     /* webpackIgnore: true */
     /* @vite-ignore */
     payloadURL
@@ -74,16 +81,19 @@ async function _importPayload(payloadURL) {
   return null;
 }
 export async function isPrerendered(url = useRoute().path) {
+  const nuxtApp = useNuxtApp();
   if (!appManifest) {
-    return !!useNuxtApp().payload.prerenderedAt;
+    return !!nuxtApp.payload.prerenderedAt;
   }
   url = withoutTrailingSlash(url);
   const manifest = await getAppManifest();
   if (manifest.prerendered.includes(url)) {
     return true;
   }
-  const rules = await getRouteRules(url);
-  return !!rules.prerender && !rules.redirect;
+  return nuxtApp.runWithContext(async () => {
+    const rules = await getRouteRules({ path: url });
+    return !!rules.prerender && !rules.redirect;
+  });
 }
 let payloadCache = null;
 export async function getNuxtClientPayload() {
diff --git a/node_modules/nuxt/dist/app/composables/preload.d.ts b/node_modules/nuxt/dist/app/composables/preload.d.ts
index 6b3b85a..00fe012 100644
--- a/node_modules/nuxt/dist/app/composables/preload.d.ts
+++ b/node_modules/nuxt/dist/app/composables/preload.d.ts
@@ -1,3 +1,4 @@
+import type { Component } from 'vue';
 import type { RouteLocationRaw, Router } from 'vue-router';
 /**
  * Preload a component or components that have been globally registered.
@@ -11,6 +12,7 @@ export declare const preloadComponents: (components: string | string[]) => Promi
  * @since 3.0.0
  */
 export declare const prefetchComponents: (components: string | string[]) => Promise<void> | undefined;
+export declare function _loadAsyncComponent(component: Component): any;
 /** @since 3.0.0 */
 export declare function preloadRouteComponents(to: RouteLocationRaw, router?: Router & {
     _routePreloaded?: Set<string>;
diff --git a/node_modules/nuxt/dist/app/composables/preload.js b/node_modules/nuxt/dist/app/composables/preload.js
index 50b553f..0d541f4 100644
--- a/node_modules/nuxt/dist/app/composables/preload.js
+++ b/node_modules/nuxt/dist/app/composables/preload.js
@@ -20,7 +20,7 @@ export const prefetchComponents = (components) => {
   }
   return preloadComponents(components);
 };
-function _loadAsyncComponent(component) {
+export function _loadAsyncComponent(component) {
   if (component?.__asyncLoader && !component.__asyncResolved) {
     return component.__asyncLoader();
   }
@@ -33,13 +33,11 @@ export async function preloadRouteComponents(to, router = useRouter()) {
   if (!matched.length) {
     return;
   }
-  if (!router._routePreloaded) {
-    router._routePreloaded = /* @__PURE__ */ new Set();
-  }
+  router._routePreloaded ||= /* @__PURE__ */ new Set();
   if (router._routePreloaded.has(path)) {
     return;
   }
-  const promises = router._preloadPromises = router._preloadPromises || [];
+  const promises = router._preloadPromises ||= [];
   if (promises.length > 4) {
     return Promise.all(promises).then(() => preloadRouteComponents(to, router));
   }
diff --git a/node_modules/nuxt/dist/app/composables/route-announcer.js b/node_modules/nuxt/dist/app/composables/route-announcer.js
index 3bad478..d5e2d61 100644
--- a/node_modules/nuxt/dist/app/composables/route-announcer.js
+++ b/node_modules/nuxt/dist/app/composables/route-announcer.js
@@ -1,9 +1,9 @@
-import { getCurrentScope, onScopeDispose, ref } from "vue";
-import { injectHead } from "@unhead/vue";
-import { useNuxtApp } from "#app";
+import { getCurrentScope, onScopeDispose, shallowRef } from "vue";
+import { useNuxtApp } from "../nuxt.js";
+import { injectHead } from "./head.js";
 function createRouteAnnouncer(opts = {}) {
-  const message = ref("");
-  const politeness = ref(opts.politeness || "polite");
+  const message = shallowRef("");
+  const politeness = shallowRef(opts.politeness || "polite");
   const activeHead = injectHead();
   function set(messageValue = "", politenessSetting = "polite") {
     message.value = messageValue;
@@ -36,12 +36,12 @@ function createRouteAnnouncer(opts = {}) {
 }
 export function useRouteAnnouncer(opts = {}) {
   const nuxtApp = useNuxtApp();
-  const announcer = nuxtApp._routeAnnouncer = nuxtApp._routeAnnouncer || createRouteAnnouncer(opts);
+  const announcer = nuxtApp._routeAnnouncer ||= createRouteAnnouncer(opts);
   if (opts.politeness !== announcer.politeness.value) {
     announcer.politeness.value = opts.politeness || "polite";
   }
   if (import.meta.client && getCurrentScope()) {
-    nuxtApp._routeAnnouncerDeps = nuxtApp._routeAnnouncerDeps || 0;
+    nuxtApp._routeAnnouncerDeps ||= 0;
     nuxtApp._routeAnnouncerDeps++;
     onScopeDispose(() => {
       nuxtApp._routeAnnouncerDeps--;
diff --git a/node_modules/nuxt/dist/app/composables/router.js b/node_modules/nuxt/dist/app/composables/router.js
index 2909568..4bc90b4 100644
--- a/node_modules/nuxt/dist/app/composables/router.js
+++ b/node_modules/nuxt/dist/app/composables/router.js
@@ -1,6 +1,6 @@
 import { getCurrentInstance, hasInjectionContext, inject, onScopeDispose } from "vue";
 import { sanitizeStatusCode } from "h3";
-import { hasProtocol, isScriptProtocol, joinURL, withQuery } from "ufo";
+import { hasProtocol, isScriptProtocol, joinURL, parseQuery, parseURL, withQuery } from "ufo";
 import { useNuxtApp, useRuntimeConfig } from "../nuxt.js";
 import { PageRouteSymbol } from "../components/injections.js";
 import { createError, showError } from "./error.js";
@@ -8,7 +8,7 @@ export const useRouter = () => {
   return useNuxtApp()?.$router;
 };
 export const useRoute = () => {
-  if (import.meta.dev && isProcessingMiddleware()) {
+  if (import.meta.dev && !getCurrentInstance() && isProcessingMiddleware()) {
     console.warn("[nuxt] Calling `useRoute` within middleware may lead to misleading results. Instead, use the (to, from) arguments passed to the middleware to access the new and old routes.");
   }
   if (hasInjectionContext()) {
@@ -59,9 +59,7 @@ const isProcessingMiddleware = () => {
 };
 const URL_QUOTE_RE = /"/g;
 export const navigateTo = (to, options) => {
-  if (!to) {
-    to = "/";
-  }
+  to ||= "/";
   const toPath = typeof to === "string" ? to : "path" in to ? resolveRouteObject(to) : useRouter().resolve(to).href;
   if (import.meta.client && options?.open) {
     const { target = "_blank", windowFeatures = {} } = options.open;
@@ -82,6 +80,18 @@ export const navigateTo = (to, options) => {
   }
   const inMiddleware = isProcessingMiddleware();
   if (import.meta.client && !isExternal && inMiddleware) {
+    if (options?.replace) {
+      if (typeof to === "string") {
+        const { pathname, search, hash } = parseURL(to);
+        return {
+          path: pathname,
+          ...search && { query: parseQuery(search) },
+          ...hash && { hash },
+          replace: true
+        };
+      }
+      return { ...to, replace: true };
+    }
     return to;
   }
   const router = useRouter();
diff --git a/node_modules/nuxt/dist/app/composables/script-stubs.d.ts b/node_modules/nuxt/dist/app/composables/script-stubs.d.ts
index 7f69af6..263c7e5 100644
--- a/node_modules/nuxt/dist/app/composables/script-stubs.d.ts
+++ b/node_modules/nuxt/dist/app/composables/script-stubs.d.ts
@@ -1,4 +1,4 @@
-import type { UseScriptInput } from '@unhead/vue';
+import type { UseScriptInput } from '@unhead/vue/scripts';
 export declare function useScript<T extends Record<string | symbol, any>>(input: UseScriptInput, options?: Record<string, unknown>): void;
 export declare function useScriptTriggerElement(...args: unknown[]): void;
 export declare function useScriptTriggerConsent(...args: unknown[]): void;
@@ -24,3 +24,6 @@ export declare function useScriptGoogleMaps(...args: unknown[]): void;
 export declare function useScriptNpm(...args: unknown[]): void;
 export declare function useScriptGoogleAdsense(...args: unknown[]): void;
 export declare function useScriptYouTubePlayer(...args: unknown[]): void;
+export declare function useScriptUmamiAnalytics(...args: unknown[]): void;
+export declare function useScriptSnapchatPixel(...args: unknown[]): void;
+export declare function useScriptRybbitAnalytics(...args: unknown[]): void;
diff --git a/node_modules/nuxt/dist/app/composables/script-stubs.js b/node_modules/nuxt/dist/app/composables/script-stubs.js
index 8f30b76..8851125 100644
--- a/node_modules/nuxt/dist/app/composables/script-stubs.js
+++ b/node_modules/nuxt/dist/app/composables/script-stubs.js
@@ -1,6 +1,6 @@
 import { createError } from "./error.js";
 function renderStubMessage(name) {
-  const message = `\`${name}\` is provided by @nuxt/scripts. Check your console to install it or run 'npx nuxi@latest module add @nuxt/scripts' to install it.`;
+  const message = `\`${name}\` is provided by @nuxt/scripts. Check your console to install it or run 'npx nuxt module add @nuxt/scripts' to install it.`;
   if (import.meta.client) {
     throw createError({
       fatal: true,
@@ -84,3 +84,12 @@ export function useScriptGoogleAdsense(...args) {
 export function useScriptYouTubePlayer(...args) {
   renderStubMessage("useScriptYouTubePlayer");
 }
+export function useScriptUmamiAnalytics(...args) {
+  renderStubMessage("useScriptUmamiAnalytics");
+}
+export function useScriptSnapchatPixel(...args) {
+  renderStubMessage("useScriptSnapchatPixel");
+}
+export function useScriptRybbitAnalytics(...args) {
+  renderStubMessage("useScriptRybbitAnalytics");
+}
diff --git a/node_modules/nuxt/dist/app/composables/ssr.d.ts b/node_modules/nuxt/dist/app/composables/ssr.d.ts
index c155b50..4b821f0 100644
--- a/node_modules/nuxt/dist/app/composables/ssr.d.ts
+++ b/node_modules/nuxt/dist/app/composables/ssr.d.ts
@@ -1,4 +1,5 @@
 import type { H3Event } from 'h3';
+import type { H3Event$Fetch } from 'nitropack';
 import type { NuxtApp } from '../nuxt.js';
 /** @since 3.0.0 */
 export declare function useRequestEvent(nuxtApp?: NuxtApp): H3Event<import("h3").EventHandlerRequest> | undefined;
@@ -10,7 +11,7 @@ export declare function useRequestHeaders(): Readonly<Record<string, string>>;
 /** @since 3.9.0 */
 export declare function useRequestHeader(header: string): string | undefined;
 /** @since 3.2.0 */
-export declare function useRequestFetch(): typeof global.$fetch;
+export declare function useRequestFetch(): H3Event$Fetch | typeof global.$fetch;
 /** @since 3.0.0 */
 export declare function setResponseStatus(event: H3Event, code?: number, message?: string): void;
 /** @deprecated Pass `event` as first option. */
diff --git a/node_modules/nuxt/dist/app/composables/ssr.js b/node_modules/nuxt/dist/app/composables/ssr.js
index 13b4ab1..6c05bf3 100644
--- a/node_modules/nuxt/dist/app/composables/ssr.js
+++ b/node_modules/nuxt/dist/app/composables/ssr.js
@@ -1,9 +1,13 @@
 import { setResponseStatus as _setResponseStatus, appendHeader, getRequestHeader, getRequestHeaders, getResponseHeader, removeResponseHeader, setResponseHeader } from "h3";
 import { computed, getCurrentInstance, ref } from "vue";
-import { useServerHead } from "@unhead/vue";
 import { useNuxtApp } from "../nuxt.js";
 import { toArray } from "../utils.js";
-export function useRequestEvent(nuxtApp = useNuxtApp()) {
+import { useHead } from "./head.js";
+export function useRequestEvent(nuxtApp) {
+  if (import.meta.client) {
+    return;
+  }
+  nuxtApp ||= useNuxtApp();
   return nuxtApp.ssrContext?.event;
 }
 export function useRequestHeaders(include) {
@@ -97,9 +101,9 @@ export function onPrehydrate(callback, key) {
     }
   }
   const code = vm && key ? `document.querySelectorAll('[${PREHYDRATE_ATTR_KEY}*=${JSON.stringify(key)}]').forEach` + callback : callback + "()";
-  useServerHead({
+  useHead({
     script: [{
-      key: vm && key ? key : code,
+      key: vm && key ? key : void 0,
       tagPosition: "bodyClose",
       tagPriority: "critical",
       innerHTML: code
diff --git a/node_modules/nuxt/dist/app/config.d.ts b/node_modules/nuxt/dist/app/config.d.ts
index 8501be3..fe974d1 100644
--- a/node_modules/nuxt/dist/app/config.d.ts
+++ b/node_modules/nuxt/dist/app/config.d.ts
@@ -4,6 +4,7 @@ type DeepPartial<T> = T extends Function ? T : T extends Record<string, any> ? {
 } : T;
 export declare const _getAppConfig: () => AppConfig;
 export declare function useAppConfig(): AppConfig;
+export declare function _replaceAppConfig(newConfig: AppConfig): void;
 /**
  * Deep assign the current appConfig with the new one.
  *
diff --git a/node_modules/nuxt/dist/app/config.js b/node_modules/nuxt/dist/app/config.js
index a1afbf8..a5e5389 100644
--- a/node_modules/nuxt/dist/app/config.js
+++ b/node_modules/nuxt/dist/app/config.js
@@ -19,10 +19,13 @@ function deepDelete(obj, newObj) {
 }
 function deepAssign(obj, newObj) {
   for (const key in newObj) {
+    if (key === "__proto__" || key === "constructor") {
+      continue;
+    }
     const val = newObj[key];
     if (isPojoOrArray(val)) {
       const defaultVal = Array.isArray(val) ? [] : {};
-      obj[key] = obj[key] || defaultVal;
+      obj[key] ||= defaultVal;
       deepAssign(obj[key], val);
     } else {
       obj[key] = val;
@@ -31,32 +34,30 @@ function deepAssign(obj, newObj) {
 }
 export function useAppConfig() {
   const nuxtApp = useNuxtApp();
-  if (!nuxtApp._appConfig) {
-    nuxtApp._appConfig = import.meta.server ? klona(__appConfig) : reactive(__appConfig);
-  }
+  nuxtApp._appConfig ||= import.meta.server ? klona(__appConfig) : reactive(__appConfig);
   return nuxtApp._appConfig;
 }
+export function _replaceAppConfig(newConfig) {
+  const appConfig = useAppConfig();
+  deepAssign(appConfig, newConfig);
+  deepDelete(appConfig, newConfig);
+}
 export function updateAppConfig(appConfig) {
   const _appConfig = useAppConfig();
   deepAssign(_appConfig, appConfig);
 }
 if (import.meta.dev) {
-  const applyHMR = (newConfig) => {
-    const appConfig = useAppConfig();
-    if (newConfig && appConfig) {
-      deepAssign(appConfig, newConfig);
-      deepDelete(appConfig, newConfig);
-    }
-  };
   if (import.meta.hot) {
     import.meta.hot.accept((newModule) => {
       const newConfig = newModule?._getAppConfig();
-      applyHMR(newConfig);
+      if (newConfig) {
+        _replaceAppConfig(newConfig);
+      }
     });
   }
   if (import.meta.webpackHot) {
     import.meta.webpackHot.accept("#build/app.config.mjs", () => {
-      applyHMR(__appConfig);
+      _replaceAppConfig(__appConfig);
     });
   }
 }
diff --git a/node_modules/nuxt/dist/app/entry.d.ts b/node_modules/nuxt/dist/app/entry.d.ts
index f46e8e2..89e8989 100644
--- a/node_modules/nuxt/dist/app/entry.d.ts
+++ b/node_modules/nuxt/dist/app/entry.d.ts
@@ -1,5 +1,6 @@
 import type { App } from 'vue';
 import '#build/fetch.mjs';
+import '#build/global-polyfills.mjs';
 import type { CreateOptions } from './nuxt.js';
 import '#build/css';
 declare const _default: (ssrContext?: CreateOptions["ssrContext"]) => Promise<App<Element>>;
diff --git a/node_modules/nuxt/dist/app/entry.js b/node_modules/nuxt/dist/app/entry.js
index 685d327..e6821aa 100644
--- a/node_modules/nuxt/dist/app/entry.js
+++ b/node_modules/nuxt/dist/app/entry.js
@@ -1,11 +1,12 @@
 import { createApp, createSSRApp, nextTick } from "vue";
 import "#build/fetch.mjs";
+import "#build/global-polyfills.mjs";
 import { applyPlugins, createNuxtApp } from "./nuxt.js";
 import { createError } from "./composables/error.js";
 import "#build/css";
 import plugins from "#build/plugins";
 import RootComponent from "#build/root-component.mjs";
-import { appId, multiApp, vueAppRootContainer } from "#build/nuxt.config.mjs";
+import { appId, appSpaLoaderAttrs, multiApp, spaLoadingTemplateOutside, vueAppRootContainer } from "#build/nuxt.config.mjs";
 let entry;
 if (import.meta.server) {
   entry = async function createNuxtAppServer(ssrContext) {
@@ -16,7 +17,7 @@ if (import.meta.server) {
       await nuxt.hooks.callHook("app:created", vueApp);
     } catch (error) {
       await nuxt.hooks.callHook("app:error", error);
-      nuxt.payload.error = nuxt.payload.error || createError(error);
+      nuxt.payload.error ||= createError(error);
     }
     if (ssrContext?._renderResponse) {
       throw new Error("skipping render");
@@ -40,7 +41,7 @@ if (import.meta.client) {
     const nuxt = createNuxtApp({ vueApp });
     async function handleVueError(error) {
       await nuxt.callHook("app:error", error);
-      nuxt.payload.error = nuxt.payload.error || createError(error);
+      nuxt.payload.error ||= createError(error);
     }
     vueApp.config.errorHandler = handleVueError;
     nuxt.hook("app:suspense:resolve", () => {
@@ -48,6 +49,11 @@ if (import.meta.client) {
         vueApp.config.errorHandler = void 0;
       }
     });
+    if (spaLoadingTemplateOutside && !isSSR && appSpaLoaderAttrs.id) {
+      nuxt.hook("app:suspense:resolve", () => {
+        document.getElementById(appSpaLoaderAttrs.id)?.remove();
+      });
+    }
     try {
       await applyPlugins(nuxt, plugins);
     } catch (err) {
diff --git a/node_modules/nuxt/dist/app/index.d.ts b/node_modules/nuxt/dist/app/index.d.ts
index 8bb4158..ff343b7 100644
--- a/node_modules/nuxt/dist/app/index.d.ts
+++ b/node_modules/nuxt/dist/app/index.d.ts
@@ -1,11 +1,11 @@
 export { applyPlugin, applyPlugins, callWithNuxt, createNuxtApp, defineAppConfig, defineNuxtPlugin, definePayloadPlugin, isNuxtPlugin, registerPluginHooks, tryUseNuxtApp, useNuxtApp, useRuntimeConfig } from './nuxt.js';
 export type { CreateOptions, NuxtApp, NuxtPayload, NuxtPluginIndicator, NuxtSSRContext, ObjectPlugin, Plugin, PluginEnvContext, PluginMeta, ResolvedPluginMeta, RuntimeNuxtHooks } from './nuxt.js';
-export { defineNuxtComponent, useAsyncData, useLazyAsyncData, useNuxtData, refreshNuxtData, clearNuxtData, useHydration, callOnce, useState, clearNuxtState, clearError, createError, isNuxtError, showError, useError, useFetch, useLazyFetch, useCookie, refreshCookie, onPrehydrate, prerenderRoutes, useRequestHeaders, useRequestEvent, useRequestFetch, setResponseStatus, useResponseHeader, onNuxtReady, abortNavigation, addRouteMiddleware, defineNuxtRouteMiddleware, onBeforeRouteLeave, onBeforeRouteUpdate, setPageLayout, navigateTo, useRoute, useRouter, preloadComponents, prefetchComponents, preloadRouteComponents, isPrerendered, loadPayload, preloadPayload, definePayloadReducer, definePayloadReviver, getAppManifest, getRouteRules, reloadNuxtApp, useRequestURL, usePreviewMode, useId, useRouteAnnouncer, useHead, useSeoMeta, useServerSeoMeta, useRuntimeHook } from './composables/index.js';
-export type { AddRouteMiddlewareOptions, AsyncData, AsyncDataOptions, AsyncDataRequestStatus, CookieOptions, CookieRef, FetchResult, NuxtAppManifest, NuxtAppManifestMeta, NuxtError, ReloadNuxtAppOptions, RouteMiddleware, UseFetchOptions } from './composables/index.js';
+export { defineNuxtComponent, useAsyncData, useLazyAsyncData, useNuxtData, refreshNuxtData, clearNuxtData, useHydration, callOnce, useState, clearNuxtState, clearError, createError, isNuxtError, showError, useError, useFetch, useLazyFetch, useCookie, refreshCookie, onPrehydrate, prerenderRoutes, useRequestHeaders, useRequestEvent, useRequestFetch, setResponseStatus, useResponseHeader, onNuxtReady, abortNavigation, addRouteMiddleware, defineNuxtRouteMiddleware, onBeforeRouteLeave, onBeforeRouteUpdate, setPageLayout, navigateTo, useRoute, useRouter, preloadComponents, prefetchComponents, preloadRouteComponents, isPrerendered, loadPayload, preloadPayload, definePayloadReducer, definePayloadReviver, getAppManifest, getRouteRules, reloadNuxtApp, useRequestURL, usePreviewMode, useId, useRouteAnnouncer, useHead, useHeadSafe, useServerSeoMeta, useServerHeadSafe, useServerHead, useSeoMeta, injectHead, useRuntimeHook } from './composables/index.js';
+export type { AddRouteMiddlewareOptions, AsyncData, AsyncDataOptions, AsyncDataRequestStatus, CookieOptions, CookieRef, FetchResult, NuxtAppManifest, NuxtAppManifestMeta, NuxtError, Politeness, ReloadNuxtAppOptions, RouteMiddleware, UseFetchOptions } from './composables/index.js';
 export { defineNuxtLink } from './components/index.js';
-export type { NuxtLinkOptions, NuxtLinkProps } from './components/index.js';
+export type { NuxtLinkOptions, NuxtLinkProps, NuxtTimeProps } from './components/index.js';
 export { _getAppConfig, updateAppConfig, useAppConfig } from './config.js';
 export { cancelIdleCallback, requestIdleCallback } from './compat/idle-callback.js';
-export type { NuxtAppLiterals, NuxtIslandContext, NuxtIslandResponse, NuxtRenderHTMLContext, PageMeta } from './types.js';
+export type { NuxtAppLiterals, NuxtIslandContext, NuxtIslandResponse, NuxtRenderHTMLContext, PageMeta, NuxtPageProps } from './types.js';
 export declare const isVue2 = false;
 export declare const isVue3 = true;
diff --git a/node_modules/nuxt/dist/app/index.js b/node_modules/nuxt/dist/app/index.js
index 7305ce2..87977fa 100644
--- a/node_modules/nuxt/dist/app/index.js
+++ b/node_modules/nuxt/dist/app/index.js
@@ -1,5 +1,5 @@
 export { applyPlugin, applyPlugins, callWithNuxt, createNuxtApp, defineAppConfig, defineNuxtPlugin, definePayloadPlugin, isNuxtPlugin, registerPluginHooks, tryUseNuxtApp, useNuxtApp, useRuntimeConfig } from "./nuxt.js";
-export { defineNuxtComponent, useAsyncData, useLazyAsyncData, useNuxtData, refreshNuxtData, clearNuxtData, useHydration, callOnce, useState, clearNuxtState, clearError, createError, isNuxtError, showError, useError, useFetch, useLazyFetch, useCookie, refreshCookie, onPrehydrate, prerenderRoutes, useRequestHeaders, useRequestEvent, useRequestFetch, setResponseStatus, useResponseHeader, onNuxtReady, abortNavigation, addRouteMiddleware, defineNuxtRouteMiddleware, onBeforeRouteLeave, onBeforeRouteUpdate, setPageLayout, navigateTo, useRoute, useRouter, preloadComponents, prefetchComponents, preloadRouteComponents, isPrerendered, loadPayload, preloadPayload, definePayloadReducer, definePayloadReviver, getAppManifest, getRouteRules, reloadNuxtApp, useRequestURL, usePreviewMode, useId, useRouteAnnouncer, useHead, useSeoMeta, useServerSeoMeta, useRuntimeHook } from "./composables/index.js";
+export { defineNuxtComponent, useAsyncData, useLazyAsyncData, useNuxtData, refreshNuxtData, clearNuxtData, useHydration, callOnce, useState, clearNuxtState, clearError, createError, isNuxtError, showError, useError, useFetch, useLazyFetch, useCookie, refreshCookie, onPrehydrate, prerenderRoutes, useRequestHeaders, useRequestEvent, useRequestFetch, setResponseStatus, useResponseHeader, onNuxtReady, abortNavigation, addRouteMiddleware, defineNuxtRouteMiddleware, onBeforeRouteLeave, onBeforeRouteUpdate, setPageLayout, navigateTo, useRoute, useRouter, preloadComponents, prefetchComponents, preloadRouteComponents, isPrerendered, loadPayload, preloadPayload, definePayloadReducer, definePayloadReviver, getAppManifest, getRouteRules, reloadNuxtApp, useRequestURL, usePreviewMode, useId, useRouteAnnouncer, useHead, useHeadSafe, useServerSeoMeta, useServerHeadSafe, useServerHead, useSeoMeta, injectHead, useRuntimeHook } from "./composables/index.js";
 export { defineNuxtLink } from "./components/index.js";
 export { _getAppConfig, updateAppConfig, useAppConfig } from "./config.js";
 export { cancelIdleCallback, requestIdleCallback } from "./compat/idle-callback.js";
diff --git a/node_modules/nuxt/dist/app/middleware/manifest-route-rule.d.ts b/node_modules/nuxt/dist/app/middleware/manifest-route-rule.d.ts
index 44ae96f..4b0b79d 100644
--- a/node_modules/nuxt/dist/app/middleware/manifest-route-rule.d.ts
+++ b/node_modules/nuxt/dist/app/middleware/manifest-route-rule.d.ts
@@ -1,2 +1,2 @@
-declare const _default: import("../composables/router").RouteMiddleware;
+declare const _default: import("../composables/router.js").RouteMiddleware;
 export default _default;
diff --git a/node_modules/nuxt/dist/app/middleware/manifest-route-rule.js b/node_modules/nuxt/dist/app/middleware/manifest-route-rule.js
index 16609ea..9b0134a 100644
--- a/node_modules/nuxt/dist/app/middleware/manifest-route-rule.js
+++ b/node_modules/nuxt/dist/app/middleware/manifest-route-rule.js
@@ -5,7 +5,7 @@ export default defineNuxtRouteMiddleware(async (to) => {
   if (import.meta.server || import.meta.test) {
     return;
   }
-  const rules = await getRouteRules(to.path);
+  const rules = await getRouteRules({ path: to.path });
   if (rules.redirect) {
     if (hasProtocol(rules.redirect, { acceptRelative: true })) {
       window.location.href = rules.redirect;
diff --git a/node_modules/nuxt/dist/app/nuxt.d.ts b/node_modules/nuxt/dist/app/nuxt.d.ts
index 0546d78..ca8a2b2 100644
--- a/node_modules/nuxt/dist/app/nuxt.d.ts
+++ b/node_modules/nuxt/dist/app/nuxt.d.ts
@@ -3,19 +3,20 @@ import type { RouteLocationNormalizedLoaded } from 'vue-router';
 import type { Hookable } from 'hookable';
 import type { SSRContext, createRenderer } from 'vue-bundle-renderer/runtime';
 import type { EventHandlerRequest, H3Event } from 'h3';
-import type { AppConfig, AppConfigInput, RuntimeConfig } from 'nuxt/schema';
 import type { RenderResponse } from 'nitropack';
 import type { LogObject } from 'consola';
-import type { MergeHead, VueHeadClient } from '@unhead/vue';
-import type { NuxtIslandContext } from '../app/types.js';
-import type { RouteMiddleware } from '../app/composables/router.js';
-import type { NuxtError } from '../app/composables/error.js';
-import type { AsyncDataRequestStatus } from '../app/composables/asyncData.js';
-import type { NuxtAppManifestMeta } from '../app/composables/manifest.js';
-import type { LoadingIndicator } from '../app/composables/loading-indicator.js';
-import type { RouteAnnouncer } from '../app/composables/route-announcer.js';
-import type { DefaultAsyncDataErrorValue, DefaultErrorValue } from '#app/defaults';
-import type { NuxtAppLiterals } from '#app';
+import type { VueHeadClient } from '@unhead/vue/types';
+import type { NuxtAppLiterals } from 'nuxt/app';
+import type { DefaultAsyncDataErrorValue, DefaultErrorValue } from 'nuxt/app/defaults';
+import type { NuxtIslandContext } from './types.js';
+import type { RouteMiddleware } from './composables/router.js';
+import type { NuxtError } from './composables/error.js';
+import type { AsyncDataExecuteOptions, AsyncDataRequestStatus } from './composables/asyncData.js';
+import type { NuxtAppManifestMeta } from './composables/manifest.js';
+import type { LoadingIndicator } from './composables/loading-indicator.js';
+import type { RouteAnnouncer } from './composables/route-announcer.js';
+import type { AppConfig, AppConfigInput, RuntimeConfig } from 'nuxt/schema';
+export declare function getNuxtAppCtx(id?: any): import("unctx/index").UseContext<NuxtApp>;
 type HookResult = Promise<void> | void;
 type AppRenderedContext = {
     ssrContext: NuxtApp['ssrContext'];
@@ -41,7 +42,6 @@ export interface RuntimeNuxtHooks {
     'link:prefetch': (link: string) => HookResult;
     'page:start': (Component?: VNode) => HookResult;
     'page:finish': (Component?: VNode) => HookResult;
-    'page:transition:start': () => HookResult;
     'page:transition:finish': (Component?: VNode) => HookResult;
     'page:view-transition:start': (transition: ViewTransition) => HookResult;
     'page:loading:start': () => HookResult;
@@ -58,7 +58,7 @@ export interface NuxtSSRContext extends SSRContext {
     error?: boolean;
     nuxt: _NuxtApp;
     payload: Partial<NuxtPayload>;
-    head: VueHeadClient<MergeHead>;
+    head: VueHeadClient;
     /** This is used solely to render runtime config with SPA renderer. */
     config?: Pick<RuntimeConfig, 'public' | 'app'>;
     teleports?: Record<string, string>;
@@ -72,6 +72,8 @@ export interface NuxtSSRContext extends SSRContext {
         get<T = unknown>(key: string): Promise<T> | undefined;
         set<T>(key: string, value: Promise<T>): Promise<void>;
     };
+    /** @internal */
+    _preloadManifest?: boolean;
 }
 export interface NuxtPayload {
     path?: string;
@@ -100,11 +102,6 @@ interface _NuxtApp {
      * The id of the Nuxt application.
      * @internal */
     _id: string;
-    /**
-     * The next id that can be used for generating unique ids via `useId`.
-     * @internal
-     */
-    _genId?: number;
     /** @internal */
     _scope: EffectScope;
     /** @internal */
@@ -112,14 +109,22 @@ interface _NuxtApp {
     /** @internal */
     _asyncData: Record<string, {
         data: Ref<unknown>;
-        /**
-         * @deprecated This may be removed in a future major version.
-         */
         pending: Ref<boolean>;
         error: Ref<Error | DefaultAsyncDataErrorValue>;
         status: Ref<AsyncDataRequestStatus>;
+        execute: (opts?: AsyncDataExecuteOptions) => Promise<void>;
         /** @internal */
         _default: () => unknown;
+        /** @internal */
+        _deps: number;
+        /** @internal */
+        _off: () => void;
+        /** @internal */
+        _init: boolean;
+        /** @internal */
+        _execute: (opts?: AsyncDataExecuteOptions) => Promise<void>;
+        /** @internal */
+        _hash?: Record<string, string | undefined>;
     } | undefined>;
     /** @internal */
     _loadingIndicator?: LoadingIndicator;
@@ -139,8 +144,6 @@ interface _NuxtApp {
         observe: (element: Element, callback: () => void) => () => void;
     };
     /** @internal */
-    _payloadCache?: Record<string, Promise<Record<string, any>> | Record<string, any> | null>;
-    /** @internal */
     _appConfig: AppConfig;
     /** @internal */
     _route: RouteLocationNormalizedLoaded;
diff --git a/node_modules/nuxt/dist/app/nuxt.js b/node_modules/nuxt/dist/app/nuxt.js
index 72f3956..765fddf 100644
--- a/node_modules/nuxt/dist/app/nuxt.js
+++ b/node_modules/nuxt/dist/app/nuxt.js
@@ -2,7 +2,7 @@ import { effectScope, getCurrentInstance, getCurrentScope, hasInjectionContext,
 import { createHooks } from "hookable";
 import { getContext } from "unctx";
 import { appId, chunkErrorEvent, multiApp } from "#build/nuxt.config.mjs";
-function getNuxtAppCtx(id = appId || "nuxt-app") {
+export function getNuxtAppCtx(id = appId || "nuxt-app") {
   return getContext(id, {
     asyncContext: !!__NUXT_ASYNC_CONTEXT__ && import.meta.server
   });
@@ -114,12 +114,12 @@ export function createNuxtApp(options) {
     if (chunkErrorEvent) {
       window.addEventListener(chunkErrorEvent, (event) => {
         nuxtApp.callHook("app:chunkError", { error: event.payload });
-        if (nuxtApp.isHydrating || event.payload.message.includes("Unable to preload CSS")) {
+        if (event.payload.message.includes("Unable to preload CSS")) {
           event.preventDefault();
         }
       });
     }
-    window.useNuxtApp = window.useNuxtApp || useNuxtApp;
+    window.useNuxtApp ||= useNuxtApp;
     const unreg = nuxtApp.hook("app:error", (...args) => {
       console.error("[nuxt] error caught during app initialization", ...args);
     });
@@ -145,19 +145,19 @@ export async function applyPlugin(nuxtApp, plugin) {
   }
 }
 export async function applyPlugins(nuxtApp, plugins) {
-  const resolvedPlugins = [];
+  const resolvedPlugins = /* @__PURE__ */ new Set();
   const unresolvedPlugins = [];
   const parallels = [];
-  const errors = [];
+  let error = void 0;
   let promiseDepth = 0;
   async function executePlugin(plugin) {
-    const unresolvedPluginsForThisPlugin = plugin.dependsOn?.filter((name) => plugins.some((p) => p._name === name) && !resolvedPlugins.includes(name)) ?? [];
+    const unresolvedPluginsForThisPlugin = plugin.dependsOn?.filter((name) => plugins.some((p) => p._name === name) && !resolvedPlugins.has(name)) ?? [];
     if (unresolvedPluginsForThisPlugin.length > 0) {
       unresolvedPlugins.push([new Set(unresolvedPluginsForThisPlugin), plugin]);
     } else {
       const promise = applyPlugin(nuxtApp, plugin).then(async () => {
         if (plugin._name) {
-          resolvedPlugins.push(plugin._name);
+          resolvedPlugins.add(plugin._name);
           await Promise.all(unresolvedPlugins.map(async ([dependsOn, unexecutedPlugin]) => {
             if (dependsOn.has(plugin._name)) {
               dependsOn.delete(plugin._name);
@@ -168,9 +168,14 @@ export async function applyPlugins(nuxtApp, plugins) {
             }
           }));
         }
+      }).catch((e) => {
+        if (!plugin.parallel && !nuxtApp.payload.error) {
+          throw e;
+        }
+        error ||= e;
       });
       if (plugin.parallel) {
-        parallels.push(promise.catch((e) => errors.push(e)));
+        parallels.push(promise);
       } else {
         await promise;
       }
@@ -194,8 +199,8 @@ export async function applyPlugins(nuxtApp, plugins) {
       await Promise.all(parallels);
     }
   }
-  if (errors.length) {
-    throw errors[0];
+  if (error) {
+    throw nuxtApp.payload.error || error;
   }
 }
 // @__NO_SIDE_EFFECTS__
@@ -227,7 +232,7 @@ export function tryUseNuxtApp(id) {
   if (hasInjectionContext()) {
     nuxtAppInstance = getCurrentInstance()?.appContext.app.$nuxt;
   }
-  nuxtAppInstance = nuxtAppInstance || getNuxtAppCtx(id).tryUse();
+  nuxtAppInstance ||= getNuxtAppCtx(id).tryUse();
   return nuxtAppInstance || null;
 }
 export function useNuxtApp(id) {
diff --git a/node_modules/nuxt/dist/app/plugins/browser-devtools-timing.client.d.ts b/node_modules/nuxt/dist/app/plugins/browser-devtools-timing.client.d.ts
new file mode 100644
index 0000000..8fe3d6f
--- /dev/null
+++ b/node_modules/nuxt/dist/app/plugins/browser-devtools-timing.client.d.ts
@@ -0,0 +1,2 @@
+declare const _default: import("../nuxt.js").Plugin<Record<string, unknown>> & import("../nuxt.js").ObjectPlugin<Record<string, unknown>>;
+export default _default;
diff --git a/node_modules/nuxt/dist/app/plugins/browser-devtools-timing.client.js b/node_modules/nuxt/dist/app/plugins/browser-devtools-timing.client.js
new file mode 100644
index 0000000..807733b
--- /dev/null
+++ b/node_modules/nuxt/dist/app/plugins/browser-devtools-timing.client.js
@@ -0,0 +1,23 @@
+import { defineNuxtPlugin } from "../nuxt.js";
+export default defineNuxtPlugin({
+  name: "nuxt:browser-devtools-timing",
+  enforce: "pre",
+  setup(nuxtApp) {
+    nuxtApp.hooks.beforeEach((event) => {
+      event.__startTime = performance.now();
+    });
+    nuxtApp.hooks.afterEach((event) => {
+      performance.measure(event.name, {
+        // @ts-expect-error __startTime is not a public API
+        start: event.__startTime,
+        detail: {
+          devtools: {
+            dataType: "track-entry",
+            track: "nuxt",
+            color: "tertiary-dark"
+          }
+        }
+      });
+    });
+  }
+});
diff --git a/node_modules/nuxt/dist/app/plugins/check-if-layout-used.d.ts b/node_modules/nuxt/dist/app/plugins/check-if-layout-used.d.ts
index fa97ee0..8fe3d6f 100644
--- a/node_modules/nuxt/dist/app/plugins/check-if-layout-used.d.ts
+++ b/node_modules/nuxt/dist/app/plugins/check-if-layout-used.d.ts
@@ -1,2 +1,2 @@
-declare const _default: import("../nuxt").Plugin<Record<string, unknown>> & import("../nuxt").ObjectPlugin<Record<string, unknown>>;
+declare const _default: import("../nuxt.js").Plugin<Record<string, unknown>> & import("../nuxt.js").ObjectPlugin<Record<string, unknown>>;
 export default _default;
diff --git a/node_modules/nuxt/dist/app/plugins/check-outdated-build.client.d.ts b/node_modules/nuxt/dist/app/plugins/check-outdated-build.client.d.ts
index fa97ee0..8fe3d6f 100644
--- a/node_modules/nuxt/dist/app/plugins/check-outdated-build.client.d.ts
+++ b/node_modules/nuxt/dist/app/plugins/check-outdated-build.client.d.ts
@@ -1,2 +1,2 @@
-declare const _default: import("../nuxt").Plugin<Record<string, unknown>> & import("../nuxt").ObjectPlugin<Record<string, unknown>>;
+declare const _default: import("../nuxt.js").Plugin<Record<string, unknown>> & import("../nuxt.js").ObjectPlugin<Record<string, unknown>>;
 export default _default;
diff --git a/node_modules/nuxt/dist/app/plugins/chunk-reload-immediate.client.d.ts b/node_modules/nuxt/dist/app/plugins/chunk-reload-immediate.client.d.ts
index fa97ee0..8fe3d6f 100644
--- a/node_modules/nuxt/dist/app/plugins/chunk-reload-immediate.client.d.ts
+++ b/node_modules/nuxt/dist/app/plugins/chunk-reload-immediate.client.d.ts
@@ -1,2 +1,2 @@
-declare const _default: import("../nuxt").Plugin<Record<string, unknown>> & import("../nuxt").ObjectPlugin<Record<string, unknown>>;
+declare const _default: import("../nuxt.js").Plugin<Record<string, unknown>> & import("../nuxt.js").ObjectPlugin<Record<string, unknown>>;
 export default _default;
diff --git a/node_modules/nuxt/dist/app/plugins/chunk-reload-immediate.client.js b/node_modules/nuxt/dist/app/plugins/chunk-reload-immediate.client.js
index e6bdab3..980ac3a 100644
--- a/node_modules/nuxt/dist/app/plugins/chunk-reload-immediate.client.js
+++ b/node_modules/nuxt/dist/app/plugins/chunk-reload-immediate.client.js
@@ -1,17 +1,20 @@
-import { defineNuxtPlugin } from "../nuxt.js";
+import { joinURL } from "ufo";
+import { defineNuxtPlugin, useRuntimeConfig } from "../nuxt.js";
 import { reloadNuxtApp } from "../composables/chunk.js";
 import { addRouteMiddleware } from "../composables/router.js";
-const reloadNuxtApp_ = (path) => {
-  reloadNuxtApp({ persistState: true, path });
-};
 export default defineNuxtPlugin({
   name: "nuxt:chunk-reload-immediate",
   setup(nuxtApp) {
     let currentlyNavigationTo = null;
     addRouteMiddleware((to) => {
-      currentlyNavigationTo = to.path;
+      currentlyNavigationTo = to;
     });
-    nuxtApp.hook("app:chunkError", () => reloadNuxtApp_(currentlyNavigationTo ?? nuxtApp._route.path));
-    nuxtApp.hook("app:manifest:update", () => reloadNuxtApp_(nuxtApp._route.path));
+    const config = useRuntimeConfig();
+    function reloadAppAtPath(to) {
+      const path = joinURL(config.app.baseURL, to.fullPath);
+      reloadNuxtApp({ path, persistState: true });
+    }
+    nuxtApp.hook("app:chunkError", () => reloadAppAtPath(currentlyNavigationTo ?? nuxtApp._route));
+    nuxtApp.hook("app:manifest:update", () => reloadAppAtPath(nuxtApp._route));
   }
 });
diff --git a/node_modules/nuxt/dist/app/plugins/chunk-reload.client.d.ts b/node_modules/nuxt/dist/app/plugins/chunk-reload.client.d.ts
index fa97ee0..8fe3d6f 100644
--- a/node_modules/nuxt/dist/app/plugins/chunk-reload.client.d.ts
+++ b/node_modules/nuxt/dist/app/plugins/chunk-reload.client.d.ts
@@ -1,2 +1,2 @@
-declare const _default: import("../nuxt").Plugin<Record<string, unknown>> & import("../nuxt").ObjectPlugin<Record<string, unknown>>;
+declare const _default: import("../nuxt.js").Plugin<Record<string, unknown>> & import("../nuxt.js").ObjectPlugin<Record<string, unknown>>;
 export default _default;
diff --git a/node_modules/nuxt/dist/app/plugins/chunk-reload.client.js b/node_modules/nuxt/dist/app/plugins/chunk-reload.client.js
index 6192efb..9c50f8d 100644
--- a/node_modules/nuxt/dist/app/plugins/chunk-reload.client.js
+++ b/node_modules/nuxt/dist/app/plugins/chunk-reload.client.js
@@ -15,8 +15,7 @@ export default defineNuxtPlugin({
       chunkErrors.add(error);
     });
     function reloadAppAtPath(to) {
-      const isHash = "href" in to && to.href[0] === "#";
-      const path = isHash ? config.app.baseURL + to.href : joinURL(config.app.baseURL, to.fullPath);
+      const path = joinURL(config.app.baseURL, to.fullPath);
       reloadNuxtApp({ path, persistState: true });
     }
     nuxtApp.hook("app:manifest:update", () => {
diff --git a/node_modules/nuxt/dist/app/plugins/cross-origin-prefetch.client.d.ts b/node_modules/nuxt/dist/app/plugins/cross-origin-prefetch.client.d.ts
index fa97ee0..8fe3d6f 100644
--- a/node_modules/nuxt/dist/app/plugins/cross-origin-prefetch.client.d.ts
+++ b/node_modules/nuxt/dist/app/plugins/cross-origin-prefetch.client.d.ts
@@ -1,2 +1,2 @@
-declare const _default: import("../nuxt").Plugin<Record<string, unknown>> & import("../nuxt").ObjectPlugin<Record<string, unknown>>;
+declare const _default: import("../nuxt.js").Plugin<Record<string, unknown>> & import("../nuxt.js").ObjectPlugin<Record<string, unknown>>;
 export default _default;
diff --git a/node_modules/nuxt/dist/app/plugins/cross-origin-prefetch.client.js b/node_modules/nuxt/dist/app/plugins/cross-origin-prefetch.client.js
index ad65a3c..45904d9 100644
--- a/node_modules/nuxt/dist/app/plugins/cross-origin-prefetch.client.js
+++ b/node_modules/nuxt/dist/app/plugins/cross-origin-prefetch.client.js
@@ -1,7 +1,7 @@
 import { ref } from "vue";
-import { useHead } from "@unhead/vue";
 import { defineNuxtPlugin } from "../nuxt.js";
-const SUPPORTED_PROTOCOLS = ["http:", "https:"];
+import { useHead } from "../composables/head.js";
+const SUPPORTED_PROTOCOLS = /* @__PURE__ */ new Set(["http:", "https:"]);
 export default defineNuxtPlugin({
   name: "nuxt:cross-origin-prefetch",
   setup(nuxtApp) {
@@ -25,11 +25,12 @@ export default defineNuxtPlugin({
       script: [generateRules()]
     });
     nuxtApp.hook("link:prefetch", (url) => {
-      if (SUPPORTED_PROTOCOLS.some((p) => url.startsWith(p)) && SUPPORTED_PROTOCOLS.includes(new URL(url).protocol)) {
-        externalURLs.value.add(url);
-        head?.patch({
-          script: [generateRules()]
-        });
+      for (const protocol of SUPPORTED_PROTOCOLS) {
+        if (url.startsWith(protocol) && SUPPORTED_PROTOCOLS.has(new URL(url).protocol)) {
+          externalURLs.value.add(url);
+          head?.patch({ script: [generateRules()] });
+          return;
+        }
       }
     });
   }
diff --git a/node_modules/nuxt/dist/app/plugins/debug-hooks.d.ts b/node_modules/nuxt/dist/app/plugins/debug-hooks.d.ts
new file mode 100644
index 0000000..8fe3d6f
--- /dev/null
+++ b/node_modules/nuxt/dist/app/plugins/debug-hooks.d.ts
@@ -0,0 +1,2 @@
+declare const _default: import("../nuxt.js").Plugin<Record<string, unknown>> & import("../nuxt.js").ObjectPlugin<Record<string, unknown>>;
+export default _default;
diff --git a/node_modules/nuxt/dist/app/plugins/debug.js b/node_modules/nuxt/dist/app/plugins/debug-hooks.js
similarity index 88%
rename from node_modules/nuxt/dist/app/plugins/debug.js
rename to node_modules/nuxt/dist/app/plugins/debug-hooks.js
index b18b7a4..2db88a0 100644
--- a/node_modules/nuxt/dist/app/plugins/debug.js
+++ b/node_modules/nuxt/dist/app/plugins/debug-hooks.js
@@ -1,7 +1,7 @@
 import { createDebugger } from "hookable";
 import { defineNuxtPlugin } from "../nuxt.js";
 export default defineNuxtPlugin({
-  name: "nuxt:debug",
+  name: "nuxt:debug:hooks",
   enforce: "pre",
   setup(nuxtApp) {
     createDebugger(nuxtApp.hooks, { tag: "nuxt-app" });
diff --git a/node_modules/nuxt/dist/app/plugins/debug.d.ts b/node_modules/nuxt/dist/app/plugins/debug.d.ts
deleted file mode 100644
index fa97ee0..0000000
--- a/node_modules/nuxt/dist/app/plugins/debug.d.ts
+++ /dev/null
@@ -1,2 +0,0 @@
-declare const _default: import("../nuxt").Plugin<Record<string, unknown>> & import("../nuxt").ObjectPlugin<Record<string, unknown>>;
-export default _default;
diff --git a/node_modules/nuxt/dist/app/plugins/dev-server-logs.d.ts b/node_modules/nuxt/dist/app/plugins/dev-server-logs.d.ts
index fa97ee0..8fe3d6f 100644
--- a/node_modules/nuxt/dist/app/plugins/dev-server-logs.d.ts
+++ b/node_modules/nuxt/dist/app/plugins/dev-server-logs.d.ts
@@ -1,2 +1,2 @@
-declare const _default: import("../nuxt").Plugin<Record<string, unknown>> & import("../nuxt").ObjectPlugin<Record<string, unknown>>;
+declare const _default: import("../nuxt.js").Plugin<Record<string, unknown>> & import("../nuxt.js").ObjectPlugin<Record<string, unknown>>;
 export default _default;
diff --git a/node_modules/nuxt/dist/app/plugins/navigation-repaint.client.d.ts b/node_modules/nuxt/dist/app/plugins/navigation-repaint.client.d.ts
index fa97ee0..8fe3d6f 100644
--- a/node_modules/nuxt/dist/app/plugins/navigation-repaint.client.d.ts
+++ b/node_modules/nuxt/dist/app/plugins/navigation-repaint.client.d.ts
@@ -1,2 +1,2 @@
-declare const _default: import("../nuxt").Plugin<Record<string, unknown>> & import("../nuxt").ObjectPlugin<Record<string, unknown>>;
+declare const _default: import("../nuxt.js").Plugin<Record<string, unknown>> & import("../nuxt.js").ObjectPlugin<Record<string, unknown>>;
 export default _default;
diff --git a/node_modules/nuxt/dist/app/plugins/payload.client.d.ts b/node_modules/nuxt/dist/app/plugins/payload.client.d.ts
index fa97ee0..8fe3d6f 100644
--- a/node_modules/nuxt/dist/app/plugins/payload.client.d.ts
+++ b/node_modules/nuxt/dist/app/plugins/payload.client.d.ts
@@ -1,2 +1,2 @@
-declare const _default: import("../nuxt").Plugin<Record<string, unknown>> & import("../nuxt").ObjectPlugin<Record<string, unknown>>;
+declare const _default: import("../nuxt.js").Plugin<Record<string, unknown>> & import("../nuxt.js").ObjectPlugin<Record<string, unknown>>;
 export default _default;
diff --git a/node_modules/nuxt/dist/app/plugins/payload.client.js b/node_modules/nuxt/dist/app/plugins/payload.client.js
index 756cfc0..fd5088d 100644
--- a/node_modules/nuxt/dist/app/plugins/payload.client.js
+++ b/node_modules/nuxt/dist/app/plugins/payload.client.js
@@ -3,13 +3,14 @@ import { loadPayload } from "../composables/payload.js";
 import { onNuxtReady } from "../composables/ready.js";
 import { useRouter } from "../composables/router.js";
 import { getAppManifest } from "../composables/manifest.js";
-import { appManifest as isAppManifestEnabled } from "#build/nuxt.config.mjs";
+import { appManifest as isAppManifestEnabled, purgeCachedData } from "#build/nuxt.config.mjs";
 export default defineNuxtPlugin({
   name: "nuxt:payload",
   setup(nuxtApp) {
     if (import.meta.dev) {
       return;
     }
+    const staticKeysToRemove = /* @__PURE__ */ new Set();
     useRouter().beforeResolve(async (to, from) => {
       if (to.path === from.path) {
         return;
@@ -18,13 +19,27 @@ export default defineNuxtPlugin({
       if (!payload) {
         return;
       }
-      Object.assign(nuxtApp.static.data, payload.data);
+      if (purgeCachedData) {
+        for (const key of staticKeysToRemove) {
+          delete nuxtApp.static.data[key];
+        }
+      }
+      for (const key in payload.data) {
+        if (purgeCachedData) {
+          if (!(key in nuxtApp.static.data)) {
+            staticKeysToRemove.add(key);
+          }
+        }
+        nuxtApp.static.data[key] = payload.data[key];
+      }
     });
     onNuxtReady(() => {
       nuxtApp.hooks.hook("link:prefetch", async (url) => {
         const { hostname } = new URL(url, window.location.href);
         if (hostname === window.location.hostname) {
-          await loadPayload(url);
+          await loadPayload(url).catch(() => {
+            console.warn("[nuxt] Error preloading payload for", url);
+          });
         }
       });
       if (isAppManifestEnabled && navigator.connection?.effectiveType !== "slow-2g") {
diff --git a/node_modules/nuxt/dist/app/plugins/preload.server.d.ts b/node_modules/nuxt/dist/app/plugins/preload.server.d.ts
index fa97ee0..8fe3d6f 100644
--- a/node_modules/nuxt/dist/app/plugins/preload.server.d.ts
+++ b/node_modules/nuxt/dist/app/plugins/preload.server.d.ts
@@ -1,2 +1,2 @@
-declare const _default: import("../nuxt").Plugin<Record<string, unknown>> & import("../nuxt").ObjectPlugin<Record<string, unknown>>;
+declare const _default: import("../nuxt.js").Plugin<Record<string, unknown>> & import("../nuxt.js").ObjectPlugin<Record<string, unknown>>;
 export default _default;
diff --git a/node_modules/nuxt/dist/app/plugins/restore-state.client.d.ts b/node_modules/nuxt/dist/app/plugins/restore-state.client.d.ts
index fa97ee0..8fe3d6f 100644
--- a/node_modules/nuxt/dist/app/plugins/restore-state.client.d.ts
+++ b/node_modules/nuxt/dist/app/plugins/restore-state.client.d.ts
@@ -1,2 +1,2 @@
-declare const _default: import("../nuxt").Plugin<Record<string, unknown>> & import("../nuxt").ObjectPlugin<Record<string, unknown>>;
+declare const _default: import("../nuxt.js").Plugin<Record<string, unknown>> & import("../nuxt.js").ObjectPlugin<Record<string, unknown>>;
 export default _default;
diff --git a/node_modules/nuxt/dist/app/plugins/revive-payload.client.d.ts b/node_modules/nuxt/dist/app/plugins/revive-payload.client.d.ts
index fa97ee0..8fe3d6f 100644
--- a/node_modules/nuxt/dist/app/plugins/revive-payload.client.d.ts
+++ b/node_modules/nuxt/dist/app/plugins/revive-payload.client.d.ts
@@ -1,2 +1,2 @@
-declare const _default: import("../nuxt").Plugin<Record<string, unknown>> & import("../nuxt").ObjectPlugin<Record<string, unknown>>;
+declare const _default: import("../nuxt.js").Plugin<Record<string, unknown>> & import("../nuxt.js").ObjectPlugin<Record<string, unknown>>;
 export default _default;
diff --git a/node_modules/nuxt/dist/app/plugins/revive-payload.client.js b/node_modules/nuxt/dist/app/plugins/revive-payload.client.js
index 26480ce..cc297aa 100644
--- a/node_modules/nuxt/dist/app/plugins/revive-payload.client.js
+++ b/node_modules/nuxt/dist/app/plugins/revive-payload.client.js
@@ -17,7 +17,7 @@ if (componentIslands) {
   revivers.push(["Island", ({ key, params, result }) => {
     const nuxtApp = useNuxtApp();
     if (!nuxtApp.isHydrating) {
-      nuxtApp.payload.data[key] = nuxtApp.payload.data[key] || $fetch(`/__nuxt_island/${key}.json`, {
+      nuxtApp.payload.data[key] ||= $fetch(`/__nuxt_island/${key}.json`, {
         responseType: "json",
         ...params ? { params } : {}
       }).then((r) => {
diff --git a/node_modules/nuxt/dist/app/plugins/revive-payload.server.d.ts b/node_modules/nuxt/dist/app/plugins/revive-payload.server.d.ts
index fa97ee0..8fe3d6f 100644
--- a/node_modules/nuxt/dist/app/plugins/revive-payload.server.d.ts
+++ b/node_modules/nuxt/dist/app/plugins/revive-payload.server.d.ts
@@ -1,2 +1,2 @@
-declare const _default: import("../nuxt").Plugin<Record<string, unknown>> & import("../nuxt").ObjectPlugin<Record<string, unknown>>;
+declare const _default: import("../nuxt.js").Plugin<Record<string, unknown>> & import("../nuxt.js").ObjectPlugin<Record<string, unknown>>;
 export default _default;
diff --git a/node_modules/nuxt/dist/app/plugins/router.d.ts b/node_modules/nuxt/dist/app/plugins/router.d.ts
index cc86b29..b0314f6 100644
--- a/node_modules/nuxt/dist/app/plugins/router.d.ts
+++ b/node_modules/nuxt/dist/app/plugins/router.d.ts
@@ -49,10 +49,10 @@ interface Router {
     hasRoute: (name: string) => boolean;
     removeRoute: (name: string) => void;
 }
-declare const _default: import("../nuxt").Plugin<{
+declare const _default: import("../nuxt.js").Plugin<{
     route: Route;
     router: Router;
-}> & import("../nuxt").ObjectPlugin<{
+}> & import("../nuxt.js").ObjectPlugin<{
     route: Route;
     router: Router;
 }>;
diff --git a/node_modules/nuxt/dist/app/plugins/router.js b/node_modules/nuxt/dist/app/plugins/router.js
index 2fed519..b0a6d08 100644
--- a/node_modules/nuxt/dist/app/plugins/router.js
+++ b/node_modules/nuxt/dist/app/plugins/router.js
@@ -8,6 +8,7 @@ import { navigateTo } from "../composables/router.js";
 import { globalMiddleware } from "#build/middleware";
 import { appManifest as isAppManifestEnabled } from "#build/nuxt.config.mjs";
 function getRouteFromPath(fullPath) {
+  const route = fullPath && typeof fullPath === "object" ? fullPath : {};
   if (typeof fullPath === "object") {
     fullPath = stringifyParsedURL({
       pathname: fullPath.path || "",
@@ -22,11 +23,11 @@ function getRouteFromPath(fullPath) {
     query: parseQuery(url.search),
     hash: url.hash,
     // stub properties for compat with vue-router
-    params: {},
+    params: route.params || {},
     name: void 0,
-    matched: [],
+    matched: route.matched || [],
     redirectedFrom: void 0,
-    meta: {},
+    meta: route.meta || {},
     href: fullPath
   };
 }
@@ -146,7 +147,7 @@ export default defineNuxtPlugin({
       });
     }
     nuxtApp._route = route;
-    nuxtApp._middleware = nuxtApp._middleware || {
+    nuxtApp._middleware ||= {
       global: [],
       named: {}
     };
@@ -161,7 +162,7 @@ export default defineNuxtPlugin({
         if (import.meta.client || !nuxtApp.ssrContext?.islandContext) {
           const middlewareEntries = /* @__PURE__ */ new Set([...globalMiddleware, ...nuxtApp._middleware.global]);
           if (isAppManifestEnabled) {
-            const routeRules = await nuxtApp.runWithContext(() => getRouteRules(to.path));
+            const routeRules = await nuxtApp.runWithContext(() => getRouteRules({ path: to.path }));
             if (routeRules.appMiddleware) {
               for (const key in routeRules.appMiddleware) {
                 const guard = nuxtApp._middleware.named[key];
diff --git a/node_modules/nuxt/dist/app/plugins/view-transitions.client.d.ts b/node_modules/nuxt/dist/app/plugins/view-transitions.client.d.ts
index fa97ee0..8fe3d6f 100644
--- a/node_modules/nuxt/dist/app/plugins/view-transitions.client.d.ts
+++ b/node_modules/nuxt/dist/app/plugins/view-transitions.client.d.ts
@@ -1,2 +1,2 @@
-declare const _default: import("../nuxt").Plugin<Record<string, unknown>> & import("../nuxt").ObjectPlugin<Record<string, unknown>>;
+declare const _default: import("../nuxt.js").Plugin<Record<string, unknown>> & import("../nuxt.js").ObjectPlugin<Record<string, unknown>>;
 export default _default;
diff --git a/node_modules/nuxt/dist/app/plugins/view-transitions.client.js b/node_modules/nuxt/dist/app/plugins/view-transitions.client.js
index f6e16b1..fa604a7 100644
--- a/node_modules/nuxt/dist/app/plugins/view-transitions.client.js
+++ b/node_modules/nuxt/dist/app/plugins/view-transitions.client.js
@@ -6,14 +6,28 @@ export default defineNuxtPlugin((nuxtApp) => {
   if (!document.startViewTransition) {
     return;
   }
+  let transition;
+  let hasUAVisualTransition = false;
   let finishTransition;
   let abortTransition;
+  const resetTransitionState = () => {
+    transition = void 0;
+    hasUAVisualTransition = false;
+    abortTransition = void 0;
+    finishTransition = void 0;
+  };
+  window.addEventListener("popstate", (event) => {
+    hasUAVisualTransition = event.hasUAVisualTransition;
+    if (hasUAVisualTransition) {
+      transition?.skipTransition();
+    }
+  });
   const router = useRouter();
   router.beforeResolve(async (to, from) => {
     const viewTransitionMode = to.meta.viewTransition ?? defaultViewTransition;
     const prefersReducedMotion = window.matchMedia("(prefers-reduced-motion: reduce)").matches;
     const prefersNoTransition = prefersReducedMotion && viewTransitionMode !== "always";
-    if (viewTransitionMode === false || prefersNoTransition || !isChangingPage(to, from)) {
+    if (viewTransitionMode === false || prefersNoTransition || hasUAVisualTransition || !isChangingPage(to, from)) {
       return;
     }
     const promise = new Promise((resolve, reject) => {
@@ -22,23 +36,20 @@ export default defineNuxtPlugin((nuxtApp) => {
     });
     let changeRoute;
     const ready = new Promise((resolve) => changeRoute = resolve);
-    const transition = document.startViewTransition(() => {
+    transition = document.startViewTransition(() => {
       changeRoute();
       return promise;
     });
-    transition.finished.then(() => {
-      abortTransition = void 0;
-      finishTransition = void 0;
-    });
+    transition.finished.then(resetTransitionState);
     await nuxtApp.callHook("page:view-transition:start", transition);
     return ready;
   });
   nuxtApp.hook("vue:error", () => {
     abortTransition?.();
-    abortTransition = void 0;
+    resetTransitionState();
   });
   nuxtApp.hook("page:finish", () => {
     finishTransition?.();
-    finishTransition = void 0;
+    resetTransitionState();
   });
 });
diff --git a/node_modules/nuxt/dist/app/types.d.ts b/node_modules/nuxt/dist/app/types.d.ts
index 959a3df..4df9fc9 100644
--- a/node_modules/nuxt/dist/app/types.d.ts
+++ b/node_modules/nuxt/dist/app/types.d.ts
@@ -1,5 +1,6 @@
-export type { PageMeta } from '../pages/runtime/index.js';
+export type { PageMeta, NuxtPageProps } from '../pages/runtime/index.js';
 export interface NuxtAppLiterals {
     [key: string]: string;
 }
-export type { NuxtIslandContext, NuxtIslandResponse, NuxtRenderHTMLContext } from '../core/runtime/nitro/renderer.js';
+export type { NuxtRenderHTMLContext } from '../core/runtime/nitro/handlers/renderer.js';
+export type { NuxtIslandResponse, NuxtIslandContext } from '../core/runtime/nitro/utils/renderer/islands.js';
diff --git a/node_modules/nuxt/dist/app/types/augments.d.ts b/node_modules/nuxt/dist/app/types/augments.d.ts
index 5e5dd8c..8c7053b 100644
--- a/node_modules/nuxt/dist/app/types/augments.d.ts
+++ b/node_modules/nuxt/dist/app/types/augments.d.ts
@@ -1,5 +1,5 @@
-import type { UseHeadInput } from '@unhead/vue'
-import type { NuxtApp, useNuxtApp } from '../nuxt'
+import type { UseHeadInput } from '@unhead/vue/types'
+import type { NuxtApp, useNuxtApp } from '../nuxt.js'
 
 declare global {
   namespace NodeJS {
@@ -42,6 +42,7 @@ declare module 'vue' {
   interface ComponentInternalInstance {
     _nuxtOnBeforeMountCbs: Array<() => void | Promise<void>>
     _nuxtIdIndex?: Record<string, number>
+    _nuxtClientOnly?: boolean
   }
   interface ComponentCustomOptions {
     /**
diff --git a/node_modules/nuxt/dist/chunks/features.mjs b/node_modules/nuxt/dist/chunks/features.mjs
deleted file mode 100644
index c9dcf90..0000000
--- a/node_modules/nuxt/dist/chunks/features.mjs
+++ /dev/null
@@ -1,54 +0,0 @@
-import { addDependency } from 'nypm';
-import { resolvePackageJSON } from 'pkg-types';
-import { useNuxt, logger } from '@nuxt/kit';
-import { isCI, provider } from 'std-env';
-
-const isStackblitz = provider === "stackblitz";
-async function promptToInstall(name, installCommand, options) {
-  if (await resolvePackageJSON(name, { url: options.searchPaths }).catch(() => null)) {
-    return true;
-  }
-  logger.info(`Package ${name} is missing`);
-  if (isCI) {
-    return false;
-  }
-  if (options.prompt === true || options.prompt !== false && !isStackblitz) {
-    const confirm = await logger.prompt(`Do you want to install ${name} package?`, {
-      type: "confirm",
-      name: "confirm",
-      initial: true
-    });
-    if (!confirm) {
-      return false;
-    }
-  }
-  logger.info(`Installing ${name}...`);
-  try {
-    await installCommand();
-    logger.success(`Installed ${name}`);
-    return true;
-  } catch (err) {
-    logger.error(err);
-    return false;
-  }
-}
-const installPrompts = /* @__PURE__ */ new Set();
-function installNuxtModule(name, options) {
-  if (installPrompts.has(name)) {
-    return;
-  }
-  installPrompts.add(name);
-  const nuxt = useNuxt();
-  return promptToInstall(name, async () => {
-    const { runCommand } = await import('nuxi');
-    await runCommand("module", ["add", name, "--cwd", nuxt.options.rootDir]);
-  }, { rootDir: nuxt.options.rootDir, searchPaths: nuxt.options.modulesDir, ...options });
-}
-function ensurePackageInstalled(name, options) {
-  return promptToInstall(name, () => addDependency(name, {
-    cwd: options.rootDir,
-    dev: true
-  }), options);
-}
-
-export { ensurePackageInstalled, installNuxtModule };
diff --git a/node_modules/nuxt/dist/components/runtime/client-component.d.ts b/node_modules/nuxt/dist/components/runtime/client-component.d.ts
index 9f817c0..c8678cb 100644
--- a/node_modules/nuxt/dist/components/runtime/client-component.d.ts
+++ b/node_modules/nuxt/dist/components/runtime/client-component.d.ts
@@ -1,4 +1,2 @@
 import type { AsyncComponentLoader } from 'vue';
-export declare const createClientPage: (loader: AsyncComponentLoader) => import("vue").DefineComponent<{}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
-    [key: string]: any;
-}>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export declare function createClientPage(loader: AsyncComponentLoader): Promise<any>;
diff --git a/node_modules/nuxt/dist/components/runtime/client-component.js b/node_modules/nuxt/dist/components/runtime/client-component.js
index 2f0e6e4..373bc8c 100644
--- a/node_modules/nuxt/dist/components/runtime/client-component.js
+++ b/node_modules/nuxt/dist/components/runtime/client-component.js
@@ -1,18 +1,59 @@
-import { defineAsyncComponent, defineComponent, h } from "vue";
-import ClientOnly from "#app/components/client-only";
-export const createClientPage = /* @__NO_SIDE_EFFECTS__ */ (loader) => {
-  const page = defineAsyncComponent(import.meta.dev ? () => loader().then((m) => {
-    (m.default || m).__clientOnlyPage = true;
-    return m.default || m;
-  }) : loader);
-  return defineComponent({
-    inheritAttrs: false,
-    setup(_, { attrs }) {
-      return () => h("div", [
-        h(ClientOnly, void 0, {
-          default: () => h(page, attrs)
-        })
-      ]);
+import { getCurrentInstance, h, onMounted, provide, shallowRef } from "vue";
+import { isPromise } from "@vue/shared";
+import { useNuxtApp } from "#app/nuxt";
+import ServerPlaceholder from "#app/components/server-placeholder";
+import { clientOnlySymbol } from "#app/components/client-only";
+// @__NO_SIDE_EFFECTS__
+export async function createClientPage(loader) {
+  const m = await loader();
+  const c = m.default || m;
+  if (import.meta.dev) {
+    c.__clientOnlyPage = true;
+  }
+  return pageToClientOnly(c);
+}
+const cache = /* @__PURE__ */ new WeakMap();
+function pageToClientOnly(component) {
+  if (import.meta.server) {
+    return ServerPlaceholder;
+  }
+  if (cache.has(component)) {
+    return cache.get(component);
+  }
+  const clone = { ...component };
+  if (clone.render) {
+    clone.render = (ctx, cache2, $props, $setup, $data, $options) => $setup.mounted$ ?? ctx.mounted$ ? h(component.render?.bind(ctx)(ctx, cache2, $props, $setup, $data, $options)) : h("div");
+  } else {
+    clone.template &&= `
+      <template v-if="mounted$">${component.template}</template>
+      <template v-else><div></div></template>
+    `;
+  }
+  clone.setup = (props, ctx) => {
+    const nuxtApp = useNuxtApp();
+    const mounted$ = shallowRef(nuxtApp.isHydrating === false);
+    provide(clientOnlySymbol, true);
+    const vm = getCurrentInstance();
+    if (vm) {
+      vm._nuxtClientOnly = true;
     }
-  });
-};
+    onMounted(() => {
+      mounted$.value = true;
+    });
+    const setupState = component.setup?.(props, ctx) || {};
+    if (isPromise(setupState)) {
+      return Promise.resolve(setupState).then((setupState2) => {
+        if (typeof setupState2 !== "function") {
+          setupState2 ||= {};
+          setupState2.mounted$ = mounted$;
+          return setupState2;
+        }
+        return (...args) => mounted$.value || !nuxtApp.isHydrating ? h(setupState2(...args)) : h("div");
+      });
+    } else {
+      return typeof setupState === "function" ? (...args) => mounted$.value || !nuxtApp.isHydrating ? h(setupState(...args)) : h("div") : Object.assign(setupState, { mounted$ });
+    }
+  };
+  cache.set(component, clone);
+  return clone;
+}
diff --git a/node_modules/nuxt/dist/components/runtime/lazy-hydrated-component.d.ts b/node_modules/nuxt/dist/components/runtime/lazy-hydrated-component.d.ts
new file mode 100644
index 0000000..3a58c8d
--- /dev/null
+++ b/node_modules/nuxt/dist/components/runtime/lazy-hydrated-component.d.ts
@@ -0,0 +1,124 @@
+import type { AsyncComponentLoader, ExtractPropTypes } from 'vue';
+export declare const createLazyVisibleComponent: (id: string, loader: AsyncComponentLoader) => import("vue").DefineComponent<ExtractPropTypes<{
+    hydrateOnVisible: {
+        type: () => true | IntersectionObserverInit;
+        required: false;
+        default: boolean;
+    };
+}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
+    [key: string]: any;
+}>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "hydrated"[], "hydrated", import("vue").PublicProps, Readonly<ExtractPropTypes<{
+    hydrateOnVisible: {
+        type: () => true | IntersectionObserverInit;
+        required: false;
+        default: boolean;
+    };
+}>> & Readonly<{
+    onHydrated?: ((...args: any[]) => any) | undefined;
+}>, {
+    hydrateOnVisible: true | IntersectionObserverInit;
+}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export declare const createLazyIdleComponent: (id: string, loader: AsyncComponentLoader) => import("vue").DefineComponent<ExtractPropTypes<{
+    hydrateOnIdle: {
+        type: () => true | number;
+        required: false;
+        default: boolean;
+    };
+}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
+    [key: string]: any;
+}>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "hydrated"[], "hydrated", import("vue").PublicProps, Readonly<ExtractPropTypes<{
+    hydrateOnIdle: {
+        type: () => true | number;
+        required: false;
+        default: boolean;
+    };
+}>> & Readonly<{
+    onHydrated?: ((...args: any[]) => any) | undefined;
+}>, {
+    hydrateOnIdle: number | true;
+}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export declare const createLazyInteractionComponent: (id: string, loader: AsyncComponentLoader) => import("vue").DefineComponent<ExtractPropTypes<{
+    hydrateOnInteraction: {
+        type: () => keyof HTMLElementEventMap | Array<keyof HTMLElementEventMap> | true;
+        required: false;
+        default: ("click" | "focus" | "pointerenter")[];
+    };
+}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
+    [key: string]: any;
+}>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "hydrated"[], "hydrated", import("vue").PublicProps, Readonly<ExtractPropTypes<{
+    hydrateOnInteraction: {
+        type: () => keyof HTMLElementEventMap | Array<keyof HTMLElementEventMap> | true;
+        required: false;
+        default: ("click" | "focus" | "pointerenter")[];
+    };
+}>> & Readonly<{
+    onHydrated?: ((...args: any[]) => any) | undefined;
+}>, {
+    hydrateOnInteraction: true | keyof HTMLElementEventMap | (keyof HTMLElementEventMap)[];
+}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export declare const createLazyMediaQueryComponent: (id: string, loader: AsyncComponentLoader) => import("vue").DefineComponent<ExtractPropTypes<{
+    hydrateOnMediaQuery: {
+        type: () => string;
+        required: true;
+    };
+}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
+    [key: string]: any;
+}>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "hydrated"[], "hydrated", import("vue").PublicProps, Readonly<ExtractPropTypes<{
+    hydrateOnMediaQuery: {
+        type: () => string;
+        required: true;
+    };
+}>> & Readonly<{
+    onHydrated?: ((...args: any[]) => any) | undefined;
+}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export declare const createLazyIfComponent: (id: string, loader: AsyncComponentLoader) => import("vue").DefineComponent<ExtractPropTypes<{
+    hydrateWhen: {
+        type: BooleanConstructor;
+        default: boolean;
+    };
+}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
+    [key: string]: any;
+}>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "hydrated"[], "hydrated", import("vue").PublicProps, Readonly<ExtractPropTypes<{
+    hydrateWhen: {
+        type: BooleanConstructor;
+        default: boolean;
+    };
+}>> & Readonly<{
+    onHydrated?: ((...args: any[]) => any) | undefined;
+}>, {
+    hydrateWhen: boolean;
+}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export declare const createLazyTimeComponent: (id: string, loader: AsyncComponentLoader) => import("vue").DefineComponent<ExtractPropTypes<{
+    hydrateAfter: {
+        type: NumberConstructor;
+        required: true;
+    };
+}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
+    [key: string]: any;
+}>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "hydrated"[], "hydrated", import("vue").PublicProps, Readonly<ExtractPropTypes<{
+    hydrateAfter: {
+        type: NumberConstructor;
+        required: true;
+    };
+}>> & Readonly<{
+    onHydrated?: ((...args: any[]) => any) | undefined;
+}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export declare const createLazyNeverComponent: (id: string, loader: AsyncComponentLoader) => import("vue").DefineComponent<ExtractPropTypes<{
+    hydrateNever: {
+        type: () => true;
+        required: false;
+        default: boolean;
+    };
+}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
+    [key: string]: any;
+}>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "hydrated"[], "hydrated", import("vue").PublicProps, Readonly<ExtractPropTypes<{
+    hydrateNever: {
+        type: () => true;
+        required: false;
+        default: boolean;
+    };
+}>> & Readonly<{
+    onHydrated?: ((...args: any[]) => any) | undefined;
+}>, {
+    hydrateNever: true;
+}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
diff --git a/node_modules/nuxt/dist/components/runtime/lazy-hydrated-component.js b/node_modules/nuxt/dist/components/runtime/lazy-hydrated-component.js
new file mode 100644
index 0000000..71efec3
--- /dev/null
+++ b/node_modules/nuxt/dist/components/runtime/lazy-hydrated-component.js
@@ -0,0 +1,102 @@
+import { defineAsyncComponent, defineComponent, h, hydrateOnIdle, hydrateOnInteraction, hydrateOnMediaQuery, hydrateOnVisible, mergeProps, watch } from "vue";
+import { useNuxtApp } from "#app/nuxt";
+function defineLazyComponent(props, defineStrategy) {
+  return (id, loader) => defineComponent({
+    inheritAttrs: false,
+    props,
+    emits: ["hydrated"],
+    setup(props2, ctx) {
+      if (import.meta.server) {
+        const nuxtApp = useNuxtApp();
+        nuxtApp.hook("app:rendered", ({ ssrContext }) => {
+          ssrContext.modules.delete(id);
+        });
+      }
+      const child = defineAsyncComponent({ loader });
+      const comp = defineAsyncComponent({
+        hydrate: defineStrategy(props2),
+        loader: () => Promise.resolve(child)
+      });
+      const onVnodeMounted = () => {
+        ctx.emit("hydrated");
+      };
+      return () => h(comp, mergeProps(ctx.attrs, { onVnodeMounted }), ctx.slots);
+    }
+  });
+}
+export const createLazyVisibleComponent = defineLazyComponent(
+  {
+    hydrateOnVisible: {
+      type: [Object, Boolean],
+      required: false,
+      default: true
+    }
+  },
+  (props) => hydrateOnVisible(props.hydrateOnVisible === true ? void 0 : props.hydrateOnVisible)
+);
+export const createLazyIdleComponent = defineLazyComponent(
+  {
+    hydrateOnIdle: {
+      type: [Number, Boolean],
+      required: false,
+      default: true
+    }
+  },
+  (props) => props.hydrateOnIdle === 0 ? void 0 : hydrateOnIdle(props.hydrateOnIdle === true ? void 0 : props.hydrateOnIdle)
+);
+const defaultInteractionEvents = ["pointerenter", "click", "focus"];
+export const createLazyInteractionComponent = defineLazyComponent(
+  {
+    hydrateOnInteraction: {
+      type: [String, Array],
+      required: false,
+      default: defaultInteractionEvents
+    }
+  },
+  (props) => hydrateOnInteraction(props.hydrateOnInteraction === true ? defaultInteractionEvents : props.hydrateOnInteraction || defaultInteractionEvents)
+);
+export const createLazyMediaQueryComponent = defineLazyComponent(
+  {
+    hydrateOnMediaQuery: {
+      type: String,
+      required: true
+    }
+  },
+  (props) => hydrateOnMediaQuery(props.hydrateOnMediaQuery)
+);
+export const createLazyIfComponent = defineLazyComponent(
+  {
+    hydrateWhen: {
+      type: Boolean,
+      default: true
+    }
+  },
+  (props) => props.hydrateWhen ? void 0 : (hydrate) => {
+    const unwatch = watch(() => props.hydrateWhen, () => hydrate(), { once: true });
+    return () => unwatch();
+  }
+);
+export const createLazyTimeComponent = defineLazyComponent(
+  {
+    hydrateAfter: {
+      type: Number,
+      required: true
+    }
+  },
+  (props) => props.hydrateAfter === 0 ? void 0 : (hydrate) => {
+    const id = setTimeout(hydrate, props.hydrateAfter);
+    return () => clearTimeout(id);
+  }
+);
+const hydrateNever = /* @__NO_SIDE_EFFECTS__ */ () => {
+};
+export const createLazyNeverComponent = defineLazyComponent(
+  {
+    hydrateNever: {
+      type: Boolean,
+      required: false,
+      default: true
+    }
+  },
+  () => hydrateNever
+);
diff --git a/node_modules/nuxt/dist/components/runtime/server-component.js b/node_modules/nuxt/dist/components/runtime/server-component.js
index ecfafe8..37dc296 100644
--- a/node_modules/nuxt/dist/components/runtime/server-component.js
+++ b/node_modules/nuxt/dist/components/runtime/server-component.js
@@ -2,6 +2,8 @@ import { defineComponent, getCurrentInstance, h, ref } from "vue";
 import NuxtIsland from "#app/components/nuxt-island";
 import { useRoute } from "#app/composables/router";
 import { isPrerendered } from "#app/composables/payload";
+import { createError, showError } from "#app/composables/error";
+import { useNuxtApp } from "#app/nuxt";
 export const createServerComponent = /* @__NO_SIDE_EFFECTS__ */ (name) => {
   return defineComponent({
     name,
@@ -39,15 +41,26 @@ export const createIslandPage = /* @__NO_SIDE_EFFECTS__ */ (name) => {
       expose({
         refresh: () => islandRef.value?.refresh()
       });
+      const nuxtApp = useNuxtApp();
       const route = useRoute();
       const path = import.meta.client && await isPrerendered(route.path) ? route.path : route.fullPath.replace(/#.*$/, "");
       return () => {
         return h("div", [
           h(NuxtIsland, {
-            name: `page:${name}`,
+            name: `page_${name}`,
             lazy: props.lazy,
             ref: islandRef,
-            context: { url: path }
+            context: { url: path },
+            onError: (e) => {
+              if (e.cause && e.cause instanceof Response) {
+                throw createError({
+                  statusCode: e.cause.status,
+                  statusText: e.cause.statusText,
+                  status: e.cause.status
+                });
+              }
+              nuxtApp.runWithContext(() => showError(e));
+            }
           }, slots)
         ]);
       };
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/error-500.js b/node_modules/nuxt/dist/core/runtime/nitro/error-500.js
deleted file mode 100644
index 40e7652..0000000
--- a/node_modules/nuxt/dist/core/runtime/nitro/error-500.js
+++ /dev/null
@@ -1,5 +0,0 @@
-const _messages = { "appName": "Nuxt", "version": "", "statusCode": 500, "statusMessage": "Server error", "description": "This page is temporarily unavailable." };
-export const template = (messages) => {
-  messages = { ..._messages, ...messages };
-  return '<!DOCTYPE html><html lang="en"><head><title>' + messages.statusCode + " - " + messages.statusMessage + " | " + messages.appName + `</title><meta charset="utf-8"><meta content="width=device-width,initial-scale=1.0,minimum-scale=1.0" name="viewport"><style>.spotlight{background:linear-gradient(45deg,#00dc82,#36e4da 50%,#0047e1);filter:blur(20vh)}*,:after,:before{border-color:var(--un-default-border-color,#e5e7eb);border-style:solid;border-width:0;box-sizing:border-box}:after,:before{--un-content:""}html{line-height:1.5;-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-moz-tab-size:4;tab-size:4;-webkit-tap-highlight-color:transparent}body{line-height:inherit;margin:0}h1{font-size:inherit;font-weight:inherit}h1,p{margin:0}*,:after,:before{--un-rotate:0;--un-rotate-x:0;--un-rotate-y:0;--un-rotate-z:0;--un-scale-x:1;--un-scale-y:1;--un-scale-z:1;--un-skew-x:0;--un-skew-y:0;--un-translate-x:0;--un-translate-y:0;--un-translate-z:0;--un-pan-x: ;--un-pan-y: ;--un-pinch-zoom: ;--un-scroll-snap-strictness:proximity;--un-ordinal: ;--un-slashed-zero: ;--un-numeric-figure: ;--un-numeric-spacing: ;--un-numeric-fraction: ;--un-border-spacing-x:0;--un-border-spacing-y:0;--un-ring-offset-shadow:0 0 transparent;--un-ring-shadow:0 0 transparent;--un-shadow-inset: ;--un-shadow:0 0 transparent;--un-ring-inset: ;--un-ring-offset-width:0px;--un-ring-offset-color:#fff;--un-ring-width:0px;--un-ring-color:rgba(147,197,253,.5);--un-blur: ;--un-brightness: ;--un-contrast: ;--un-drop-shadow: ;--un-grayscale: ;--un-hue-rotate: ;--un-invert: ;--un-saturate: ;--un-sepia: ;--un-backdrop-blur: ;--un-backdrop-brightness: ;--un-backdrop-contrast: ;--un-backdrop-grayscale: ;--un-backdrop-hue-rotate: ;--un-backdrop-invert: ;--un-backdrop-opacity: ;--un-backdrop-saturate: ;--un-backdrop-sepia: }.fixed{position:fixed}.-bottom-1\\/2{bottom:-50%}.left-0{left:0}.right-0{right:0}.grid{display:grid}.mb-16{margin-bottom:4rem}.mb-8{margin-bottom:2rem}.h-1\\/2{height:50%}.max-w-520px{max-width:520px}.min-h-screen{min-height:100vh}.place-content-center{place-content:center}.overflow-hidden{overflow:hidden}.bg-white{--un-bg-opacity:1;background-color:rgb(255 255 255/var(--un-bg-opacity))}.px-8{padding-left:2rem;padding-right:2rem}.text-center{text-align:center}.text-8xl{font-size:6rem;line-height:1}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-black{--un-text-opacity:1;color:rgb(0 0 0/var(--un-text-opacity))}.font-light{font-weight:300}.font-medium{font-weight:500}.leading-tight{line-height:1.25}.font-sans{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}@media (prefers-color-scheme:dark){.dark\\:bg-black{--un-bg-opacity:1;background-color:rgb(0 0 0/var(--un-bg-opacity))}.dark\\:text-white{--un-text-opacity:1;color:rgb(255 255 255/var(--un-text-opacity))}}@media (min-width:640px){.sm\\:px-0{padding-left:0;padding-right:0}.sm\\:text-4xl{font-size:2.25rem;line-height:2.5rem}}</style><script>!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver((e=>{for(const o of e)if("childList"===o.type)for(const e of o.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&r(e)})).observe(document,{childList:!0,subtree:!0})}function r(e){if(e.ep)return;e.ep=!0;const r=function(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?r.credentials="include":"anonymous"===e.crossOrigin?r.credentials="omit":r.credentials="same-origin",r}(e);fetch(e.href,r)}}();<\/script></head><body class="antialiased bg-white dark:bg-black dark:text-white font-sans grid min-h-screen overflow-hidden place-content-center text-black"><div class="-bottom-1/2 fixed h-1/2 left-0 right-0 spotlight"></div><div class="max-w-520px text-center"><h1 class="font-medium mb-8 sm:text-10xl text-8xl">` + messages.statusCode + '</h1><p class="font-light leading-tight mb-16 px-8 sm:px-0 sm:text-4xl text-xl">' + messages.description + "</p></div></body></html>";
-};
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/error-dev.js b/node_modules/nuxt/dist/core/runtime/nitro/error-dev.js
deleted file mode 100644
index 58be4b5..0000000
--- a/node_modules/nuxt/dist/core/runtime/nitro/error-dev.js
+++ /dev/null
@@ -1,5 +0,0 @@
-const _messages = { "appName": "Nuxt", "version": "", "statusCode": 500, "statusMessage": "Server error", "description": "An error occurred in the application and the page could not be served. If you are the application owner, check your server logs for details.", "stack": "" };
-export const template = (messages) => {
-  messages = { ..._messages, ...messages };
-  return '<!DOCTYPE html><html lang="en"><head><title>' + messages.statusCode + " - " + messages.statusMessage + " | " + messages.appName + `</title><meta charset="utf-8"><meta content="width=device-width,initial-scale=1.0,minimum-scale=1.0" name="viewport"><style>.spotlight{background:linear-gradient(45deg,#00dc82,#36e4da 50%,#0047e1);bottom:-40vh;filter:blur(30vh);height:60vh;opacity:.8}*,:after,:before{border-color:var(--un-default-border-color,#e5e7eb);border-style:solid;border-width:0;box-sizing:border-box}:after,:before{--un-content:""}html{line-height:1.5;-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-moz-tab-size:4;tab-size:4;-webkit-tap-highlight-color:transparent}body{line-height:inherit;margin:0}h1{font-size:inherit;font-weight:inherit}pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-feature-settings:normal;font-size:1em;font-variation-settings:normal}h1,p,pre{margin:0}*,:after,:before{--un-rotate:0;--un-rotate-x:0;--un-rotate-y:0;--un-rotate-z:0;--un-scale-x:1;--un-scale-y:1;--un-scale-z:1;--un-skew-x:0;--un-skew-y:0;--un-translate-x:0;--un-translate-y:0;--un-translate-z:0;--un-pan-x: ;--un-pan-y: ;--un-pinch-zoom: ;--un-scroll-snap-strictness:proximity;--un-ordinal: ;--un-slashed-zero: ;--un-numeric-figure: ;--un-numeric-spacing: ;--un-numeric-fraction: ;--un-border-spacing-x:0;--un-border-spacing-y:0;--un-ring-offset-shadow:0 0 transparent;--un-ring-shadow:0 0 transparent;--un-shadow-inset: ;--un-shadow:0 0 transparent;--un-ring-inset: ;--un-ring-offset-width:0px;--un-ring-offset-color:#fff;--un-ring-width:0px;--un-ring-color:rgba(147,197,253,.5);--un-blur: ;--un-brightness: ;--un-contrast: ;--un-drop-shadow: ;--un-grayscale: ;--un-hue-rotate: ;--un-invert: ;--un-saturate: ;--un-sepia: ;--un-backdrop-blur: ;--un-backdrop-brightness: ;--un-backdrop-contrast: ;--un-backdrop-grayscale: ;--un-backdrop-hue-rotate: ;--un-backdrop-invert: ;--un-backdrop-opacity: ;--un-backdrop-saturate: ;--un-backdrop-sepia: }.fixed{position:fixed}.left-0{left:0}.right-0{right:0}.z-10{z-index:10}.mb-6{margin-bottom:1.5rem}.mb-8{margin-bottom:2rem}.h-auto{height:auto}.min-h-screen{min-height:100vh}.flex{display:flex}.flex-1{flex:1 1 0%}.flex-col{flex-direction:column}.overflow-y-auto{overflow-y:auto}.rounded-t-md{border-top-left-radius:.375rem;border-top-right-radius:.375rem}.bg-black\\/5{background-color:#0000000d}.bg-white{--un-bg-opacity:1;background-color:rgb(255 255 255/var(--un-bg-opacity))}.p-8{padding:2rem}.px-10{padding-left:2.5rem;padding-right:2.5rem}.pt-14{padding-top:3.5rem}.text-6xl{font-size:3.75rem;line-height:1}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-black{--un-text-opacity:1;color:rgb(0 0 0/var(--un-text-opacity))}.font-light{font-weight:300}.font-medium{font-weight:500}.leading-tight{line-height:1.25}.font-sans{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}@media (prefers-color-scheme:dark){.dark\\:bg-black{--un-bg-opacity:1;background-color:rgb(0 0 0/var(--un-bg-opacity))}.dark\\:bg-white\\/10{background-color:#ffffff1a}.dark\\:text-white{--un-text-opacity:1;color:rgb(255 255 255/var(--un-text-opacity))}}@media (min-width:640px){.sm\\:text-2xl{font-size:1.5rem;line-height:2rem}.sm\\:text-8xl{font-size:6rem;line-height:1}}</style><script>!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver((e=>{for(const o of e)if("childList"===o.type)for(const e of o.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&r(e)})).observe(document,{childList:!0,subtree:!0})}function r(e){if(e.ep)return;e.ep=!0;const r=function(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?r.credentials="include":"anonymous"===e.crossOrigin?r.credentials="omit":r.credentials="same-origin",r}(e);fetch(e.href,r)}}();<\/script></head><body class="antialiased bg-white dark:bg-black dark:text-white flex flex-col font-sans min-h-screen pt-14 px-10 text-black"><div class="fixed left-0 right-0 spotlight"></div><h1 class="font-medium mb-6 sm:text-8xl text-6xl">` + messages.statusCode + '</h1><p class="font-light leading-tight mb-8 sm:text-2xl text-xl">' + messages.description + '</p><div class="bg-black/5 bg-white dark:bg-white/10 flex-1 h-auto overflow-y-auto rounded-t-md"><pre class="font-light leading-tight p-8 text-xl z-10">' + messages.stack + "</pre></div></body></html>";
-};
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/error.js b/node_modules/nuxt/dist/core/runtime/nitro/error.js
deleted file mode 100644
index 8382558..0000000
--- a/node_modules/nuxt/dist/core/runtime/nitro/error.js
+++ /dev/null
@@ -1,64 +0,0 @@
-import { joinURL, withQuery } from "ufo";
-import { getRequestHeaders, send, setResponseHeader, setResponseStatus } from "h3";
-import { useRuntimeConfig } from "#internal/nitro";
-import { useNitroApp } from "#internal/nitro/app";
-import { isJsonRequest, normalizeError } from "#internal/nitro/utils";
-export default (async function errorhandler(error, event) {
-  const { stack, statusCode, statusMessage, message } = normalizeError(error);
-  const errorObject = {
-    url: event.path,
-    statusCode,
-    statusMessage,
-    message,
-    stack: import.meta.dev && statusCode !== 404 ? `<pre>${stack.map((i) => `<span class="stack${i.internal ? " internal" : ""}">${i.text}</span>`).join("\n")}</pre>` : "",
-    // TODO: check and validate error.data for serialisation into query
-    data: error.data
-  };
-  if (error.unhandled || error.fatal) {
-    const tags = [
-      "[nuxt]",
-      "[request error]",
-      error.unhandled && "[unhandled]",
-      error.fatal && "[fatal]",
-      Number(errorObject.statusCode) !== 200 && `[${errorObject.statusCode}]`
-    ].filter(Boolean).join(" ");
-    console.error(tags, (error.message || error.toString() || "internal server error") + "\n" + stack.map((l) => "  " + l.text).join("  \n"));
-  }
-  if (event.handled) {
-    return;
-  }
-  setResponseStatus(event, errorObject.statusCode !== 200 && errorObject.statusCode || 500, errorObject.statusMessage);
-  if (isJsonRequest(event)) {
-    setResponseHeader(event, "Content-Type", "application/json");
-    return send(event, JSON.stringify(errorObject));
-  }
-  const reqHeaders = getRequestHeaders(event);
-  const isRenderingError = event.path.startsWith("/__nuxt_error") || !!reqHeaders["x-nuxt-error"];
-  const res = isRenderingError ? null : await useNitroApp().localFetch(
-    withQuery(joinURL(useRuntimeConfig(event).app.baseURL, "/__nuxt_error"), errorObject),
-    {
-      headers: { ...reqHeaders, "x-nuxt-error": "true" },
-      redirect: "manual"
-    }
-  ).catch(() => null);
-  if (!res) {
-    const { template } = import.meta.dev ? await import("./error-dev") : await import("./error-500");
-    if (import.meta.dev) {
-      errorObject.description = errorObject.message;
-    }
-    if (event.handled) {
-      return;
-    }
-    setResponseHeader(event, "Content-Type", "text/html;charset=UTF-8");
-    return send(event, template(errorObject));
-  }
-  const html = await res.text();
-  if (event.handled) {
-    return;
-  }
-  for (const [header, value] of res.headers.entries()) {
-    setResponseHeader(event, header, value);
-  }
-  setResponseStatus(event, res.status && res.status !== 200 ? res.status : void 0, res.statusText);
-  return send(event, html);
-});
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/error.d.ts b/node_modules/nuxt/dist/core/runtime/nitro/handlers/error.d.ts
similarity index 100%
rename from node_modules/nuxt/dist/core/runtime/nitro/error.d.ts
rename to node_modules/nuxt/dist/core/runtime/nitro/handlers/error.d.ts
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/handlers/error.js b/node_modules/nuxt/dist/core/runtime/nitro/handlers/error.js
new file mode 100644
index 0000000..11371e0
--- /dev/null
+++ b/node_modules/nuxt/dist/core/runtime/nitro/handlers/error.js
@@ -0,0 +1,59 @@
+import { joinURL, withQuery, withoutBase } from "ufo";
+import { appendResponseHeader, getRequestHeaders, send, setResponseHeader, setResponseHeaders, setResponseStatus } from "h3";
+import { isJsonRequest } from "../utils/error.js";
+import { useRuntimeConfig } from "#internal/nitro";
+import { useNitroApp } from "#internal/nitro/app";
+export default (async function errorhandler(error, event, { defaultHandler }) {
+  if (event.handled || isJsonRequest(event)) {
+    return;
+  }
+  const defaultRes = await defaultHandler(error, event, { json: true });
+  const statusCode = error.statusCode || 500;
+  if (statusCode === 404 && defaultRes.status === 302) {
+    setResponseHeaders(event, defaultRes.headers);
+    setResponseStatus(event, defaultRes.status, defaultRes.statusText);
+    return send(event, JSON.stringify(defaultRes.body, null, 2));
+  }
+  if (import.meta.dev && typeof defaultRes.body !== "string" && Array.isArray(defaultRes.body.stack)) {
+    defaultRes.body.stack = defaultRes.body.stack.join("\n");
+  }
+  const errorObject = defaultRes.body;
+  const url = new URL(errorObject.url);
+  errorObject.url = withoutBase(url.pathname, useRuntimeConfig(event).app.baseURL) + url.search + url.hash;
+  errorObject.message ||= "Server Error";
+  errorObject.data ||= error.data;
+  errorObject.statusMessage ||= error.statusMessage;
+  delete defaultRes.headers["content-type"];
+  delete defaultRes.headers["content-security-policy"];
+  setResponseHeaders(event, defaultRes.headers);
+  const reqHeaders = getRequestHeaders(event);
+  const isRenderingError = event.path.startsWith("/__nuxt_error") || !!reqHeaders["x-nuxt-error"];
+  const res = isRenderingError ? null : await useNitroApp().localFetch(
+    withQuery(joinURL(useRuntimeConfig(event).app.baseURL, "/__nuxt_error"), errorObject),
+    {
+      headers: { ...reqHeaders, "x-nuxt-error": "true" },
+      redirect: "manual"
+    }
+  ).catch(() => null);
+  if (event.handled) {
+    return;
+  }
+  if (!res) {
+    const { template } = import.meta.dev ? await import("../templates/error-dev") : await import("../templates/error-500");
+    if (import.meta.dev) {
+      errorObject.description = errorObject.message;
+    }
+    setResponseHeader(event, "Content-Type", "text/html;charset=UTF-8");
+    return send(event, template(errorObject));
+  }
+  const html = await res.text();
+  for (const [header, value] of res.headers.entries()) {
+    if (header === "set-cookie") {
+      appendResponseHeader(event, header, value);
+      continue;
+    }
+    setResponseHeader(event, header, value);
+  }
+  setResponseStatus(event, res.status && res.status !== 200 ? res.status : defaultRes.status, res.statusText || defaultRes.statusText);
+  return send(event, html);
+});
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/handlers/island.d.ts b/node_modules/nuxt/dist/core/runtime/nitro/handlers/island.d.ts
new file mode 100644
index 0000000..01c30d9
--- /dev/null
+++ b/node_modules/nuxt/dist/core/runtime/nitro/handlers/island.d.ts
@@ -0,0 +1,4 @@
+import type { RenderResponse } from 'nitropack';
+import type { NuxtIslandResponse } from '../utils/renderer/islands.js';
+declare const _default: import("h3").EventHandler<import("h3").EventHandlerRequest, Promise<NuxtIslandResponse | Partial<RenderResponse>>>;
+export default _default;
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/handlers/island.js b/node_modules/nuxt/dist/core/runtime/nitro/handlers/island.js
new file mode 100644
index 0000000..ff03aaf
--- /dev/null
+++ b/node_modules/nuxt/dist/core/runtime/nitro/handlers/island.js
@@ -0,0 +1,99 @@
+import { destr } from "destr";
+import { defineEventHandler, getQuery, readBody, setResponseHeaders } from "h3";
+import { resolveUnrefHeadInput } from "@unhead/vue";
+import { getRequestDependencies } from "vue-bundle-renderer/runtime";
+import { getQuery as getURLQuery } from "ufo";
+import { islandCache, islandPropCache } from "../utils/cache.js";
+import { createSSRContext } from "../utils/renderer/app.js";
+import { getSSRRenderer } from "../utils/renderer/build-files.js";
+import { renderInlineStyles } from "../utils/renderer/inline-styles.js";
+import { getClientIslandResponse, getServerComponentHTML, getSlotIslandResponse } from "../utils/renderer/islands.js";
+import { useNitroApp } from "#internal/nitro";
+const ISLAND_SUFFIX_RE = /\.json(\?.*)?$/;
+export default defineEventHandler(async (event) => {
+  const nitroApp = useNitroApp();
+  setResponseHeaders(event, {
+    "content-type": "application/json;charset=utf-8",
+    "x-powered-by": "Nuxt"
+  });
+  if (import.meta.prerender && event.path && await islandCache.hasItem(event.path)) {
+    return islandCache.getItem(event.path);
+  }
+  const islandContext = await getIslandContext(event);
+  const ssrContext = {
+    ...createSSRContext(event),
+    islandContext,
+    noSSR: false,
+    url: islandContext.url
+  };
+  const renderer = await getSSRRenderer();
+  const renderResult = await renderer.renderToString(ssrContext).catch(async (error) => {
+    await ssrContext.nuxt?.hooks.callHook("app:error", error);
+    throw error;
+  });
+  const inlinedStyles = await renderInlineStyles(ssrContext.modules ?? []);
+  await ssrContext.nuxt?.hooks.callHook("app:rendered", { ssrContext, renderResult });
+  if (inlinedStyles.length) {
+    ssrContext.head.push({ style: inlinedStyles });
+  }
+  if (import.meta.dev) {
+    const { styles } = getRequestDependencies(ssrContext, renderer.rendererContext);
+    const link = [];
+    for (const resource of Object.values(styles)) {
+      if ("inline" in getURLQuery(resource.file)) {
+        continue;
+      }
+      if (resource.file.includes("scoped") && !resource.file.includes("pages/")) {
+        link.push({ rel: "stylesheet", href: renderer.rendererContext.buildAssetsURL(resource.file), crossorigin: "" });
+      }
+    }
+    if (link.length) {
+      ssrContext.head.push({ link }, { mode: "server" });
+    }
+  }
+  const islandHead = {};
+  for (const entry of ssrContext.head.entries.values()) {
+    for (const [key, value] of Object.entries(resolveUnrefHeadInput(entry.input))) {
+      const currentValue = islandHead[key];
+      if (Array.isArray(currentValue)) {
+        currentValue.push(...value);
+      }
+      islandHead[key] = value;
+    }
+  }
+  islandHead.link ||= [];
+  islandHead.style ||= [];
+  const islandResponse = {
+    id: islandContext.id,
+    head: islandHead,
+    html: getServerComponentHTML(renderResult.html),
+    components: getClientIslandResponse(ssrContext),
+    slots: getSlotIslandResponse(ssrContext)
+  };
+  await nitroApp.hooks.callHook("render:island", islandResponse, { event, islandContext });
+  if (import.meta.prerender) {
+    await islandCache.setItem(`/__nuxt_island/${islandContext.name}_${islandContext.id}.json`, islandResponse);
+    await islandPropCache.setItem(`/__nuxt_island/${islandContext.name}_${islandContext.id}.json`, event.path);
+  }
+  return islandResponse;
+});
+async function getIslandContext(event) {
+  let url = event.path || "";
+  if (import.meta.prerender && event.path && await islandPropCache.hasItem(event.path)) {
+    url = await islandPropCache.getItem(event.path);
+  }
+  const componentParts = url.substring("/__nuxt_island".length + 1).replace(ISLAND_SUFFIX_RE, "").split("_");
+  const hashId = componentParts.length > 1 ? componentParts.pop() : void 0;
+  const componentName = componentParts.join("_");
+  const context = event.method === "GET" ? getQuery(event) : await readBody(event);
+  const ctx = {
+    url: "/",
+    ...context,
+    id: hashId,
+    name: componentName,
+    props: destr(context.props) || {},
+    slots: {},
+    components: {}
+  };
+  return ctx;
+}
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/handlers/renderer.d.ts b/node_modules/nuxt/dist/core/runtime/nitro/handlers/renderer.d.ts
new file mode 100644
index 0000000..574a48a
--- /dev/null
+++ b/node_modules/nuxt/dist/core/runtime/nitro/handlers/renderer.d.ts
@@ -0,0 +1,16 @@
+export interface NuxtRenderHTMLContext {
+    htmlAttrs: string[];
+    head: string[];
+    bodyAttrs: string[];
+    bodyPrepend: string[];
+    body: string[];
+    bodyAppend: string[];
+}
+export interface NuxtRenderResponse {
+    body: string;
+    statusCode: number;
+    statusMessage?: string;
+    headers: Record<string, string>;
+}
+declare const _default: any;
+export default _default;
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/handlers/renderer.js b/node_modules/nuxt/dist/core/runtime/nitro/handlers/renderer.js
new file mode 100644
index 0000000..caf6325
--- /dev/null
+++ b/node_modules/nuxt/dist/core/runtime/nitro/handlers/renderer.js
@@ -0,0 +1,204 @@
+import { AsyncLocalStorage } from "node:async_hooks";
+import {
+  getPrefetchLinks,
+  getPreloadLinks,
+  getRequestDependencies,
+  renderResourceHeaders
+} from "vue-bundle-renderer/runtime";
+import { appendResponseHeader, createError, getQuery, getResponseStatus, getResponseStatusText, writeEarlyHints } from "h3";
+import { getQuery as getURLQuery, joinURL, withoutTrailingSlash } from "ufo";
+import { propsToString, renderSSRHead } from "@unhead/vue/server";
+import destr from "destr";
+import { getEntryIds, getRenderer } from "../utils/renderer/build-files.js";
+import { payloadCache } from "../utils/cache.js";
+import { renderPayloadJsonScript, renderPayloadResponse, renderPayloadScript, splitPayload } from "../utils/renderer/payload.js";
+import { createSSRContext, setSSRError } from "../utils/renderer/app.js";
+import { renderInlineStyles } from "../utils/renderer/inline-styles.js";
+import { replaceIslandTeleports } from "../utils/renderer/islands.js";
+import { defineRenderHandler, getRouteRules, useNitroApp } from "#internal/nitro";
+import { renderSSRHeadOptions } from "#internal/unhead.config.mjs";
+import { appHead, appTeleportAttrs, appTeleportTag, componentIslands, appManifest as isAppManifestEnabled } from "#internal/nuxt.config.mjs";
+import { buildAssetsURL, publicAssetsURL } from "#internal/nuxt/paths";
+globalThis.__buildAssetsURL = buildAssetsURL;
+globalThis.__publicAssetsURL = publicAssetsURL;
+if (process.env.NUXT_ASYNC_CONTEXT && !("AsyncLocalStorage" in globalThis)) {
+  globalThis.AsyncLocalStorage = AsyncLocalStorage;
+}
+const HAS_APP_TELEPORTS = !!(appTeleportTag && appTeleportAttrs.id);
+const APP_TELEPORT_OPEN_TAG = HAS_APP_TELEPORTS ? `<${appTeleportTag}${propsToString(appTeleportAttrs)}>` : "";
+const APP_TELEPORT_CLOSE_TAG = HAS_APP_TELEPORTS ? `</${appTeleportTag}>` : "";
+const PAYLOAD_URL_RE = process.env.NUXT_JSON_PAYLOADS ? /^[^?]*\/_payload.json(?:\?.*)?$/ : /^[^?]*\/_payload.js(?:\?.*)?$/;
+const PAYLOAD_FILENAME = process.env.NUXT_JSON_PAYLOADS ? "_payload.json" : "_payload.js";
+export default defineRenderHandler(async (event) => {
+  const nitroApp = useNitroApp();
+  const ssrError = event.path.startsWith("/__nuxt_error") ? getQuery(event) : null;
+  if (ssrError && !("__unenv__" in event.node.req)) {
+    throw createError({
+      statusCode: 404,
+      statusMessage: "Page Not Found: /__nuxt_error"
+    });
+  }
+  const ssrContext = createSSRContext(event);
+  const headEntryOptions = { mode: "server" };
+  ssrContext.head.push(appHead, headEntryOptions);
+  if (ssrError) {
+    ssrError.statusCode &&= Number.parseInt(ssrError.statusCode);
+    if (process.env.PARSE_ERROR_DATA && typeof ssrError.data === "string") {
+      try {
+        ssrError.data = destr(ssrError.data);
+      } catch {
+      }
+    }
+    setSSRError(ssrContext, ssrError);
+  }
+  const isRenderingPayload = process.env.NUXT_PAYLOAD_EXTRACTION && PAYLOAD_URL_RE.test(ssrContext.url);
+  if (isRenderingPayload) {
+    const url = ssrContext.url.substring(0, ssrContext.url.lastIndexOf("/")) || "/";
+    ssrContext.url = url;
+    event._path = event.node.req.url = url;
+    if (import.meta.prerender && await payloadCache.hasItem(url)) {
+      return payloadCache.getItem(url);
+    }
+  }
+  const routeOptions = getRouteRules(event);
+  if (routeOptions.ssr === false) {
+    ssrContext.noSSR = true;
+  }
+  const _PAYLOAD_EXTRACTION = import.meta.prerender && process.env.NUXT_PAYLOAD_EXTRACTION && !ssrContext.noSSR;
+  const payloadURL = _PAYLOAD_EXTRACTION ? joinURL(ssrContext.runtimeConfig.app.cdnURL || ssrContext.runtimeConfig.app.baseURL, ssrContext.url.replace(/\?.*$/, ""), PAYLOAD_FILENAME) + "?" + ssrContext.runtimeConfig.app.buildId : void 0;
+  const renderer = await getRenderer(ssrContext);
+  if (process.env.NUXT_EARLY_HINTS && !isRenderingPayload && !import.meta.prerender) {
+    const { link: link2 } = renderResourceHeaders({}, renderer.rendererContext);
+    if (link2) {
+      writeEarlyHints(event, link2);
+    }
+  }
+  if (process.env.NUXT_INLINE_STYLES) {
+    for (const id of await getEntryIds()) {
+      ssrContext.modules.add(id);
+    }
+  }
+  const _rendered = await renderer.renderToString(ssrContext).catch(async (error) => {
+    if (ssrContext._renderResponse && error.message === "skipping render") {
+      return {};
+    }
+    const _err = !ssrError && ssrContext.payload?.error || error;
+    await ssrContext.nuxt?.hooks.callHook("app:error", _err);
+    throw _err;
+  });
+  const inlinedStyles = process.env.NUXT_INLINE_STYLES && !ssrContext._renderResponse && !isRenderingPayload ? await renderInlineStyles(ssrContext.modules ?? []) : [];
+  await ssrContext.nuxt?.hooks.callHook("app:rendered", { ssrContext, renderResult: _rendered });
+  if (ssrContext._renderResponse) {
+    return ssrContext._renderResponse;
+  }
+  if (ssrContext.payload?.error && !ssrError) {
+    throw ssrContext.payload.error;
+  }
+  if (isRenderingPayload) {
+    const response = renderPayloadResponse(ssrContext);
+    if (import.meta.prerender) {
+      await payloadCache.setItem(ssrContext.url, response);
+    }
+    return response;
+  }
+  if (_PAYLOAD_EXTRACTION) {
+    appendResponseHeader(event, "x-nitro-prerender", joinURL(ssrContext.url.replace(/\?.*$/, ""), PAYLOAD_FILENAME));
+    await payloadCache.setItem(withoutTrailingSlash(ssrContext.url), renderPayloadResponse(ssrContext));
+  }
+  const NO_SCRIPTS = process.env.NUXT_NO_SCRIPTS || routeOptions.noScripts;
+  const { styles, scripts } = getRequestDependencies(ssrContext, renderer.rendererContext);
+  if (_PAYLOAD_EXTRACTION && !NO_SCRIPTS) {
+    ssrContext.head.push({
+      link: [
+        process.env.NUXT_JSON_PAYLOADS ? { rel: "preload", as: "fetch", crossorigin: "anonymous", href: payloadURL } : { rel: "modulepreload", crossorigin: "", href: payloadURL }
+      ]
+    }, headEntryOptions);
+  }
+  if (isAppManifestEnabled && ssrContext._preloadManifest && !NO_SCRIPTS) {
+    ssrContext.head.push({
+      link: [
+        { rel: "preload", as: "fetch", fetchpriority: "low", crossorigin: "anonymous", href: buildAssetsURL(`builds/meta/${ssrContext.runtimeConfig.app.buildId}.json`) }
+      ]
+    }, { ...headEntryOptions, tagPriority: "low" });
+  }
+  if (inlinedStyles.length) {
+    ssrContext.head.push({ style: inlinedStyles });
+  }
+  const link = [];
+  for (const resource of Object.values(styles)) {
+    if (import.meta.dev && "inline" in getURLQuery(resource.file)) {
+      continue;
+    }
+    link.push({ rel: "stylesheet", href: renderer.rendererContext.buildAssetsURL(resource.file), crossorigin: "" });
+  }
+  if (link.length) {
+    ssrContext.head.push({ link }, headEntryOptions);
+  }
+  if (!NO_SCRIPTS) {
+    ssrContext.head.push({
+      link: getPreloadLinks(ssrContext, renderer.rendererContext)
+    }, headEntryOptions);
+    ssrContext.head.push({
+      link: getPrefetchLinks(ssrContext, renderer.rendererContext)
+    }, headEntryOptions);
+    ssrContext.head.push({
+      script: _PAYLOAD_EXTRACTION ? process.env.NUXT_JSON_PAYLOADS ? renderPayloadJsonScript({ ssrContext, data: splitPayload(ssrContext).initial, src: payloadURL }) : renderPayloadScript({ ssrContext, data: splitPayload(ssrContext).initial, src: payloadURL }) : process.env.NUXT_JSON_PAYLOADS ? renderPayloadJsonScript({ ssrContext, data: ssrContext.payload }) : renderPayloadScript({ ssrContext, data: ssrContext.payload })
+    }, {
+      ...headEntryOptions,
+      // this should come before another end of body scripts
+      tagPosition: "bodyClose",
+      tagPriority: "high"
+    });
+  }
+  if (!routeOptions.noScripts) {
+    const tagPosition = _PAYLOAD_EXTRACTION && !process.env.NUXT_JSON_PAYLOADS ? "bodyClose" : "head";
+    ssrContext.head.push({
+      script: Object.values(scripts).map((resource) => ({
+        type: resource.module ? "module" : null,
+        src: renderer.rendererContext.buildAssetsURL(resource.file),
+        defer: resource.module ? null : true,
+        // if we are rendering script tag payloads that import an async payload
+        // we need to ensure this resolves before executing the Nuxt entry
+        tagPosition,
+        crossorigin: ""
+      }))
+    }, headEntryOptions);
+  }
+  const { headTags, bodyTags, bodyTagsOpen, htmlAttrs, bodyAttrs } = await renderSSRHead(ssrContext.head, renderSSRHeadOptions);
+  const htmlContext = {
+    htmlAttrs: htmlAttrs ? [htmlAttrs] : [],
+    head: normalizeChunks([headTags]),
+    bodyAttrs: bodyAttrs ? [bodyAttrs] : [],
+    bodyPrepend: normalizeChunks([bodyTagsOpen, ssrContext.teleports?.body]),
+    body: [
+      componentIslands ? replaceIslandTeleports(ssrContext, _rendered.html) : _rendered.html,
+      APP_TELEPORT_OPEN_TAG + (HAS_APP_TELEPORTS ? joinTags([ssrContext.teleports?.[`#${appTeleportAttrs.id}`]]) : "") + APP_TELEPORT_CLOSE_TAG
+    ],
+    bodyAppend: [bodyTags]
+  };
+  await nitroApp.hooks.callHook("render:html", htmlContext, { event });
+  return {
+    body: renderHTMLDocument(htmlContext),
+    statusCode: getResponseStatus(event),
+    statusMessage: getResponseStatusText(event),
+    headers: {
+      "content-type": "text/html;charset=utf-8",
+      "x-powered-by": "Nuxt"
+    }
+  };
+});
+function normalizeChunks(chunks) {
+  return chunks.filter(Boolean).map((i) => i.trim());
+}
+function joinTags(tags) {
+  return tags.join("");
+}
+function joinAttrs(chunks) {
+  if (chunks.length === 0) {
+    return "";
+  }
+  return " " + chunks.join(" ");
+}
+function renderHTMLDocument(html) {
+  return `<!DOCTYPE html><html${joinAttrs(html.htmlAttrs)}><head>${joinTags(html.head)}</head><body${joinAttrs(html.bodyAttrs)}>${joinTags(html.bodyPrepend)}${joinTags(html.body)}${joinTags(html.bodyAppend)}</body></html>`;
+}
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/no-ssr.d.ts b/node_modules/nuxt/dist/core/runtime/nitro/middleware/no-ssr.d.ts
similarity index 100%
rename from node_modules/nuxt/dist/core/runtime/nitro/no-ssr.d.ts
rename to node_modules/nuxt/dist/core/runtime/nitro/middleware/no-ssr.d.ts
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/no-ssr.js b/node_modules/nuxt/dist/core/runtime/nitro/middleware/no-ssr.js
similarity index 79%
rename from node_modules/nuxt/dist/core/runtime/nitro/no-ssr.js
rename to node_modules/nuxt/dist/core/runtime/nitro/middleware/no-ssr.js
index 3a6f464..3807ef4 100644
--- a/node_modules/nuxt/dist/core/runtime/nitro/no-ssr.js
+++ b/node_modules/nuxt/dist/core/runtime/nitro/middleware/no-ssr.js
@@ -1,7 +1,7 @@
 import { defineEventHandler, getRequestHeader } from "h3";
 export default defineEventHandler((event) => {
   if (getRequestHeader(event, "x-nuxt-no-ssr")) {
-    event.context.nuxt = event.context.nuxt || {};
+    event.context.nuxt ||= {};
     event.context.nuxt.noSSR = true;
   }
 });
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/dev-server-logs.d.ts b/node_modules/nuxt/dist/core/runtime/nitro/plugins/dev-server-logs.d.ts
similarity index 100%
rename from node_modules/nuxt/dist/core/runtime/nitro/dev-server-logs.d.ts
rename to node_modules/nuxt/dist/core/runtime/nitro/plugins/dev-server-logs.d.ts
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/dev-server-logs.js b/node_modules/nuxt/dist/core/runtime/nitro/plugins/dev-server-logs.js
similarity index 100%
rename from node_modules/nuxt/dist/core/runtime/nitro/dev-server-logs.js
rename to node_modules/nuxt/dist/core/runtime/nitro/plugins/dev-server-logs.js
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/renderer.js b/node_modules/nuxt/dist/core/runtime/nitro/renderer.js
deleted file mode 100644
index ca52c15..0000000
--- a/node_modules/nuxt/dist/core/runtime/nitro/renderer.js
+++ /dev/null
@@ -1,525 +0,0 @@
-import { AsyncLocalStorage } from "node:async_hooks";
-import {
-  createRenderer,
-  getPrefetchLinks,
-  getPreloadLinks,
-  getRequestDependencies,
-  renderResourceHeaders
-} from "vue-bundle-renderer/runtime";
-import { appendResponseHeader, createError, getQuery, getResponseStatus, getResponseStatusText, readBody, writeEarlyHints } from "h3";
-import devalue from "@nuxt/devalue";
-import { stringify, uneval } from "devalue";
-import destr from "destr";
-import { getQuery as getURLQuery, joinURL, withoutTrailingSlash } from "ufo";
-import { renderToString as _renderToString } from "vue/server-renderer";
-import { propsToString, renderSSRHead } from "@unhead/ssr";
-import { createServerHead, resolveUnrefHeadInput } from "@unhead/vue";
-import { defineRenderHandler, getRouteRules, useRuntimeConfig, useStorage } from "#internal/nitro";
-import { useNitroApp } from "#internal/nitro/app";
-import unheadPlugins from "#internal/unhead-plugins.mjs";
-import { renderSSRHeadOptions } from "#internal/unhead.config.mjs";
-import { appHead, appId, appRootAttrs, appRootTag, appTeleportAttrs, appTeleportTag, componentIslands, multiApp } from "#internal/nuxt.config.mjs";
-import { buildAssetsURL, publicAssetsURL } from "#internal/nuxt/paths";
-globalThis.__buildAssetsURL = buildAssetsURL;
-globalThis.__publicAssetsURL = publicAssetsURL;
-if (process.env.NUXT_ASYNC_CONTEXT && !("AsyncLocalStorage" in globalThis)) {
-  globalThis.AsyncLocalStorage = AsyncLocalStorage;
-}
-const getClientManifest = () => import("#build/dist/server/client.manifest.mjs").then((r) => r.default || r).then((r) => typeof r === "function" ? r() : r);
-const getEntryIds = () => getClientManifest().then((r) => Object.values(r).filter(
-  (r2) => (
-    // @ts-expect-error internal key set by CSS inlining configuration
-    r2._globalCSS
-  )
-).map((r2) => r2.src));
-const getServerEntry = () => import("#build/dist/server/server.mjs").then((r) => r.default || r);
-const getSSRStyles = lazyCachedFunction(() => import("#build/dist/server/styles.mjs").then((r) => r.default || r));
-const getSSRRenderer = lazyCachedFunction(async () => {
-  const manifest = await getClientManifest();
-  if (!manifest) {
-    throw new Error("client.manifest is not available");
-  }
-  const createSSRApp = await getServerEntry();
-  if (!createSSRApp) {
-    throw new Error("Server bundle is not available");
-  }
-  const options = {
-    manifest,
-    renderToString,
-    buildAssetsURL
-  };
-  const renderer = createRenderer(createSSRApp, options);
-  async function renderToString(input, context) {
-    const html = await _renderToString(input, context);
-    if (import.meta.dev && process.env.NUXT_VITE_NODE_OPTIONS) {
-      renderer.rendererContext.updateManifest(await getClientManifest());
-    }
-    return APP_ROOT_OPEN_TAG + html + APP_ROOT_CLOSE_TAG;
-  }
-  return renderer;
-});
-const getSPARenderer = lazyCachedFunction(async () => {
-  const manifest = await getClientManifest();
-  const spaTemplate = await import("#spa-template").then((r) => r.template).catch(() => "").then((r) => APP_ROOT_OPEN_TAG + r + APP_ROOT_CLOSE_TAG);
-  const options = {
-    manifest,
-    renderToString: () => spaTemplate,
-    buildAssetsURL
-  };
-  const renderer = createRenderer(() => () => {
-  }, options);
-  const result = await renderer.renderToString({});
-  const renderToString = (ssrContext) => {
-    const config = useRuntimeConfig(ssrContext.event);
-    ssrContext.modules = ssrContext.modules || /* @__PURE__ */ new Set();
-    ssrContext.payload.serverRendered = false;
-    ssrContext.config = {
-      public: config.public,
-      app: config.app
-    };
-    return Promise.resolve(result);
-  };
-  return {
-    rendererContext: renderer.rendererContext,
-    renderToString
-  };
-});
-const payloadCache = import.meta.prerender ? useStorage("internal:nuxt:prerender:payload") : null;
-const islandCache = import.meta.prerender ? useStorage("internal:nuxt:prerender:island") : null;
-const islandPropCache = import.meta.prerender ? useStorage("internal:nuxt:prerender:island-props") : null;
-const sharedPrerenderPromises = import.meta.prerender && process.env.NUXT_SHARED_DATA ? /* @__PURE__ */ new Map() : null;
-const sharedPrerenderKeys = /* @__PURE__ */ new Set();
-const sharedPrerenderCache = import.meta.prerender && process.env.NUXT_SHARED_DATA ? {
-  get(key) {
-    if (sharedPrerenderKeys.has(key)) {
-      return sharedPrerenderPromises.get(key) ?? useStorage("internal:nuxt:prerender:shared").getItem(key);
-    }
-  },
-  async set(key, value) {
-    sharedPrerenderKeys.add(key);
-    sharedPrerenderPromises.set(key, value);
-    useStorage("internal:nuxt:prerender:shared").setItem(key, await value).finally(() => sharedPrerenderPromises.delete(key));
-  }
-} : null;
-const ISLAND_SUFFIX_RE = /\.json(\?.*)?$/;
-async function getIslandContext(event) {
-  let url = event.path || "";
-  if (import.meta.prerender && event.path && await islandPropCache.hasItem(event.path)) {
-    url = await islandPropCache.getItem(event.path);
-  }
-  const componentParts = url.substring("/__nuxt_island".length + 1).replace(ISLAND_SUFFIX_RE, "").split("_");
-  const hashId = componentParts.length > 1 ? componentParts.pop() : void 0;
-  const componentName = componentParts.join("_");
-  const context = event.method === "GET" ? getQuery(event) : await readBody(event);
-  const ctx = {
-    url: "/",
-    ...context,
-    id: hashId,
-    name: componentName,
-    props: destr(context.props) || {},
-    slots: {},
-    components: {}
-  };
-  return ctx;
-}
-const HAS_APP_TELEPORTS = !!(appTeleportTag && appTeleportAttrs.id);
-const APP_TELEPORT_OPEN_TAG = HAS_APP_TELEPORTS ? `<${appTeleportTag}${propsToString(appTeleportAttrs)}>` : "";
-const APP_TELEPORT_CLOSE_TAG = HAS_APP_TELEPORTS ? `</${appTeleportTag}>` : "";
-const APP_ROOT_OPEN_TAG = `<${appRootTag}${propsToString(appRootAttrs)}>`;
-const APP_ROOT_CLOSE_TAG = `</${appRootTag}>`;
-const PAYLOAD_URL_RE = process.env.NUXT_JSON_PAYLOADS ? /\/_payload.json(\?.*)?$/ : /\/_payload.js(\?.*)?$/;
-const ROOT_NODE_REGEX = new RegExp(`^<${appRootTag}[^>]*>([\\s\\S]*)<\\/${appRootTag}>$`);
-const PRERENDER_NO_SSR_ROUTES = /* @__PURE__ */ new Set(["/index.html", "/200.html", "/404.html"]);
-export default defineRenderHandler(async (event) => {
-  const nitroApp = useNitroApp();
-  const ssrError = event.path.startsWith("/__nuxt_error") ? getQuery(event) : null;
-  if (ssrError && ssrError.statusCode) {
-    ssrError.statusCode = Number.parseInt(ssrError.statusCode);
-  }
-  if (ssrError && !("__unenv__" in event.node.req)) {
-    throw createError({
-      statusCode: 404,
-      statusMessage: "Page Not Found: /__nuxt_error"
-    });
-  }
-  const isRenderingIsland = componentIslands && event.path.startsWith("/__nuxt_island");
-  const islandContext = isRenderingIsland ? await getIslandContext(event) : void 0;
-  if (import.meta.prerender && islandContext && event.path && await islandCache.hasItem(event.path)) {
-    return islandCache.getItem(event.path);
-  }
-  let url = ssrError?.url || islandContext?.url || event.path;
-  const isRenderingPayload = PAYLOAD_URL_RE.test(url) && !isRenderingIsland;
-  if (isRenderingPayload) {
-    url = url.substring(0, url.lastIndexOf("/")) || "/";
-    event._path = url;
-    event.node.req.url = url;
-    if (import.meta.prerender && await payloadCache.hasItem(url)) {
-      return payloadCache.getItem(url);
-    }
-  }
-  const routeOptions = getRouteRules(event);
-  const head = createServerHead({
-    plugins: unheadPlugins
-  });
-  const headEntryOptions = { mode: "server" };
-  if (!isRenderingIsland) {
-    head.push(appHead, headEntryOptions);
-  }
-  const ssrContext = {
-    url,
-    event,
-    runtimeConfig: useRuntimeConfig(event),
-    noSSR: !!process.env.NUXT_NO_SSR || event.context.nuxt?.noSSR || routeOptions.ssr === false && !isRenderingIsland || (import.meta.prerender ? PRERENDER_NO_SSR_ROUTES.has(url) : false),
-    head,
-    error: !!ssrError,
-    nuxt: void 0,
-    /* NuxtApp */
-    payload: ssrError ? { error: ssrError } : {},
-    _payloadReducers: /* @__PURE__ */ Object.create(null),
-    modules: /* @__PURE__ */ new Set(),
-    islandContext
-  };
-  if (import.meta.prerender && process.env.NUXT_SHARED_DATA) {
-    ssrContext._sharedPrerenderCache = sharedPrerenderCache;
-  }
-  const _PAYLOAD_EXTRACTION = import.meta.prerender && process.env.NUXT_PAYLOAD_EXTRACTION && !ssrContext.noSSR && !isRenderingIsland;
-  const payloadURL = _PAYLOAD_EXTRACTION ? joinURL(ssrContext.runtimeConfig.app.cdnURL || ssrContext.runtimeConfig.app.baseURL, url, process.env.NUXT_JSON_PAYLOADS ? "_payload.json" : "_payload.js") + "?" + ssrContext.runtimeConfig.app.buildId : void 0;
-  if (import.meta.prerender) {
-    ssrContext.payload.prerenderedAt = Date.now();
-  }
-  const renderer = process.env.NUXT_NO_SSR || ssrContext.noSSR ? await getSPARenderer() : await getSSRRenderer();
-  if (process.env.NUXT_EARLY_HINTS && !isRenderingPayload && !import.meta.prerender) {
-    const { link } = renderResourceHeaders({}, renderer.rendererContext);
-    if (link) {
-      writeEarlyHints(event, link);
-    }
-  }
-  if (process.env.NUXT_INLINE_STYLES && !isRenderingIsland) {
-    for (const id of await getEntryIds()) {
-      ssrContext.modules.add(id);
-    }
-  }
-  const _rendered = await renderer.renderToString(ssrContext).catch(async (error) => {
-    if (ssrContext._renderResponse && error.message === "skipping render") {
-      return {};
-    }
-    const _err = !ssrError && ssrContext.payload?.error || error;
-    await ssrContext.nuxt?.hooks.callHook("app:error", _err);
-    throw _err;
-  });
-  await ssrContext.nuxt?.hooks.callHook("app:rendered", { ssrContext, renderResult: _rendered });
-  if (ssrContext._renderResponse) {
-    return ssrContext._renderResponse;
-  }
-  if (ssrContext.payload?.error && !ssrError) {
-    throw ssrContext.payload.error;
-  }
-  if (isRenderingPayload) {
-    const response2 = renderPayloadResponse(ssrContext);
-    if (import.meta.prerender) {
-      await payloadCache.setItem(url, response2);
-    }
-    return response2;
-  }
-  if (_PAYLOAD_EXTRACTION) {
-    appendResponseHeader(event, "x-nitro-prerender", joinURL(url, process.env.NUXT_JSON_PAYLOADS ? "_payload.json" : "_payload.js"));
-    await payloadCache.setItem(withoutTrailingSlash(url), renderPayloadResponse(ssrContext));
-  }
-  const inlinedStyles = process.env.NUXT_INLINE_STYLES || isRenderingIsland ? await renderInlineStyles(ssrContext.modules ?? []) : [];
-  const NO_SCRIPTS = process.env.NUXT_NO_SCRIPTS || routeOptions.experimentalNoScripts;
-  const { styles, scripts } = getRequestDependencies(ssrContext, renderer.rendererContext);
-  if (_PAYLOAD_EXTRACTION && !NO_SCRIPTS && !isRenderingIsland) {
-    head.push({
-      link: [
-        process.env.NUXT_JSON_PAYLOADS ? { rel: "preload", as: "fetch", crossorigin: "anonymous", href: payloadURL } : { rel: "modulepreload", crossorigin: "", href: payloadURL }
-      ]
-    }, headEntryOptions);
-  }
-  if (inlinedStyles.length) {
-    head.push({ style: inlinedStyles });
-  }
-  if (!isRenderingIsland || import.meta.dev) {
-    const link = [];
-    for (const resource of Object.values(styles)) {
-      if (import.meta.dev && "inline" in getURLQuery(resource.file)) {
-        continue;
-      }
-      if (!import.meta.dev || !isRenderingIsland || resource.file.includes("scoped") && !resource.file.includes("pages/")) {
-        link.push({ rel: "stylesheet", href: renderer.rendererContext.buildAssetsURL(resource.file), crossorigin: "" });
-      }
-    }
-    if (link.length) {
-      head.push({ link }, headEntryOptions);
-    }
-  }
-  if (!NO_SCRIPTS && !isRenderingIsland) {
-    head.push({
-      link: getPreloadLinks(ssrContext, renderer.rendererContext)
-    }, headEntryOptions);
-    head.push({
-      link: getPrefetchLinks(ssrContext, renderer.rendererContext)
-    }, headEntryOptions);
-    head.push({
-      script: _PAYLOAD_EXTRACTION ? process.env.NUXT_JSON_PAYLOADS ? renderPayloadJsonScript({ ssrContext, data: splitPayload(ssrContext).initial, src: payloadURL }) : renderPayloadScript({ ssrContext, data: splitPayload(ssrContext).initial, src: payloadURL }) : process.env.NUXT_JSON_PAYLOADS ? renderPayloadJsonScript({ ssrContext, data: ssrContext.payload }) : renderPayloadScript({ ssrContext, data: ssrContext.payload })
-    }, {
-      ...headEntryOptions,
-      // this should come before another end of body scripts
-      tagPosition: "bodyClose",
-      tagPriority: "high"
-    });
-  }
-  if (!routeOptions.experimentalNoScripts && !isRenderingIsland) {
-    head.push({
-      script: Object.values(scripts).map((resource) => ({
-        type: resource.module ? "module" : null,
-        src: renderer.rendererContext.buildAssetsURL(resource.file),
-        defer: resource.module ? null : true,
-        // if we are rendering script tag payloads that import an async payload
-        // we need to ensure this resolves before executing the Nuxt entry
-        tagPosition: _PAYLOAD_EXTRACTION && !process.env.NUXT_JSON_PAYLOADS ? "bodyClose" : "head",
-        crossorigin: ""
-      }))
-    }, headEntryOptions);
-  }
-  const { headTags, bodyTags, bodyTagsOpen, htmlAttrs, bodyAttrs } = await renderSSRHead(head, renderSSRHeadOptions);
-  const htmlContext = {
-    island: isRenderingIsland,
-    htmlAttrs: htmlAttrs ? [htmlAttrs] : [],
-    head: normalizeChunks([headTags]),
-    bodyAttrs: bodyAttrs ? [bodyAttrs] : [],
-    bodyPrepend: normalizeChunks([bodyTagsOpen, ssrContext.teleports?.body]),
-    body: [
-      componentIslands ? replaceIslandTeleports(ssrContext, _rendered.html) : _rendered.html,
-      APP_TELEPORT_OPEN_TAG + (HAS_APP_TELEPORTS ? joinTags([ssrContext.teleports?.[`#${appTeleportAttrs.id}`]]) : "") + APP_TELEPORT_CLOSE_TAG
-    ],
-    bodyAppend: [bodyTags]
-  };
-  await nitroApp.hooks.callHook("render:html", htmlContext, { event });
-  if (isRenderingIsland && islandContext) {
-    const islandHead = {};
-    for (const entry of head.headEntries()) {
-      for (const [key, value] of Object.entries(resolveUnrefHeadInput(entry.input))) {
-        const currentValue = islandHead[key];
-        if (Array.isArray(currentValue)) {
-          currentValue.push(...value);
-        }
-        islandHead[key] = value;
-      }
-    }
-    islandHead.link = islandHead.link || [];
-    islandHead.style = islandHead.style || [];
-    const islandResponse = {
-      id: islandContext.id,
-      head: islandHead,
-      html: getServerComponentHTML(htmlContext.body),
-      components: getClientIslandResponse(ssrContext),
-      slots: getSlotIslandResponse(ssrContext)
-    };
-    await nitroApp.hooks.callHook("render:island", islandResponse, { event, islandContext });
-    const response2 = {
-      body: JSON.stringify(islandResponse, null, 2),
-      statusCode: getResponseStatus(event),
-      statusMessage: getResponseStatusText(event),
-      headers: {
-        "content-type": "application/json;charset=utf-8",
-        "x-powered-by": "Nuxt"
-      }
-    };
-    if (import.meta.prerender) {
-      await islandCache.setItem(`/__nuxt_island/${islandContext.name}_${islandContext.id}.json`, response2);
-      await islandPropCache.setItem(`/__nuxt_island/${islandContext.name}_${islandContext.id}.json`, event.path);
-    }
-    return response2;
-  }
-  const response = {
-    body: renderHTMLDocument(htmlContext),
-    statusCode: getResponseStatus(event),
-    statusMessage: getResponseStatusText(event),
-    headers: {
-      "content-type": "text/html;charset=utf-8",
-      "x-powered-by": "Nuxt"
-    }
-  };
-  return response;
-});
-function lazyCachedFunction(fn) {
-  let res = null;
-  return () => {
-    if (res === null) {
-      res = fn().catch((err) => {
-        res = null;
-        throw err;
-      });
-    }
-    return res;
-  };
-}
-function normalizeChunks(chunks) {
-  return chunks.filter(Boolean).map((i) => i.trim());
-}
-function joinTags(tags) {
-  return tags.join("");
-}
-function joinAttrs(chunks) {
-  if (chunks.length === 0) {
-    return "";
-  }
-  return " " + chunks.join(" ");
-}
-function renderHTMLDocument(html) {
-  return `<!DOCTYPE html><html${joinAttrs(html.htmlAttrs)}><head>${joinTags(html.head)}</head><body${joinAttrs(html.bodyAttrs)}>${joinTags(html.bodyPrepend)}${joinTags(html.body)}${joinTags(html.bodyAppend)}</body></html>`;
-}
-async function renderInlineStyles(usedModules) {
-  const styleMap = await getSSRStyles();
-  const inlinedStyles = /* @__PURE__ */ new Set();
-  for (const mod of usedModules) {
-    if (mod in styleMap && styleMap[mod]) {
-      for (const style of await styleMap[mod]()) {
-        inlinedStyles.add(style);
-      }
-    }
-  }
-  return Array.from(inlinedStyles).map((style) => ({ innerHTML: style }));
-}
-function renderPayloadResponse(ssrContext) {
-  return {
-    body: process.env.NUXT_JSON_PAYLOADS ? stringify(splitPayload(ssrContext).payload, ssrContext._payloadReducers) : `export default ${devalue(splitPayload(ssrContext).payload)}`,
-    statusCode: getResponseStatus(ssrContext.event),
-    statusMessage: getResponseStatusText(ssrContext.event),
-    headers: {
-      "content-type": process.env.NUXT_JSON_PAYLOADS ? "application/json;charset=utf-8" : "text/javascript;charset=utf-8",
-      "x-powered-by": "Nuxt"
-    }
-  };
-}
-function renderPayloadJsonScript(opts) {
-  const contents = opts.data ? stringify(opts.data, opts.ssrContext._payloadReducers) : "";
-  const payload = {
-    "type": "application/json",
-    "innerHTML": contents,
-    "data-nuxt-data": appId,
-    "data-ssr": !(process.env.NUXT_NO_SSR || opts.ssrContext.noSSR)
-  };
-  if (!multiApp) {
-    payload.id = "__NUXT_DATA__";
-  }
-  if (opts.src) {
-    payload["data-src"] = opts.src;
-  }
-  const config = uneval(opts.ssrContext.config);
-  return [
-    payload,
-    {
-      innerHTML: multiApp ? `window.__NUXT__=window.__NUXT__||{};window.__NUXT__[${JSON.stringify(appId)}]={config:${config}}` : `window.__NUXT__={};window.__NUXT__.config=${config}`
-    }
-  ];
-}
-function renderPayloadScript(opts) {
-  opts.data.config = opts.ssrContext.config;
-  const _PAYLOAD_EXTRACTION = import.meta.prerender && process.env.NUXT_PAYLOAD_EXTRACTION && !opts.ssrContext.noSSR;
-  const nuxtData = devalue(opts.data);
-  if (_PAYLOAD_EXTRACTION) {
-    const singleAppPayload2 = `import p from "${opts.src}";window.__NUXT__={...p,...(${nuxtData})}`;
-    const multiAppPayload2 = `import p from "${opts.src}";window.__NUXT__=window.__NUXT__||{};window.__NUXT__[${JSON.stringify(appId)}]={...p,...(${nuxtData})}`;
-    return [
-      {
-        type: "module",
-        innerHTML: multiApp ? multiAppPayload2 : singleAppPayload2
-      }
-    ];
-  }
-  const singleAppPayload = `window.__NUXT__=${nuxtData}`;
-  const multiAppPayload = `window.__NUXT__=window.__NUXT__||{};window.__NUXT__[${JSON.stringify(appId)}]=${nuxtData}`;
-  return [
-    {
-      innerHTML: multiApp ? multiAppPayload : singleAppPayload
-    }
-  ];
-}
-function splitPayload(ssrContext) {
-  const { data, prerenderedAt, ...initial } = ssrContext.payload;
-  return {
-    initial: { ...initial, prerenderedAt },
-    payload: { data, prerenderedAt }
-  };
-}
-function getServerComponentHTML(body) {
-  const match = body[0].match(ROOT_NODE_REGEX);
-  return match?.[1] || body[0];
-}
-const SSR_SLOT_TELEPORT_MARKER = /^uid=([^;]*);slot=(.*)$/;
-const SSR_CLIENT_TELEPORT_MARKER = /^uid=([^;]*);client=(.*)$/;
-const SSR_CLIENT_SLOT_MARKER = /^island-slot=[^;]*;(.*)$/;
-function getSlotIslandResponse(ssrContext) {
-  if (!ssrContext.islandContext || !Object.keys(ssrContext.islandContext.slots).length) {
-    return void 0;
-  }
-  const response = {};
-  for (const [name, slot] of Object.entries(ssrContext.islandContext.slots)) {
-    response[name] = {
-      ...slot,
-      fallback: ssrContext.teleports?.[`island-fallback=${name}`]
-    };
-  }
-  return response;
-}
-function getClientIslandResponse(ssrContext) {
-  if (!ssrContext.islandContext || !Object.keys(ssrContext.islandContext.components).length) {
-    return void 0;
-  }
-  const response = {};
-  for (const [clientUid, component] of Object.entries(ssrContext.islandContext.components)) {
-    const html = ssrContext.teleports?.[clientUid]?.replaceAll("<!--teleport start anchor-->", "") || "";
-    response[clientUid] = {
-      ...component,
-      html,
-      slots: getComponentSlotTeleport(ssrContext.teleports ?? {})
-    };
-  }
-  return response;
-}
-function getComponentSlotTeleport(teleports) {
-  const entries = Object.entries(teleports);
-  const slots = {};
-  for (const [key, value] of entries) {
-    const match = key.match(SSR_CLIENT_SLOT_MARKER);
-    if (match) {
-      const [, slot] = match;
-      if (!slot) {
-        continue;
-      }
-      slots[slot] = value;
-    }
-  }
-  return slots;
-}
-function replaceIslandTeleports(ssrContext, html) {
-  const { teleports, islandContext } = ssrContext;
-  if (islandContext || !teleports) {
-    return html;
-  }
-  for (const key in teleports) {
-    const matchClientComp = key.match(SSR_CLIENT_TELEPORT_MARKER);
-    if (matchClientComp) {
-      const [, uid, clientId] = matchClientComp;
-      if (!uid || !clientId) {
-        continue;
-      }
-      html = html.replace(new RegExp(` data-island-uid="${uid}" data-island-component="${clientId}"[^>]*>`), (full) => {
-        return full + teleports[key];
-      });
-      continue;
-    }
-    const matchSlot = key.match(SSR_SLOT_TELEPORT_MARKER);
-    if (matchSlot) {
-      const [, uid, slot] = matchSlot;
-      if (!uid || !slot) {
-        continue;
-      }
-      html = html.replace(new RegExp(` data-island-uid="${uid}" data-island-slot="${slot}"[^>]*>`), (full) => {
-        return full + teleports[key];
-      });
-    }
-  }
-  return html;
-}
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/error-500.d.ts b/node_modules/nuxt/dist/core/runtime/nitro/templates/error-500.d.ts
similarity index 100%
rename from node_modules/nuxt/dist/core/runtime/nitro/error-500.d.ts
rename to node_modules/nuxt/dist/core/runtime/nitro/templates/error-500.d.ts
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/templates/error-500.js b/node_modules/nuxt/dist/core/runtime/nitro/templates/error-500.js
new file mode 100644
index 0000000..2f1da16
--- /dev/null
+++ b/node_modules/nuxt/dist/core/runtime/nitro/templates/error-500.js
@@ -0,0 +1,6 @@
+import { escapeHtml } from "@vue/shared";
+const _messages = { "appName": "Nuxt", "version": "", "statusCode": 500, "statusMessage": "Server error", "description": "This page is temporarily unavailable." };
+export const template = (messages) => {
+  messages = { ..._messages, ...messages };
+  return '<!DOCTYPE html><html lang="en"><head><title>' + escapeHtml(messages.statusCode) + " - " + escapeHtml(messages.statusMessage) + " | " + escapeHtml(messages.appName) + `</title><meta charset="utf-8"><meta content="width=device-width,initial-scale=1.0,minimum-scale=1.0" name="viewport"><style>.spotlight{background:linear-gradient(45deg,#00dc82,#36e4da 50%,#0047e1);filter:blur(20vh)}*,:after,:before{border-color:var(--un-default-border-color,#e5e7eb);border-style:solid;border-width:0;box-sizing:border-box}:after,:before{--un-content:""}html{line-height:1.5;-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-moz-tab-size:4;tab-size:4;-webkit-tap-highlight-color:transparent}body{line-height:inherit;margin:0}h1{font-size:inherit;font-weight:inherit}h1,p{margin:0}*,:after,:before{--un-rotate:0;--un-rotate-x:0;--un-rotate-y:0;--un-rotate-z:0;--un-scale-x:1;--un-scale-y:1;--un-scale-z:1;--un-skew-x:0;--un-skew-y:0;--un-translate-x:0;--un-translate-y:0;--un-translate-z:0;--un-pan-x: ;--un-pan-y: ;--un-pinch-zoom: ;--un-scroll-snap-strictness:proximity;--un-ordinal: ;--un-slashed-zero: ;--un-numeric-figure: ;--un-numeric-spacing: ;--un-numeric-fraction: ;--un-border-spacing-x:0;--un-border-spacing-y:0;--un-ring-offset-shadow:0 0 transparent;--un-ring-shadow:0 0 transparent;--un-shadow-inset: ;--un-shadow:0 0 transparent;--un-ring-inset: ;--un-ring-offset-width:0px;--un-ring-offset-color:#fff;--un-ring-width:0px;--un-ring-color:rgba(147,197,253,.5);--un-blur: ;--un-brightness: ;--un-contrast: ;--un-drop-shadow: ;--un-grayscale: ;--un-hue-rotate: ;--un-invert: ;--un-saturate: ;--un-sepia: ;--un-backdrop-blur: ;--un-backdrop-brightness: ;--un-backdrop-contrast: ;--un-backdrop-grayscale: ;--un-backdrop-hue-rotate: ;--un-backdrop-invert: ;--un-backdrop-opacity: ;--un-backdrop-saturate: ;--un-backdrop-sepia: }.fixed{position:fixed}.-bottom-1\\/2{bottom:-50%}.left-0{left:0}.right-0{right:0}.grid{display:grid}.mb-16{margin-bottom:4rem}.mb-8{margin-bottom:2rem}.h-1\\/2{height:50%}.max-w-520px{max-width:520px}.min-h-screen{min-height:100vh}.place-content-center{place-content:center}.overflow-hidden{overflow:hidden}.bg-white{--un-bg-opacity:1;background-color:rgb(255 255 255/var(--un-bg-opacity))}.px-8{padding-left:2rem;padding-right:2rem}.text-center{text-align:center}.text-8xl{font-size:6rem;line-height:1}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-black{--un-text-opacity:1;color:rgb(0 0 0/var(--un-text-opacity))}.font-light{font-weight:300}.font-medium{font-weight:500}.leading-tight{line-height:1.25}.font-sans{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}@media (prefers-color-scheme:dark){.dark\\:bg-black{--un-bg-opacity:1;background-color:rgb(0 0 0/var(--un-bg-opacity))}.dark\\:text-white{--un-text-opacity:1;color:rgb(255 255 255/var(--un-text-opacity))}}@media (min-width:640px){.sm\\:px-0{padding-left:0;padding-right:0}.sm\\:text-4xl{font-size:2.25rem;line-height:2.5rem}}</style><script>!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver((e=>{for(const o of e)if("childList"===o.type)for(const e of o.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&r(e)})).observe(document,{childList:!0,subtree:!0})}function r(e){if(e.ep)return;e.ep=!0;const r=function(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?r.credentials="include":"anonymous"===e.crossOrigin?r.credentials="omit":r.credentials="same-origin",r}(e);fetch(e.href,r)}}();<\/script></head><body class="antialiased bg-white dark:bg-black dark:text-white font-sans grid min-h-screen overflow-hidden place-content-center text-black"><div class="-bottom-1/2 fixed h-1/2 left-0 right-0 spotlight"></div><div class="max-w-520px text-center"><h1 class="font-medium mb-8 sm:text-10xl text-8xl">` + escapeHtml(messages.statusCode) + '</h1><p class="font-light leading-tight mb-16 px-8 sm:px-0 sm:text-4xl text-xl">' + escapeHtml(messages.description) + "</p></div></body></html>";
+};
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/error-dev.d.ts b/node_modules/nuxt/dist/core/runtime/nitro/templates/error-dev.d.ts
similarity index 100%
rename from node_modules/nuxt/dist/core/runtime/nitro/error-dev.d.ts
rename to node_modules/nuxt/dist/core/runtime/nitro/templates/error-dev.d.ts
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/templates/error-dev.js b/node_modules/nuxt/dist/core/runtime/nitro/templates/error-dev.js
new file mode 100644
index 0000000..df331f4
--- /dev/null
+++ b/node_modules/nuxt/dist/core/runtime/nitro/templates/error-dev.js
@@ -0,0 +1,6 @@
+import { escapeHtml } from "@vue/shared";
+const _messages = { "appName": "Nuxt", "version": "", "statusCode": 500, "statusMessage": "Server error", "description": "An error occurred in the application and the page could not be served. If you are the application owner, check your server logs for details.", "stack": "" };
+export const template = (messages) => {
+  messages = { ..._messages, ...messages };
+  return '<!DOCTYPE html><html lang="en"><head><title>' + escapeHtml(messages.statusCode) + " - " + escapeHtml(messages.statusMessage || "Internal Server Error") + `</title><meta charset="utf-8"><meta content="width=device-width,initial-scale=1.0,minimum-scale=1.0" name="viewport"><style>.spotlight{background:linear-gradient(45deg,#00dc82,#36e4da 50%,#0047e1);bottom:-40vh;filter:blur(30vh);height:60vh;opacity:.8}*,:after,:before{border-color:var(--un-default-border-color,#e5e7eb);border-style:solid;border-width:0;box-sizing:border-box}:after,:before{--un-content:""}html{line-height:1.5;-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-moz-tab-size:4;tab-size:4;-webkit-tap-highlight-color:transparent}body{line-height:inherit;margin:0}h1{font-size:inherit;font-weight:inherit}h1,p{margin:0}*,:after,:before{--un-rotate:0;--un-rotate-x:0;--un-rotate-y:0;--un-rotate-z:0;--un-scale-x:1;--un-scale-y:1;--un-scale-z:1;--un-skew-x:0;--un-skew-y:0;--un-translate-x:0;--un-translate-y:0;--un-translate-z:0;--un-pan-x: ;--un-pan-y: ;--un-pinch-zoom: ;--un-scroll-snap-strictness:proximity;--un-ordinal: ;--un-slashed-zero: ;--un-numeric-figure: ;--un-numeric-spacing: ;--un-numeric-fraction: ;--un-border-spacing-x:0;--un-border-spacing-y:0;--un-ring-offset-shadow:0 0 transparent;--un-ring-shadow:0 0 transparent;--un-shadow-inset: ;--un-shadow:0 0 transparent;--un-ring-inset: ;--un-ring-offset-width:0px;--un-ring-offset-color:#fff;--un-ring-width:0px;--un-ring-color:rgba(147,197,253,.5);--un-blur: ;--un-brightness: ;--un-contrast: ;--un-drop-shadow: ;--un-grayscale: ;--un-hue-rotate: ;--un-invert: ;--un-saturate: ;--un-sepia: ;--un-backdrop-blur: ;--un-backdrop-brightness: ;--un-backdrop-contrast: ;--un-backdrop-grayscale: ;--un-backdrop-hue-rotate: ;--un-backdrop-invert: ;--un-backdrop-opacity: ;--un-backdrop-saturate: ;--un-backdrop-sepia: }.pointer-events-none{pointer-events:none}.fixed{position:fixed}.left-0{left:0}.right-0{right:0}.z-10{z-index:10}.mb-6{margin-bottom:1.5rem}.mb-8{margin-bottom:2rem}.h-auto{height:auto}.min-h-screen{min-height:100vh}.flex{display:flex}.flex-1{flex:1 1 0%}.flex-col{flex-direction:column}.overflow-y-auto{overflow-y:auto}.rounded-t-md{border-top-left-radius:.375rem;border-top-right-radius:.375rem}.bg-black\\/5{background-color:#0000000d}.bg-white{--un-bg-opacity:1;background-color:rgb(255 255 255/var(--un-bg-opacity))}.p-8{padding:2rem}.px-10{padding-left:2.5rem;padding-right:2.5rem}.pt-14{padding-top:3.5rem}.text-6xl{font-size:3.75rem;line-height:1}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-black{--un-text-opacity:1;color:rgb(0 0 0/var(--un-text-opacity))}.font-light{font-weight:300}.font-medium{font-weight:500}.leading-tight{line-height:1.25}.font-sans{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}@media (prefers-color-scheme:dark){.dark\\:bg-black{--un-bg-opacity:1;background-color:rgb(0 0 0/var(--un-bg-opacity))}.dark\\:bg-white\\/10{background-color:#ffffff1a}.dark\\:text-white{--un-text-opacity:1;color:rgb(255 255 255/var(--un-text-opacity))}}@media (min-width:640px){.sm\\:text-2xl{font-size:1.5rem;line-height:2rem}.sm\\:text-8xl{font-size:6rem;line-height:1}}</style><script>!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver((e=>{for(const o of e)if("childList"===o.type)for(const e of o.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&r(e)})).observe(document,{childList:!0,subtree:!0})}function r(e){if(e.ep)return;e.ep=!0;const r=function(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?r.credentials="include":"anonymous"===e.crossOrigin?r.credentials="omit":r.credentials="same-origin",r}(e);fetch(e.href,r)}}();<\/script></head><body class="antialiased bg-white dark:bg-black dark:text-white flex flex-col font-sans min-h-screen pt-14 px-10 text-black"><div class="fixed left-0 pointer-events-none right-0 spotlight"></div><h1 class="font-medium mb-6 sm:text-8xl text-6xl">` + escapeHtml(messages.statusCode) + '</h1><p class="font-light leading-tight mb-8 sm:text-2xl text-xl">' + escapeHtml(messages.description) + '</p><div class="bg-black/5 bg-white dark:bg-white/10 flex-1 h-auto overflow-y-auto rounded-t-md"><div class="font-light leading-tight p-8 text-xl z-10">' + escapeHtml(messages.stack) + "</div></div></body></html>";
+};
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/cache-driver.d.ts b/node_modules/nuxt/dist/core/runtime/nitro/utils/cache-driver.d.ts
similarity index 100%
rename from node_modules/nuxt/dist/core/runtime/nitro/cache-driver.d.ts
rename to node_modules/nuxt/dist/core/runtime/nitro/utils/cache-driver.d.ts
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/cache-driver.js b/node_modules/nuxt/dist/core/runtime/nitro/utils/cache-driver.js
similarity index 92%
rename from node_modules/nuxt/dist/core/runtime/nitro/cache-driver.js
rename to node_modules/nuxt/dist/core/runtime/nitro/utils/cache-driver.js
index 7a6076c..a5fc28e 100644
--- a/node_modules/nuxt/dist/core/runtime/nitro/cache-driver.js
+++ b/node_modules/nuxt/dist/core/runtime/nitro/utils/cache-driver.js
@@ -7,7 +7,7 @@ import lruCache from 'unstorage/drivers/lru-cache'
 /**
  * @param {string} item
  */
-const normalizeFsKey = item => item.replaceAll(':', '_')
+const normalizeFsKey = item => decodeURIComponent(item.replaceAll(':', '_'))
 
 /**
  * @param {{ base: string }} opts
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/utils/cache.d.ts b/node_modules/nuxt/dist/core/runtime/nitro/utils/cache.d.ts
new file mode 100644
index 0000000..6cecb9d
--- /dev/null
+++ b/node_modules/nuxt/dist/core/runtime/nitro/utils/cache.d.ts
@@ -0,0 +1,8 @@
+export declare const payloadCache: any;
+export declare const islandCache: any;
+export declare const islandPropCache: any;
+export declare const sharedPrerenderPromises: Map<string, Promise<any>> | null;
+export declare const sharedPrerenderCache: {
+    get<T = unknown>(key: string): Promise<T> | undefined;
+    set<T>(key: string, value: Promise<T>): Promise<void>;
+} | null;
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/utils/cache.js b/node_modules/nuxt/dist/core/runtime/nitro/utils/cache.js
new file mode 100644
index 0000000..d4b5e58
--- /dev/null
+++ b/node_modules/nuxt/dist/core/runtime/nitro/utils/cache.js
@@ -0,0 +1,18 @@
+import { useStorage } from "#internal/nitro";
+export const payloadCache = import.meta.prerender ? useStorage("internal:nuxt:prerender:payload") : null;
+export const islandCache = import.meta.prerender ? useStorage("internal:nuxt:prerender:island") : null;
+export const islandPropCache = import.meta.prerender ? useStorage("internal:nuxt:prerender:island-props") : null;
+export const sharedPrerenderPromises = import.meta.prerender && process.env.NUXT_SHARED_DATA ? /* @__PURE__ */ new Map() : null;
+const sharedPrerenderKeys = /* @__PURE__ */ new Set();
+export const sharedPrerenderCache = import.meta.prerender && process.env.NUXT_SHARED_DATA ? {
+  get(key) {
+    if (sharedPrerenderKeys.has(key)) {
+      return sharedPrerenderPromises.get(key) ?? useStorage("internal:nuxt:prerender:shared").getItem(key);
+    }
+  },
+  async set(key, value) {
+    sharedPrerenderKeys.add(key);
+    sharedPrerenderPromises.set(key, value);
+    useStorage("internal:nuxt:prerender:shared").setItem(key, await value).finally(() => sharedPrerenderPromises.delete(key));
+  }
+} : null;
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/config.d.ts b/node_modules/nuxt/dist/core/runtime/nitro/utils/config.d.ts
similarity index 100%
rename from node_modules/nuxt/dist/core/runtime/nitro/config.d.ts
rename to node_modules/nuxt/dist/core/runtime/nitro/utils/config.d.ts
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/config.js b/node_modules/nuxt/dist/core/runtime/nitro/utils/config.js
similarity index 100%
rename from node_modules/nuxt/dist/core/runtime/nitro/config.js
rename to node_modules/nuxt/dist/core/runtime/nitro/utils/config.js
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/utils/error.d.ts b/node_modules/nuxt/dist/core/runtime/nitro/utils/error.d.ts
new file mode 100644
index 0000000..7775ad2
--- /dev/null
+++ b/node_modules/nuxt/dist/core/runtime/nitro/utils/error.d.ts
@@ -0,0 +1,6 @@
+import type { H3Event } from 'h3';
+/**
+ * Nitro internal functions extracted from https://github.com/nitrojs/nitro/blob/v2/src/runtime/internal/utils.ts
+ */
+export declare function isJsonRequest(event: H3Event): boolean;
+export declare function hasReqHeader(event: H3Event, name: string, includes: string): boolean | "" | undefined;
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/utils/error.js b/node_modules/nuxt/dist/core/runtime/nitro/utils/error.js
new file mode 100644
index 0000000..f378ece
--- /dev/null
+++ b/node_modules/nuxt/dist/core/runtime/nitro/utils/error.js
@@ -0,0 +1,11 @@
+import { getRequestHeader } from "h3";
+export function isJsonRequest(event) {
+  if (hasReqHeader(event, "accept", "text/html")) {
+    return false;
+  }
+  return hasReqHeader(event, "accept", "application/json") || hasReqHeader(event, "user-agent", "curl/") || hasReqHeader(event, "user-agent", "httpie/") || hasReqHeader(event, "sec-fetch-mode", "cors") || event.path.startsWith("/api/") || event.path.endsWith(".json");
+}
+export function hasReqHeader(event, name, includes) {
+  const value = getRequestHeader(event, name);
+  return value && typeof value === "string" && value.toLowerCase().includes(includes);
+}
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/paths.d.ts b/node_modules/nuxt/dist/core/runtime/nitro/utils/paths.d.ts
similarity index 100%
rename from node_modules/nuxt/dist/core/runtime/nitro/paths.d.ts
rename to node_modules/nuxt/dist/core/runtime/nitro/utils/paths.d.ts
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/paths.js b/node_modules/nuxt/dist/core/runtime/nitro/utils/paths.js
similarity index 100%
rename from node_modules/nuxt/dist/core/runtime/nitro/paths.js
rename to node_modules/nuxt/dist/core/runtime/nitro/utils/paths.js
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/app.d.ts b/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/app.d.ts
new file mode 100644
index 0000000..bf14f48
--- /dev/null
+++ b/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/app.d.ts
@@ -0,0 +1,7 @@
+import type { H3Event } from 'h3';
+import type { NuxtSSRContext } from '#app';
+import type { NuxtPayload } from '#app/nuxt';
+export declare function createSSRContext(event: H3Event): NuxtSSRContext;
+export declare function setSSRError(ssrContext: NuxtSSRContext, error: NuxtPayload['error'] & {
+    url: string;
+}): void;
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/app.js b/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/app.js
new file mode 100644
index 0000000..3d48b15
--- /dev/null
+++ b/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/app.js
@@ -0,0 +1,32 @@
+import { createHead } from "@unhead/vue/server";
+import { sharedPrerenderCache } from "../cache.js";
+import { useRuntimeConfig } from "#internal/nitro";
+import unheadOptions from "#internal/unhead-options.mjs";
+const PRERENDER_NO_SSR_ROUTES = /* @__PURE__ */ new Set(["/index.html", "/200.html", "/404.html"]);
+export function createSSRContext(event) {
+  const ssrContext = {
+    url: event.path,
+    event,
+    runtimeConfig: useRuntimeConfig(event),
+    noSSR: !!process.env.NUXT_NO_SSR || event.context.nuxt?.noSSR || (import.meta.prerender ? PRERENDER_NO_SSR_ROUTES.has(event.path) : false),
+    head: createHead(unheadOptions),
+    error: false,
+    nuxt: void 0,
+    /* NuxtApp */
+    payload: {},
+    _payloadReducers: /* @__PURE__ */ Object.create(null),
+    modules: /* @__PURE__ */ new Set()
+  };
+  if (import.meta.prerender) {
+    if (process.env.NUXT_SHARED_DATA) {
+      ssrContext._sharedPrerenderCache = sharedPrerenderCache;
+    }
+    ssrContext.payload.prerenderedAt = Date.now();
+  }
+  return ssrContext;
+}
+export function setSSRError(ssrContext, error) {
+  ssrContext.error = true;
+  ssrContext.payload = { error };
+  ssrContext.url = error.url;
+}
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/build-files.d.ts b/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/build-files.d.ts
new file mode 100644
index 0000000..53ccf57
--- /dev/null
+++ b/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/build-files.d.ts
@@ -0,0 +1,23 @@
+import type { NuxtSSRContext } from 'nuxt/app';
+export declare const getSSRRenderer: () => Promise<{
+    rendererContext: import("vue-bundle-renderer/runtime").RendererContext;
+    renderToString(ssrContext: import("vue-bundle-renderer/runtime").SSRContext): Promise<{
+        html: string;
+        renderResourceHeaders: () => Record<string, string>;
+        renderResourceHints: () => string;
+        renderStyles: () => string;
+        renderScripts: () => string;
+    }>;
+}>;
+export declare function getRenderer(ssrContext: NuxtSSRContext): Promise<{
+    rendererContext: import("vue-bundle-renderer/runtime").RendererContext;
+    renderToString(ssrContext: import("vue-bundle-renderer/runtime").SSRContext): Promise<{
+        html: string;
+        renderResourceHeaders: () => Record<string, string>;
+        renderResourceHints: () => string;
+        renderStyles: () => string;
+        renderScripts: () => string;
+    }>;
+}>;
+export declare const getSSRStyles: () => Promise<Record<string, () => Promise<string[]>>>;
+export declare const getEntryIds: () => Promise<string[]>;
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/build-files.js b/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/build-files.js
new file mode 100644
index 0000000..22c29a7
--- /dev/null
+++ b/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/build-files.js
@@ -0,0 +1,94 @@
+import {
+  createRenderer
+} from "vue-bundle-renderer/runtime";
+import { renderToString as _renderToString } from "vue/server-renderer";
+import { propsToString } from "@unhead/vue/server";
+import { useRuntimeConfig } from "#internal/nitro";
+import { appRootAttrs, appRootTag, appSpaLoaderAttrs, appSpaLoaderTag, spaLoadingTemplateOutside } from "#internal/nuxt.config.mjs";
+import { buildAssetsURL } from "#internal/nuxt/paths";
+const APP_ROOT_OPEN_TAG = `<${appRootTag}${propsToString(appRootAttrs)}>`;
+const APP_ROOT_CLOSE_TAG = `</${appRootTag}>`;
+const getServerEntry = () => import("#build/dist/server/server.mjs").then((r) => r.default || r);
+const getClientManifest = () => import("#build/dist/server/client.manifest.mjs").then((r) => r.default || r).then((r) => typeof r === "function" ? r() : r);
+export const getSSRRenderer = lazyCachedFunction(async () => {
+  const manifest = await getClientManifest();
+  if (!manifest) {
+    throw new Error("client.manifest is not available");
+  }
+  const createSSRApp = await getServerEntry();
+  if (!createSSRApp) {
+    throw new Error("Server bundle is not available");
+  }
+  const options = {
+    manifest,
+    renderToString,
+    buildAssetsURL
+  };
+  const renderer = createRenderer(createSSRApp, options);
+  async function renderToString(input, context) {
+    const html = await _renderToString(input, context);
+    if (import.meta.dev && process.env.NUXT_VITE_NODE_OPTIONS) {
+      renderer.rendererContext.updateManifest(await getClientManifest());
+    }
+    return APP_ROOT_OPEN_TAG + html + APP_ROOT_CLOSE_TAG;
+  }
+  return renderer;
+});
+const getSPARenderer = lazyCachedFunction(async () => {
+  const manifest = await getClientManifest();
+  const spaTemplate = await import("#spa-template").then((r) => r.template).catch(() => "").then((r) => {
+    if (spaLoadingTemplateOutside) {
+      const APP_SPA_LOADER_OPEN_TAG = `<${appSpaLoaderTag}${propsToString(appSpaLoaderAttrs)}>`;
+      const APP_SPA_LOADER_CLOSE_TAG = `</${appSpaLoaderTag}>`;
+      const appTemplate = APP_ROOT_OPEN_TAG + APP_ROOT_CLOSE_TAG;
+      const loaderTemplate = r ? APP_SPA_LOADER_OPEN_TAG + r + APP_SPA_LOADER_CLOSE_TAG : "";
+      return appTemplate + loaderTemplate;
+    } else {
+      return APP_ROOT_OPEN_TAG + r + APP_ROOT_CLOSE_TAG;
+    }
+  });
+  const options = {
+    manifest,
+    renderToString: () => spaTemplate,
+    buildAssetsURL
+  };
+  const renderer = createRenderer(() => () => {
+  }, options);
+  const result = await renderer.renderToString({});
+  const renderToString = (ssrContext) => {
+    const config = useRuntimeConfig(ssrContext.event);
+    ssrContext.modules ||= /* @__PURE__ */ new Set();
+    ssrContext.payload.serverRendered = false;
+    ssrContext.config = {
+      public: config.public,
+      app: config.app
+    };
+    return Promise.resolve(result);
+  };
+  return {
+    rendererContext: renderer.rendererContext,
+    renderToString
+  };
+});
+function lazyCachedFunction(fn) {
+  let res = null;
+  return () => {
+    if (res === null) {
+      res = fn().catch((err) => {
+        res = null;
+        throw err;
+      });
+    }
+    return res;
+  };
+}
+export function getRenderer(ssrContext) {
+  return process.env.NUXT_NO_SSR || ssrContext.noSSR ? getSPARenderer() : getSSRRenderer();
+}
+export const getSSRStyles = lazyCachedFunction(() => import("#build/dist/server/styles.mjs").then((r) => r.default || r));
+export const getEntryIds = () => getClientManifest().then((r) => Object.values(r).filter(
+  (r2) => (
+    // @ts-expect-error internal key set by CSS inlining configuration
+    r2._globalCSS
+  )
+).map((r2) => r2.src));
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/inline-styles.d.ts b/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/inline-styles.d.ts
new file mode 100644
index 0000000..a1a626c
--- /dev/null
+++ b/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/inline-styles.d.ts
@@ -0,0 +1,2 @@
+import type { Style } from '@unhead/vue/types';
+export declare function renderInlineStyles(usedModules: Set<string> | string[]): Promise<Style[]>;
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/inline-styles.js b/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/inline-styles.js
new file mode 100644
index 0000000..5f17657
--- /dev/null
+++ b/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/inline-styles.js
@@ -0,0 +1,13 @@
+import { getSSRStyles } from "./build-files.js";
+export async function renderInlineStyles(usedModules) {
+  const styleMap = await getSSRStyles();
+  const inlinedStyles = /* @__PURE__ */ new Set();
+  for (const mod of usedModules) {
+    if (mod in styleMap && styleMap[mod]) {
+      for (const style of await styleMap[mod]()) {
+        inlinedStyles.add(style);
+      }
+    }
+  }
+  return Array.from(inlinedStyles).map((style) => ({ innerHTML: style }));
+}
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/renderer.d.ts b/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/islands.d.ts
similarity index 50%
rename from node_modules/nuxt/dist/core/runtime/nitro/renderer.d.ts
rename to node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/islands.d.ts
index ddff69c..bd881c1 100644
--- a/node_modules/nuxt/dist/core/runtime/nitro/renderer.d.ts
+++ b/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/islands.d.ts
@@ -1,44 +1,36 @@
-import type { Head } from '@unhead/schema';
-export interface NuxtRenderHTMLContext {
-    island?: boolean;
-    htmlAttrs: string[];
-    head: string[];
-    bodyAttrs: string[];
-    bodyPrepend: string[];
-    body: string[];
-    bodyAppend: string[];
-}
+import type { SerializableHead } from '@unhead/vue/types';
+import type { NuxtSSRContext } from '#app/nuxt';
+/**
+ * remove the root node from the html body
+ */
+export declare function getServerComponentHTML(body: string): string;
+export declare function getSlotIslandResponse(ssrContext: NuxtSSRContext): NuxtIslandResponse['slots'];
+export declare function getClientIslandResponse(ssrContext: NuxtSSRContext): NuxtIslandResponse['components'];
+export declare function getComponentSlotTeleport(clientUid: string, teleports: Record<string, string>): Record<string, string>;
+export declare function replaceIslandTeleports(ssrContext: NuxtSSRContext, html: string): string;
 export interface NuxtIslandSlotResponse {
     props: Array<unknown>;
     fallback?: string;
 }
-export interface NuxtIslandClientResponse {
-    html: string;
-    props: unknown;
-    chunk: string;
-    slots?: Record<string, string>;
-}
 export interface NuxtIslandContext {
     id?: string;
     name: string;
     props?: Record<string, any>;
-    url?: string;
+    url: string;
     slots: Record<string, Omit<NuxtIslandSlotResponse, 'html' | 'fallback'>>;
     components: Record<string, Omit<NuxtIslandClientResponse, 'html'>>;
 }
 export interface NuxtIslandResponse {
     id?: string;
     html: string;
-    head: Head;
+    head: SerializableHead;
     props?: Record<string, Record<string, any>>;
     components?: Record<string, NuxtIslandClientResponse>;
     slots?: Record<string, NuxtIslandSlotResponse>;
 }
-export interface NuxtRenderResponse {
-    body: string;
-    statusCode: number;
-    statusMessage?: string;
-    headers: Record<string, string>;
+export interface NuxtIslandClientResponse {
+    html: string;
+    props: unknown;
+    chunk: string;
+    slots?: Record<string, string>;
 }
-declare const _default: any;
-export default _default;
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/islands.js b/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/islands.js
new file mode 100644
index 0000000..9d3a049
--- /dev/null
+++ b/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/islands.js
@@ -0,0 +1,82 @@
+import { appRootTag } from "#internal/nuxt.config.mjs";
+const ROOT_NODE_REGEX = new RegExp(`^<${appRootTag}[^>]*>([\\s\\S]*)<\\/${appRootTag}>$`);
+export function getServerComponentHTML(body) {
+  const match = body.match(ROOT_NODE_REGEX);
+  return match?.[1] || body;
+}
+const SSR_SLOT_TELEPORT_MARKER = /^uid=([^;]*);slot=(.*)$/;
+const SSR_CLIENT_TELEPORT_MARKER = /^uid=([^;]*);client=(.*)$/;
+const SSR_CLIENT_SLOT_MARKER = /^island-slot=([^;]*);(.*)$/;
+export function getSlotIslandResponse(ssrContext) {
+  if (!ssrContext.islandContext || !Object.keys(ssrContext.islandContext.slots).length) {
+    return void 0;
+  }
+  const response = {};
+  for (const [name, slot] of Object.entries(ssrContext.islandContext.slots)) {
+    response[name] = {
+      ...slot,
+      fallback: ssrContext.teleports?.[`island-fallback=${name}`]
+    };
+  }
+  return response;
+}
+export function getClientIslandResponse(ssrContext) {
+  if (!ssrContext.islandContext || !Object.keys(ssrContext.islandContext.components).length) {
+    return void 0;
+  }
+  const response = {};
+  for (const [clientUid, component] of Object.entries(ssrContext.islandContext.components)) {
+    const html = ssrContext.teleports?.[clientUid]?.replaceAll("<!--teleport start anchor-->", "") || "";
+    response[clientUid] = {
+      ...component,
+      html,
+      slots: getComponentSlotTeleport(clientUid, ssrContext.teleports ?? {})
+    };
+  }
+  return response;
+}
+export function getComponentSlotTeleport(clientUid, teleports) {
+  const entries = Object.entries(teleports);
+  const slots = {};
+  for (const [key, value] of entries) {
+    const match = key.match(SSR_CLIENT_SLOT_MARKER);
+    if (match) {
+      const [, id, slot] = match;
+      if (!slot || clientUid !== id) {
+        continue;
+      }
+      slots[slot] = value;
+    }
+  }
+  return slots;
+}
+export function replaceIslandTeleports(ssrContext, html) {
+  const { teleports, islandContext } = ssrContext;
+  if (islandContext || !teleports) {
+    return html;
+  }
+  for (const key in teleports) {
+    const matchClientComp = key.match(SSR_CLIENT_TELEPORT_MARKER);
+    if (matchClientComp) {
+      const [, uid, clientId] = matchClientComp;
+      if (!uid || !clientId) {
+        continue;
+      }
+      html = html.replace(new RegExp(` data-island-uid="${uid}" data-island-component="${clientId}"[^>]*>`), (full) => {
+        return full + teleports[key];
+      });
+      continue;
+    }
+    const matchSlot = key.match(SSR_SLOT_TELEPORT_MARKER);
+    if (matchSlot) {
+      const [, uid, slot] = matchSlot;
+      if (!uid || !slot) {
+        continue;
+      }
+      html = html.replace(new RegExp(` data-island-uid="${uid}" data-island-slot="${slot}"[^>]*>`), (full) => {
+        return full + teleports[key];
+      });
+    }
+  }
+  return html;
+}
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/payload.d.ts b/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/payload.d.ts
new file mode 100644
index 0000000..118e57b
--- /dev/null
+++ b/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/payload.d.ts
@@ -0,0 +1,37 @@
+import type { Script } from '@unhead/vue';
+import type { NuxtSSRContext } from 'nuxt/app';
+export declare function renderPayloadResponse(ssrContext: NuxtSSRContext): {
+    body: string;
+    statusCode: number;
+    statusMessage: string;
+    headers: {
+        'content-type': string;
+        'x-powered-by': string;
+    };
+};
+export declare function renderPayloadJsonScript(opts: {
+    ssrContext: NuxtSSRContext;
+    data?: any;
+    src?: string;
+}): Script[];
+export declare function renderPayloadScript(opts: {
+    ssrContext: NuxtSSRContext;
+    data?: any;
+    src?: string;
+}): Script[];
+export declare function splitPayload(ssrContext: NuxtSSRContext): {
+    initial: {
+        prerenderedAt: number | undefined;
+        path?: string | undefined;
+        serverRendered?: boolean | undefined;
+        state?: Record<string, any> | undefined;
+        once?: Set<string> | undefined;
+        config?: Pick<import("@nuxt/schema").RuntimeConfig, "public" | "app"> | undefined;
+        error?: (import("nuxt/app").NuxtError | import("../../../../../../app/defaults.js").DefaultErrorValue) | undefined;
+        _errors?: Record<string, import("nuxt/app").NuxtError<unknown> | null> | undefined;
+    };
+    payload: {
+        data: Record<string, any> | undefined;
+        prerenderedAt: number | undefined;
+    };
+};
diff --git a/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/payload.js b/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/payload.js
new file mode 100644
index 0000000..e327caa
--- /dev/null
+++ b/node_modules/nuxt/dist/core/runtime/nitro/utils/renderer/payload.js
@@ -0,0 +1,66 @@
+import { getResponseStatus, getResponseStatusText } from "h3";
+import devalue from "@nuxt/devalue";
+import { stringify, uneval } from "devalue";
+import { appId, multiApp } from "#internal/nuxt.config.mjs";
+export function renderPayloadResponse(ssrContext) {
+  return {
+    body: process.env.NUXT_JSON_PAYLOADS ? stringify(splitPayload(ssrContext).payload, ssrContext._payloadReducers) : `export default ${devalue(splitPayload(ssrContext).payload)}`,
+    statusCode: getResponseStatus(ssrContext.event),
+    statusMessage: getResponseStatusText(ssrContext.event),
+    headers: {
+      "content-type": process.env.NUXT_JSON_PAYLOADS ? "application/json;charset=utf-8" : "text/javascript;charset=utf-8",
+      "x-powered-by": "Nuxt"
+    }
+  };
+}
+export function renderPayloadJsonScript(opts) {
+  const contents = opts.data ? stringify(opts.data, opts.ssrContext._payloadReducers) : "";
+  const payload = {
+    "type": "application/json",
+    "innerHTML": contents,
+    "data-nuxt-data": appId,
+    "data-ssr": !(process.env.NUXT_NO_SSR || opts.ssrContext.noSSR)
+  };
+  if (!multiApp) {
+    payload.id = "__NUXT_DATA__";
+  }
+  if (opts.src) {
+    payload["data-src"] = opts.src;
+  }
+  const config = uneval(opts.ssrContext.config);
+  return [
+    payload,
+    {
+      innerHTML: multiApp ? `window.__NUXT__=window.__NUXT__||{};window.__NUXT__[${JSON.stringify(appId)}]={config:${config}}` : `window.__NUXT__={};window.__NUXT__.config=${config}`
+    }
+  ];
+}
+export function renderPayloadScript(opts) {
+  opts.data.config = opts.ssrContext.config;
+  const _PAYLOAD_EXTRACTION = import.meta.prerender && process.env.NUXT_PAYLOAD_EXTRACTION && !opts.ssrContext.noSSR;
+  const nuxtData = devalue(opts.data);
+  if (_PAYLOAD_EXTRACTION) {
+    const singleAppPayload2 = `import p from "${opts.src}";window.__NUXT__={...p,...(${nuxtData})}`;
+    const multiAppPayload2 = `import p from "${opts.src}";window.__NUXT__=window.__NUXT__||{};window.__NUXT__[${JSON.stringify(appId)}]={...p,...(${nuxtData})}`;
+    return [
+      {
+        type: "module",
+        innerHTML: multiApp ? multiAppPayload2 : singleAppPayload2
+      }
+    ];
+  }
+  const singleAppPayload = `window.__NUXT__=${nuxtData}`;
+  const multiAppPayload = `window.__NUXT__=window.__NUXT__||{};window.__NUXT__[${JSON.stringify(appId)}]=${nuxtData}`;
+  return [
+    {
+      innerHTML: multiApp ? multiAppPayload : singleAppPayload
+    }
+  ];
+}
+export function splitPayload(ssrContext) {
+  const { data, prerenderedAt, ...initial } = ssrContext.payload;
+  return {
+    initial: { ...initial, prerenderedAt },
+    payload: { data, prerenderedAt }
+  };
+}
diff --git a/node_modules/nuxt/dist/head/runtime/components.d.ts b/node_modules/nuxt/dist/head/runtime/components.d.ts
index 525a21f..f153a3b 100644
--- a/node_modules/nuxt/dist/head/runtime/components.d.ts
+++ b/node_modules/nuxt/dist/head/runtime/components.d.ts
@@ -1,10 +1,149 @@
-export declare const NoScript: import("vue").DefineComponent<{
-    readonly [x: string]: any;
-}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
-    [key: string]: any;
-}>[] | null | undefined, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{
-    readonly [x: string]: any;
-}> & Readonly<{}>, {
+import type { PropType } from 'vue';
+import type { Style as UnheadStyle } from '@unhead/vue/types';
+import type { CrossOrigin, FetchPriority, HTTPEquiv, LinkRelationship, ReferrerPolicy, Target } from './types.js';
+export declare const NoScript: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
+    title: StringConstructor;
+    /**
+     * @deprecated Use tagPosition
+     */
+    body: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    tagPosition: {
+        type: PropType<UnheadStyle["tagPosition"]>;
+    };
+    accesskey: StringConstructor;
+    autocapitalize: StringConstructor;
+    autofocus: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    class: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    contenteditable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    contextmenu: StringConstructor;
+    dir: StringConstructor;
+    draggable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    enterkeyhint: StringConstructor;
+    exportparts: StringConstructor;
+    hidden: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    id: StringConstructor;
+    inputmode: StringConstructor;
+    is: StringConstructor;
+    itemid: StringConstructor;
+    itemprop: StringConstructor;
+    itemref: StringConstructor;
+    itemscope: StringConstructor;
+    itemtype: StringConstructor;
+    lang: StringConstructor;
+    nonce: StringConstructor;
+    part: StringConstructor;
+    slot: StringConstructor;
+    spellcheck: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    style: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    tabindex: StringConstructor;
+    translate: StringConstructor;
+    /**
+     * @deprecated Use tagPriority
+     */
+    renderPriority: (StringConstructor | NumberConstructor)[];
+    /**
+     * Unhead prop to modify the priority of the tag.
+     */
+    tagPriority: {
+        type: PropType<UnheadStyle["tagPriority"]>;
+    };
+}>, () => null, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
+    title: StringConstructor;
+    /**
+     * @deprecated Use tagPosition
+     */
+    body: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    tagPosition: {
+        type: PropType<UnheadStyle["tagPosition"]>;
+    };
+    accesskey: StringConstructor;
+    autocapitalize: StringConstructor;
+    autofocus: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    class: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    contenteditable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    contextmenu: StringConstructor;
+    dir: StringConstructor;
+    draggable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    enterkeyhint: StringConstructor;
+    exportparts: StringConstructor;
+    hidden: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    id: StringConstructor;
+    inputmode: StringConstructor;
+    is: StringConstructor;
+    itemid: StringConstructor;
+    itemprop: StringConstructor;
+    itemref: StringConstructor;
+    itemscope: StringConstructor;
+    itemtype: StringConstructor;
+    lang: StringConstructor;
+    nonce: StringConstructor;
+    part: StringConstructor;
+    slot: StringConstructor;
+    spellcheck: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    style: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    tabindex: StringConstructor;
+    translate: StringConstructor;
+    /**
+     * @deprecated Use tagPriority
+     */
+    renderPriority: (StringConstructor | NumberConstructor)[];
+    /**
+     * Unhead prop to modify the priority of the tag.
+     */
+    tagPriority: {
+        type: PropType<UnheadStyle["tagPriority"]>;
+    };
+}>> & Readonly<{}>, {
+    style: string | Record<string, any> | unknown[];
+    class: string | Record<string, any> | unknown[];
     body: boolean;
     autofocus: boolean;
     contenteditable: boolean;
@@ -12,14 +151,194 @@ export declare const NoScript: import("vue").DefineComponent<{
     hidden: boolean;
     spellcheck: boolean;
 }, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
-export declare const Link: import("vue").DefineComponent<{
-    readonly [x: string]: any;
-}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
-    [key: string]: any;
-}>[] | null | undefined, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{
-    readonly [x: string]: any;
-}> & Readonly<{}>, {
+export declare const Link: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
+    as: StringConstructor;
+    crossorigin: PropType<CrossOrigin>;
+    disabled: BooleanConstructor;
+    fetchpriority: PropType<FetchPriority>;
+    href: StringConstructor;
+    hreflang: StringConstructor;
+    imagesizes: StringConstructor;
+    imagesrcset: StringConstructor;
+    integrity: StringConstructor;
+    media: StringConstructor;
+    prefetch: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    referrerpolicy: PropType<ReferrerPolicy>;
+    rel: PropType<LinkRelationship>;
+    sizes: StringConstructor;
+    title: StringConstructor;
+    type: StringConstructor;
+    /** @deprecated **/
+    methods: StringConstructor;
+    /** @deprecated **/
+    target: PropType<Target>;
+    /**
+     * @deprecated Use tagPosition
+     */
+    body: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    tagPosition: {
+        type: PropType<UnheadStyle["tagPosition"]>;
+    };
+    accesskey: StringConstructor;
+    autocapitalize: StringConstructor;
+    autofocus: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    class: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    contenteditable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    contextmenu: StringConstructor;
+    dir: StringConstructor;
+    draggable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    enterkeyhint: StringConstructor;
+    exportparts: StringConstructor;
+    hidden: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    id: StringConstructor;
+    inputmode: StringConstructor;
+    is: StringConstructor;
+    itemid: StringConstructor;
+    itemprop: StringConstructor;
+    itemref: StringConstructor;
+    itemscope: StringConstructor;
+    itemtype: StringConstructor;
+    lang: StringConstructor;
+    nonce: StringConstructor;
+    part: StringConstructor;
+    slot: StringConstructor;
+    spellcheck: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    style: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    tabindex: StringConstructor;
+    translate: StringConstructor;
+    /**
+     * @deprecated Use tagPriority
+     */
+    renderPriority: (StringConstructor | NumberConstructor)[];
+    /**
+     * Unhead prop to modify the priority of the tag.
+     */
+    tagPriority: {
+        type: PropType<UnheadStyle["tagPriority"]>;
+    };
+}>, () => null, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
+    as: StringConstructor;
+    crossorigin: PropType<CrossOrigin>;
+    disabled: BooleanConstructor;
+    fetchpriority: PropType<FetchPriority>;
+    href: StringConstructor;
+    hreflang: StringConstructor;
+    imagesizes: StringConstructor;
+    imagesrcset: StringConstructor;
+    integrity: StringConstructor;
+    media: StringConstructor;
+    prefetch: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    referrerpolicy: PropType<ReferrerPolicy>;
+    rel: PropType<LinkRelationship>;
+    sizes: StringConstructor;
+    title: StringConstructor;
+    type: StringConstructor;
+    /** @deprecated **/
+    methods: StringConstructor;
+    /** @deprecated **/
+    target: PropType<Target>;
+    /**
+     * @deprecated Use tagPosition
+     */
+    body: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    tagPosition: {
+        type: PropType<UnheadStyle["tagPosition"]>;
+    };
+    accesskey: StringConstructor;
+    autocapitalize: StringConstructor;
+    autofocus: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    class: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    contenteditable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    contextmenu: StringConstructor;
+    dir: StringConstructor;
+    draggable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    enterkeyhint: StringConstructor;
+    exportparts: StringConstructor;
+    hidden: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    id: StringConstructor;
+    inputmode: StringConstructor;
+    is: StringConstructor;
+    itemid: StringConstructor;
+    itemprop: StringConstructor;
+    itemref: StringConstructor;
+    itemscope: StringConstructor;
+    itemtype: StringConstructor;
+    lang: StringConstructor;
+    nonce: StringConstructor;
+    part: StringConstructor;
+    slot: StringConstructor;
+    spellcheck: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    style: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    tabindex: StringConstructor;
+    translate: StringConstructor;
+    /**
+     * @deprecated Use tagPriority
+     */
+    renderPriority: (StringConstructor | NumberConstructor)[];
+    /**
+     * Unhead prop to modify the priority of the tag.
+     */
+    tagPriority: {
+        type: PropType<UnheadStyle["tagPriority"]>;
+    };
+}>> & Readonly<{}>, {
     prefetch: boolean;
+    style: string | Record<string, any> | unknown[];
+    class: string | Record<string, any> | unknown[];
     body: boolean;
     autofocus: boolean;
     contenteditable: boolean;
@@ -28,47 +347,436 @@ export declare const Link: import("vue").DefineComponent<{
     spellcheck: boolean;
     disabled: boolean;
 }, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
-export declare const Base: import("vue").DefineComponent<{
-    readonly [x: string]: any;
-}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
-    [key: string]: any;
-}>[] | null | undefined, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{
-    readonly [x: string]: any;
-}> & Readonly<{}>, {
+export declare const Base: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
+    href: StringConstructor;
+    target: PropType<Target>;
+    accesskey: StringConstructor;
+    autocapitalize: StringConstructor;
+    autofocus: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    class: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    contenteditable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    contextmenu: StringConstructor;
+    dir: StringConstructor;
+    draggable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    enterkeyhint: StringConstructor;
+    exportparts: StringConstructor;
+    hidden: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    id: StringConstructor;
+    inputmode: StringConstructor;
+    is: StringConstructor;
+    itemid: StringConstructor;
+    itemprop: StringConstructor;
+    itemref: StringConstructor;
+    itemscope: StringConstructor;
+    itemtype: StringConstructor;
+    lang: StringConstructor;
+    nonce: StringConstructor;
+    part: StringConstructor;
+    slot: StringConstructor;
+    spellcheck: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    style: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    tabindex: StringConstructor;
+    title: StringConstructor;
+    translate: StringConstructor;
+    /**
+     * @deprecated Use tagPriority
+     */
+    renderPriority: (StringConstructor | NumberConstructor)[];
+    /**
+     * Unhead prop to modify the priority of the tag.
+     */
+    tagPriority: {
+        type: PropType<UnheadStyle["tagPriority"]>;
+    };
+}>, () => null, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
+    href: StringConstructor;
+    target: PropType<Target>;
+    accesskey: StringConstructor;
+    autocapitalize: StringConstructor;
+    autofocus: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    class: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    contenteditable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    contextmenu: StringConstructor;
+    dir: StringConstructor;
+    draggable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    enterkeyhint: StringConstructor;
+    exportparts: StringConstructor;
+    hidden: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    id: StringConstructor;
+    inputmode: StringConstructor;
+    is: StringConstructor;
+    itemid: StringConstructor;
+    itemprop: StringConstructor;
+    itemref: StringConstructor;
+    itemscope: StringConstructor;
+    itemtype: StringConstructor;
+    lang: StringConstructor;
+    nonce: StringConstructor;
+    part: StringConstructor;
+    slot: StringConstructor;
+    spellcheck: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    style: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    tabindex: StringConstructor;
+    title: StringConstructor;
+    translate: StringConstructor;
+    /**
+     * @deprecated Use tagPriority
+     */
+    renderPriority: (StringConstructor | NumberConstructor)[];
+    /**
+     * Unhead prop to modify the priority of the tag.
+     */
+    tagPriority: {
+        type: PropType<UnheadStyle["tagPriority"]>;
+    };
+}>> & Readonly<{}>, {
+    style: string | Record<string, any> | unknown[];
+    class: string | Record<string, any> | unknown[];
     autofocus: boolean;
     contenteditable: boolean;
     draggable: boolean;
     hidden: boolean;
     spellcheck: boolean;
 }, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
-export declare const Title: import("vue").DefineComponent<{
-    readonly [x: string]: any;
-}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
-    [key: string]: any;
-}>[] | null | undefined, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{
-    readonly [x: string]: any;
-}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
-export declare const Meta: import("vue").DefineComponent<{
-    readonly [x: string]: any;
-}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
-    [key: string]: any;
-}>[] | null | undefined, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{
-    readonly [x: string]: any;
-}> & Readonly<{}>, {
-    body: boolean;
+export declare const Title: import("vue").DefineComponent<{}, () => null, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export declare const Meta: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
+    charset: StringConstructor;
+    content: StringConstructor;
+    httpEquiv: PropType<HTTPEquiv>;
+    name: StringConstructor;
+    property: StringConstructor;
+    accesskey: StringConstructor;
+    autocapitalize: StringConstructor;
+    autofocus: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    class: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    contenteditable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    contextmenu: StringConstructor;
+    dir: StringConstructor;
+    draggable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    enterkeyhint: StringConstructor;
+    exportparts: StringConstructor;
+    hidden: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    id: StringConstructor;
+    inputmode: StringConstructor;
+    is: StringConstructor;
+    itemid: StringConstructor;
+    itemprop: StringConstructor;
+    itemref: StringConstructor;
+    itemscope: StringConstructor;
+    itemtype: StringConstructor;
+    lang: StringConstructor;
+    nonce: StringConstructor;
+    part: StringConstructor;
+    slot: StringConstructor;
+    spellcheck: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    style: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    tabindex: StringConstructor;
+    title: StringConstructor;
+    translate: StringConstructor;
+    /**
+     * @deprecated Use tagPriority
+     */
+    renderPriority: (StringConstructor | NumberConstructor)[];
+    /**
+     * Unhead prop to modify the priority of the tag.
+     */
+    tagPriority: {
+        type: PropType<UnheadStyle["tagPriority"]>;
+    };
+}>, () => null, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
+    charset: StringConstructor;
+    content: StringConstructor;
+    httpEquiv: PropType<HTTPEquiv>;
+    name: StringConstructor;
+    property: StringConstructor;
+    accesskey: StringConstructor;
+    autocapitalize: StringConstructor;
+    autofocus: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    class: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    contenteditable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    contextmenu: StringConstructor;
+    dir: StringConstructor;
+    draggable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    enterkeyhint: StringConstructor;
+    exportparts: StringConstructor;
+    hidden: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    id: StringConstructor;
+    inputmode: StringConstructor;
+    is: StringConstructor;
+    itemid: StringConstructor;
+    itemprop: StringConstructor;
+    itemref: StringConstructor;
+    itemscope: StringConstructor;
+    itemtype: StringConstructor;
+    lang: StringConstructor;
+    nonce: StringConstructor;
+    part: StringConstructor;
+    slot: StringConstructor;
+    spellcheck: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    style: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    tabindex: StringConstructor;
+    title: StringConstructor;
+    translate: StringConstructor;
+    /**
+     * @deprecated Use tagPriority
+     */
+    renderPriority: (StringConstructor | NumberConstructor)[];
+    /**
+     * Unhead prop to modify the priority of the tag.
+     */
+    tagPriority: {
+        type: PropType<UnheadStyle["tagPriority"]>;
+    };
+}>> & Readonly<{}>, {
+    style: string | Record<string, any> | unknown[];
+    class: string | Record<string, any> | unknown[];
     autofocus: boolean;
     contenteditable: boolean;
     draggable: boolean;
     hidden: boolean;
     spellcheck: boolean;
 }, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
-export declare const Style: import("vue").DefineComponent<{
-    readonly [x: string]: any;
-}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
-    [key: string]: any;
-}>[] | null | undefined, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{
-    readonly [x: string]: any;
-}> & Readonly<{}>, {
+export declare const Style: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
+    type: StringConstructor;
+    media: StringConstructor;
+    nonce: StringConstructor;
+    title: StringConstructor;
+    /** @deprecated **/
+    scoped: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    /**
+     * @deprecated Use tagPosition
+     */
+    body: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    tagPosition: {
+        type: PropType<UnheadStyle["tagPosition"]>;
+    };
+    accesskey: StringConstructor;
+    autocapitalize: StringConstructor;
+    autofocus: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    class: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    contenteditable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    contextmenu: StringConstructor;
+    dir: StringConstructor;
+    draggable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    enterkeyhint: StringConstructor;
+    exportparts: StringConstructor;
+    hidden: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    id: StringConstructor;
+    inputmode: StringConstructor;
+    is: StringConstructor;
+    itemid: StringConstructor;
+    itemprop: StringConstructor;
+    itemref: StringConstructor;
+    itemscope: StringConstructor;
+    itemtype: StringConstructor;
+    lang: StringConstructor;
+    part: StringConstructor;
+    slot: StringConstructor;
+    spellcheck: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    style: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    tabindex: StringConstructor;
+    translate: StringConstructor;
+    /**
+     * @deprecated Use tagPriority
+     */
+    renderPriority: (StringConstructor | NumberConstructor)[];
+    /**
+     * Unhead prop to modify the priority of the tag.
+     */
+    tagPriority: {
+        type: PropType<UnheadStyle["tagPriority"]>;
+    };
+}>, () => null, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
+    type: StringConstructor;
+    media: StringConstructor;
+    nonce: StringConstructor;
+    title: StringConstructor;
+    /** @deprecated **/
+    scoped: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    /**
+     * @deprecated Use tagPosition
+     */
+    body: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    tagPosition: {
+        type: PropType<UnheadStyle["tagPosition"]>;
+    };
+    accesskey: StringConstructor;
+    autocapitalize: StringConstructor;
+    autofocus: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    class: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    contenteditable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    contextmenu: StringConstructor;
+    dir: StringConstructor;
+    draggable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    enterkeyhint: StringConstructor;
+    exportparts: StringConstructor;
+    hidden: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    id: StringConstructor;
+    inputmode: StringConstructor;
+    is: StringConstructor;
+    itemid: StringConstructor;
+    itemprop: StringConstructor;
+    itemref: StringConstructor;
+    itemscope: StringConstructor;
+    itemtype: StringConstructor;
+    lang: StringConstructor;
+    part: StringConstructor;
+    slot: StringConstructor;
+    spellcheck: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    style: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    tabindex: StringConstructor;
+    translate: StringConstructor;
+    /**
+     * @deprecated Use tagPriority
+     */
+    renderPriority: (StringConstructor | NumberConstructor)[];
+    /**
+     * Unhead prop to modify the priority of the tag.
+     */
+    tagPriority: {
+        type: PropType<UnheadStyle["tagPriority"]>;
+    };
+}>> & Readonly<{}>, {
+    style: string | Record<string, any> | unknown[];
+    class: string | Record<string, any> | unknown[];
     body: boolean;
     autofocus: boolean;
     contenteditable: boolean;
@@ -80,26 +788,268 @@ export declare const Style: import("vue").DefineComponent<{
 export declare const Head: import("vue").DefineComponent<{}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
     [key: string]: any;
 }>[] | undefined, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
-export declare const Html: import("vue").DefineComponent<{
-    readonly [x: string]: any;
-}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
+export declare const Html: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
+    manifest: StringConstructor;
+    version: StringConstructor;
+    xmlns: StringConstructor;
+    accesskey: StringConstructor;
+    autocapitalize: StringConstructor;
+    autofocus: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    class: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    contenteditable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    contextmenu: StringConstructor;
+    dir: StringConstructor;
+    draggable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    enterkeyhint: StringConstructor;
+    exportparts: StringConstructor;
+    hidden: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    id: StringConstructor;
+    inputmode: StringConstructor;
+    is: StringConstructor;
+    itemid: StringConstructor;
+    itemprop: StringConstructor;
+    itemref: StringConstructor;
+    itemscope: StringConstructor;
+    itemtype: StringConstructor;
+    lang: StringConstructor;
+    nonce: StringConstructor;
+    part: StringConstructor;
+    slot: StringConstructor;
+    spellcheck: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    style: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    tabindex: StringConstructor;
+    title: StringConstructor;
+    translate: StringConstructor;
+    /**
+     * @deprecated Use tagPriority
+     */
+    renderPriority: (StringConstructor | NumberConstructor)[];
+    /**
+     * Unhead prop to modify the priority of the tag.
+     */
+    tagPriority: {
+        type: PropType<UnheadStyle["tagPriority"]>;
+    };
+}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
     [key: string]: any;
-}>[] | null | undefined, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{
-    readonly [x: string]: any;
-}> & Readonly<{}>, {
+}>[] | undefined, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
+    manifest: StringConstructor;
+    version: StringConstructor;
+    xmlns: StringConstructor;
+    accesskey: StringConstructor;
+    autocapitalize: StringConstructor;
+    autofocus: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    class: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    contenteditable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    contextmenu: StringConstructor;
+    dir: StringConstructor;
+    draggable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    enterkeyhint: StringConstructor;
+    exportparts: StringConstructor;
+    hidden: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    id: StringConstructor;
+    inputmode: StringConstructor;
+    is: StringConstructor;
+    itemid: StringConstructor;
+    itemprop: StringConstructor;
+    itemref: StringConstructor;
+    itemscope: StringConstructor;
+    itemtype: StringConstructor;
+    lang: StringConstructor;
+    nonce: StringConstructor;
+    part: StringConstructor;
+    slot: StringConstructor;
+    spellcheck: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    style: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    tabindex: StringConstructor;
+    title: StringConstructor;
+    translate: StringConstructor;
+    /**
+     * @deprecated Use tagPriority
+     */
+    renderPriority: (StringConstructor | NumberConstructor)[];
+    /**
+     * Unhead prop to modify the priority of the tag.
+     */
+    tagPriority: {
+        type: PropType<UnheadStyle["tagPriority"]>;
+    };
+}>> & Readonly<{}>, {
+    style: string | Record<string, any> | unknown[];
+    class: string | Record<string, any> | unknown[];
     autofocus: boolean;
     contenteditable: boolean;
     draggable: boolean;
     hidden: boolean;
     spellcheck: boolean;
 }, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
-export declare const Body: import("vue").DefineComponent<{
-    readonly [x: string]: any;
-}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
+export declare const Body: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
+    accesskey: StringConstructor;
+    autocapitalize: StringConstructor;
+    autofocus: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    class: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    contenteditable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    contextmenu: StringConstructor;
+    dir: StringConstructor;
+    draggable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    enterkeyhint: StringConstructor;
+    exportparts: StringConstructor;
+    hidden: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    id: StringConstructor;
+    inputmode: StringConstructor;
+    is: StringConstructor;
+    itemid: StringConstructor;
+    itemprop: StringConstructor;
+    itemref: StringConstructor;
+    itemscope: StringConstructor;
+    itemtype: StringConstructor;
+    lang: StringConstructor;
+    nonce: StringConstructor;
+    part: StringConstructor;
+    slot: StringConstructor;
+    spellcheck: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    style: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    tabindex: StringConstructor;
+    title: StringConstructor;
+    translate: StringConstructor;
+    /**
+     * @deprecated Use tagPriority
+     */
+    renderPriority: (StringConstructor | NumberConstructor)[];
+    /**
+     * Unhead prop to modify the priority of the tag.
+     */
+    tagPriority: {
+        type: PropType<UnheadStyle["tagPriority"]>;
+    };
+}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
     [key: string]: any;
-}>[] | null | undefined, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{
-    readonly [x: string]: any;
-}> & Readonly<{}>, {
+}>[] | undefined, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
+    accesskey: StringConstructor;
+    autocapitalize: StringConstructor;
+    autofocus: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    class: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    contenteditable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    contextmenu: StringConstructor;
+    dir: StringConstructor;
+    draggable: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    enterkeyhint: StringConstructor;
+    exportparts: StringConstructor;
+    hidden: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    id: StringConstructor;
+    inputmode: StringConstructor;
+    is: StringConstructor;
+    itemid: StringConstructor;
+    itemprop: StringConstructor;
+    itemref: StringConstructor;
+    itemscope: StringConstructor;
+    itemtype: StringConstructor;
+    lang: StringConstructor;
+    nonce: StringConstructor;
+    part: StringConstructor;
+    slot: StringConstructor;
+    spellcheck: {
+        type: BooleanConstructor;
+        default: undefined;
+    };
+    style: {
+        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
+        default: undefined;
+    };
+    tabindex: StringConstructor;
+    title: StringConstructor;
+    translate: StringConstructor;
+    /**
+     * @deprecated Use tagPriority
+     */
+    renderPriority: (StringConstructor | NumberConstructor)[];
+    /**
+     * Unhead prop to modify the priority of the tag.
+     */
+    tagPriority: {
+        type: PropType<UnheadStyle["tagPriority"]>;
+    };
+}>> & Readonly<{}>, {
+    style: string | Record<string, any> | unknown[];
+    class: string | Record<string, any> | unknown[];
     autofocus: boolean;
     contenteditable: boolean;
     draggable: boolean;
diff --git a/node_modules/nuxt/dist/head/runtime/components.js b/node_modules/nuxt/dist/head/runtime/components.js
index db5fd53..77ac5e5 100644
--- a/node_modules/nuxt/dist/head/runtime/components.js
+++ b/node_modules/nuxt/dist/head/runtime/components.js
@@ -1,19 +1,39 @@
-import { defineComponent } from "vue";
-import { useHead } from "@unhead/vue";
-const removeUndefinedProps = (props) => {
-  const filteredProps = /* @__PURE__ */ Object.create(null);
-  for (const key in props) {
-    const value = props[key];
-    if (value !== void 0) {
-      filteredProps[key] = value;
-    }
-  }
-  return filteredProps;
+import { defineComponent, inject, onUnmounted, provide, reactive } from "vue";
+import { useHead } from "#app/composables/head";
+const HeadComponentCtxSymbol = Symbol("head-component");
+const TagPositionProps = {
+  /**
+   * @deprecated Use tagPosition
+   */
+  body: { type: Boolean, default: void 0 },
+  tagPosition: { type: String }
 };
-const setupForUseMeta = (metaFactory, renderChild) => (props, ctx) => {
-  useHead(() => metaFactory({ ...removeUndefinedProps(props), ...ctx.attrs }, ctx));
-  return () => renderChild ? ctx.slots.default?.() : null;
+const normalizeProps = (_props) => {
+  const props = Object.fromEntries(
+    Object.entries(_props).filter(([_, value]) => value !== void 0)
+  );
+  if (typeof props.body !== "undefined") {
+    props.tagPosition = props.body ? "bodyClose" : "head";
+  }
+  if (typeof props.renderPriority !== "undefined") {
+    props.tagPriority = props.renderPriority;
+  }
+  return props;
 };
+function useHeadComponentCtx() {
+  return inject(HeadComponentCtxSymbol, createHeadComponentCtx, true);
+}
+function createHeadComponentCtx() {
+  const prev = inject(HeadComponentCtxSymbol, null);
+  if (prev) {
+    return prev;
+  }
+  const input = reactive({});
+  const entry = useHead(input);
+  const ctx = { input, entry };
+  provide(HeadComponentCtxSymbol, ctx);
+  return ctx;
+}
 const globalProps = {
   accesskey: String,
   autocapitalize: String,
@@ -21,7 +41,7 @@ const globalProps = {
     type: Boolean,
     default: void 0
   },
-  class: [String, Object, Array],
+  class: { type: [String, Object, Array], default: void 0 },
   contenteditable: {
     type: Boolean,
     default: void 0
@@ -54,37 +74,50 @@ const globalProps = {
     type: Boolean,
     default: void 0
   },
-  style: String,
+  style: { type: [String, Object, Array], default: void 0 },
   tabindex: String,
   title: String,
-  translate: String
+  translate: String,
+  /**
+   * @deprecated Use tagPriority
+   */
+  renderPriority: [String, Number],
+  /**
+   * Unhead prop to modify the priority of the tag.
+   */
+  tagPriority: { type: [String, Number] }
 };
 export const NoScript = defineComponent({
   name: "NoScript",
   inheritAttrs: false,
   props: {
     ...globalProps,
-    title: String,
-    body: Boolean,
-    renderPriority: [String, Number]
+    ...TagPositionProps,
+    title: String
   },
-  setup: setupForUseMeta((props, { slots }) => {
-    const noscript = { ...props };
-    const slotVnodes = slots.default?.();
-    const textContent = slotVnodes ? slotVnodes.filter(({ children }) => children).map(({ children }) => children).join("") : "";
-    if (textContent) {
-      noscript.children = textContent;
-    }
-    return {
-      noscript: [noscript]
+  setup(props, { slots }) {
+    const { input } = useHeadComponentCtx();
+    input.noscript ||= [];
+    const idx = input.noscript.push({}) - 1;
+    onUnmounted(() => input.noscript[idx] = null);
+    return () => {
+      const noscript = normalizeProps(props);
+      const slotVnodes = slots.default?.();
+      const textContent = slotVnodes ? slotVnodes.filter(({ children }) => children).map(({ children }) => children).join("") : "";
+      if (textContent) {
+        noscript.innerHTML = textContent;
+      }
+      input.noscript[idx] = noscript;
+      return null;
     };
-  })
+  }
 });
 export const Link = defineComponent({
   name: "Link",
   inheritAttrs: false,
   props: {
     ...globalProps,
+    ...TagPositionProps,
     as: String,
     crossorigin: String,
     disabled: Boolean,
@@ -107,13 +140,18 @@ export const Link = defineComponent({
     /** @deprecated **/
     methods: String,
     /** @deprecated **/
-    target: String,
-    body: Boolean,
-    renderPriority: [String, Number]
+    target: String
   },
-  setup: setupForUseMeta((link) => ({
-    link: [link]
-  }))
+  setup(props) {
+    const { input } = useHeadComponentCtx();
+    input.link ||= [];
+    const idx = input.link.push({}) - 1;
+    onUnmounted(() => input.link[idx] = null);
+    return () => {
+      input.link[idx] = normalizeProps(props);
+      return null;
+    };
+  }
 });
 export const Base = defineComponent({
   name: "Base",
@@ -123,27 +161,32 @@ export const Base = defineComponent({
     href: String,
     target: String
   },
-  setup: setupForUseMeta((base) => ({
-    base
-  }))
+  setup(props) {
+    const { input } = useHeadComponentCtx();
+    onUnmounted(() => input.base = null);
+    return () => {
+      input.base = normalizeProps(props);
+      return null;
+    };
+  }
 });
 export const Title = defineComponent({
   name: "Title",
   inheritAttrs: false,
-  setup: setupForUseMeta((_, { slots }) => {
-    if (import.meta.dev) {
+  setup(_, { slots }) {
+    const { input } = useHeadComponentCtx();
+    onUnmounted(() => input.title = null);
+    return () => {
       const defaultSlot = slots.default?.();
-      if (defaultSlot && (defaultSlot.length > 1 || defaultSlot[0] && typeof defaultSlot[0].children !== "string")) {
-        console.error("<Title> can take only one string in its default slot.");
+      input.title = defaultSlot?.[0]?.children ? String(defaultSlot?.[0]?.children) : void 0;
+      if (import.meta.dev) {
+        if (defaultSlot && (defaultSlot.length > 1 || defaultSlot[0] && typeof defaultSlot[0].children !== "string")) {
+          console.error("<Title> can take only one string in its default slot.");
+        }
       }
-      return {
-        title: defaultSlot?.[0]?.children || null
-      };
-    }
-    return {
-      title: slots.default?.()?.[0]?.children || null
+      return null;
     };
-  })
+  }
 });
 export const Meta = defineComponent({
   name: "Meta",
@@ -154,25 +197,29 @@ export const Meta = defineComponent({
     content: String,
     httpEquiv: String,
     name: String,
-    body: Boolean,
-    renderPriority: [String, Number]
+    property: String
   },
-  setup: setupForUseMeta((props) => {
-    const meta = { ...props };
-    if (meta.httpEquiv) {
-      meta["http-equiv"] = meta.httpEquiv;
-      delete meta.httpEquiv;
-    }
-    return {
-      meta: [meta]
+  setup(props) {
+    const { input } = useHeadComponentCtx();
+    input.meta ||= [];
+    const idx = input.meta.push({}) - 1;
+    onUnmounted(() => input.meta[idx] = null);
+    return () => {
+      const meta = { "http-equiv": props.httpEquiv, ...normalizeProps(props) };
+      if ("httpEquiv" in meta) {
+        delete meta.httpEquiv;
+      }
+      input.meta[idx] = meta;
+      return null;
     };
-  })
+  }
 });
 export const Style = defineComponent({
   name: "Style",
   inheritAttrs: false,
   props: {
     ...globalProps,
+    ...TagPositionProps,
     type: String,
     media: String,
     nonce: String,
@@ -181,28 +228,34 @@ export const Style = defineComponent({
     scoped: {
       type: Boolean,
       default: void 0
-    },
-    body: Boolean,
-    renderPriority: [String, Number]
+    }
   },
-  setup: setupForUseMeta((props, { slots }) => {
-    const style = { ...props };
-    const textContent = slots.default?.()?.[0]?.children;
-    if (textContent) {
-      if (import.meta.dev && typeof textContent !== "string") {
-        console.error("<Style> can only take a string in its default slot.");
+  setup(props, { slots }) {
+    const { input } = useHeadComponentCtx();
+    input.style ||= [];
+    const idx = input.style.push({}) - 1;
+    onUnmounted(() => input.style[idx] = null);
+    return () => {
+      const style = normalizeProps(props);
+      const textContent = slots.default?.()?.[0]?.children;
+      if (textContent) {
+        if (import.meta.dev && typeof textContent !== "string") {
+          console.error("<Style> can only take a string in its default slot.");
+        }
+        input.style[idx] = style;
+        style.textContent = textContent;
       }
-      style.children = textContent;
-    }
-    return {
-      style: [style]
+      return null;
     };
-  })
+  }
 });
 export const Head = defineComponent({
   name: "Head",
   inheritAttrs: false,
-  setup: (_props, ctx) => () => ctx.slots.default?.()
+  setup: (_props, ctx) => {
+    createHeadComponentCtx();
+    return () => ctx.slots.default?.();
+  }
 });
 export const Html = defineComponent({
   name: "Html",
@@ -211,17 +264,27 @@ export const Html = defineComponent({
     ...globalProps,
     manifest: String,
     version: String,
-    xmlns: String,
-    renderPriority: [String, Number]
+    xmlns: String
   },
-  setup: setupForUseMeta((htmlAttrs) => ({ htmlAttrs }), true)
+  setup(_props, ctx) {
+    const { input } = useHeadComponentCtx();
+    onUnmounted(() => input.htmlAttrs = null);
+    return () => {
+      input.htmlAttrs = { ..._props, ...ctx.attrs };
+      return ctx.slots.default?.();
+    };
+  }
 });
 export const Body = defineComponent({
   name: "Body",
   inheritAttrs: false,
-  props: {
-    ...globalProps,
-    renderPriority: [String, Number]
-  },
-  setup: setupForUseMeta((bodyAttrs) => ({ bodyAttrs }), true)
+  props: globalProps,
+  setup(_props, ctx) {
+    const { input } = useHeadComponentCtx();
+    onUnmounted(() => input.bodyAttrs = null);
+    return () => {
+      input.bodyAttrs = { ..._props, ...ctx.attrs };
+      return ctx.slots.default?.();
+    };
+  }
 });
diff --git a/node_modules/nuxt/dist/head/runtime/composables/v3.d.ts b/node_modules/nuxt/dist/head/runtime/composables/v3.d.ts
new file mode 100644
index 0000000..5a078e5
--- /dev/null
+++ b/node_modules/nuxt/dist/head/runtime/composables/v3.d.ts
@@ -0,0 +1,18 @@
+import type { ActiveHeadEntry, UseHeadInput, UseHeadOptions, UseHeadSafeInput, UseSeoMetaInput, VueHeadClient } from '@unhead/vue';
+import type { NuxtApp } from '#app/nuxt';
+/**
+ * Injects the head client from the Nuxt context or Vue inject.
+ *
+ * In Nuxt v3 this function will not throw an error if the context is missing.
+ */
+export declare function injectHead(nuxtApp?: NuxtApp): VueHeadClient;
+interface NuxtUseHeadOptions extends UseHeadOptions {
+    nuxt?: NuxtApp;
+}
+export declare function useHead(input: UseHeadInput, options?: NuxtUseHeadOptions): ActiveHeadEntry<UseHeadInput> | void;
+export declare function useHeadSafe(input: UseHeadSafeInput, options?: NuxtUseHeadOptions): ActiveHeadEntry<UseHeadSafeInput> | void;
+export declare function useSeoMeta(input: UseSeoMetaInput, options?: NuxtUseHeadOptions): ActiveHeadEntry<UseSeoMetaInput> | void;
+export declare function useServerHead(input: UseHeadInput, options?: NuxtUseHeadOptions): ActiveHeadEntry<UseHeadInput> | void;
+export declare function useServerHeadSafe(input: UseHeadSafeInput, options?: NuxtUseHeadOptions): ActiveHeadEntry<UseHeadSafeInput> | void;
+export declare function useServerSeoMeta(input: UseSeoMetaInput, options?: NuxtUseHeadOptions): ActiveHeadEntry<UseSeoMetaInput> | void;
+export {};
diff --git a/node_modules/nuxt/dist/head/runtime/composables/v3.js b/node_modules/nuxt/dist/head/runtime/composables/v3.js
new file mode 100644
index 0000000..301afda
--- /dev/null
+++ b/node_modules/nuxt/dist/head/runtime/composables/v3.js
@@ -0,0 +1,55 @@
+import { hasInjectionContext, inject } from "vue";
+import {
+  useHead as headCore,
+  useHeadSafe as headSafe,
+  headSymbol,
+  useSeoMeta as seoMeta,
+  useServerHead as serverHead,
+  useServerHeadSafe as serverHeadSafe,
+  useServerSeoMeta as serverSeoMeta
+} from "@unhead/vue";
+import { tryUseNuxtApp } from "#app/nuxt";
+export function injectHead(nuxtApp) {
+  const nuxt = nuxtApp || tryUseNuxtApp();
+  return nuxt?.ssrContext?.head || nuxt?.runWithContext(() => {
+    if (hasInjectionContext()) {
+      return inject(headSymbol);
+    }
+  });
+}
+export function useHead(input, options = {}) {
+  const head = injectHead(options.nuxt);
+  if (head) {
+    return headCore(input, { head, ...options });
+  }
+}
+export function useHeadSafe(input, options = {}) {
+  const head = injectHead(options.nuxt);
+  if (head) {
+    return headSafe(input, { head, ...options });
+  }
+}
+export function useSeoMeta(input, options = {}) {
+  const head = injectHead(options.nuxt);
+  if (head) {
+    return seoMeta(input, { head, ...options });
+  }
+}
+export function useServerHead(input, options = {}) {
+  const head = injectHead(options.nuxt);
+  if (head) {
+    return serverHead(input, { head, ...options });
+  }
+}
+export function useServerHeadSafe(input, options = {}) {
+  const head = injectHead(options.nuxt);
+  if (head) {
+    return serverHeadSafe(input, { head, ...options });
+  }
+}
+export function useServerSeoMeta(input, options = {}) {
+  const head = injectHead(options.nuxt);
+  if (head) {
+    return serverSeoMeta(input, { head, ...options });
+  }
+}
diff --git a/node_modules/nuxt/dist/head/runtime/composables/v4.d.ts b/node_modules/nuxt/dist/head/runtime/composables/v4.d.ts
new file mode 100644
index 0000000..30bfd0f
--- /dev/null
+++ b/node_modules/nuxt/dist/head/runtime/composables/v4.d.ts
@@ -0,0 +1,25 @@
+import type { ActiveHeadEntry, UseHeadInput, UseHeadOptions, UseHeadSafeInput, UseSeoMetaInput, VueHeadClient } from '@unhead/vue/types';
+import type { NuxtApp } from '#app/nuxt';
+/**
+ * Injects the head client from the Nuxt context or Vue inject.
+ */
+export declare function injectHead(nuxtApp?: NuxtApp): VueHeadClient;
+interface NuxtUseHeadOptions extends UseHeadOptions {
+    nuxt?: NuxtApp;
+}
+export declare function useHead(input: UseHeadInput, options?: NuxtUseHeadOptions): ActiveHeadEntry<UseHeadInput>;
+export declare function useHeadSafe(input: UseHeadSafeInput, options?: NuxtUseHeadOptions): ActiveHeadEntry<UseHeadSafeInput>;
+export declare function useSeoMeta(input: UseSeoMetaInput, options?: NuxtUseHeadOptions): ActiveHeadEntry<UseSeoMetaInput>;
+/**
+ * @deprecated Use `useHead` instead and wrap with `if (import.meta.server)`
+ */
+export declare function useServerHead(input: UseHeadInput, options?: NuxtUseHeadOptions): ActiveHeadEntry<UseHeadInput>;
+/**
+ * @deprecated Use `useHeadSafe` instead and wrap with `if (import.meta.server)`
+ */
+export declare function useServerHeadSafe(input: UseHeadSafeInput, options?: NuxtUseHeadOptions): ActiveHeadEntry<UseHeadSafeInput>;
+/**
+ * @deprecated Use `useSeoMeta` instead and wrap with `if (import.meta.server)`
+ */
+export declare function useServerSeoMeta(input: UseSeoMetaInput, options?: NuxtUseHeadOptions): ActiveHeadEntry<UseSeoMetaInput>;
+export {};
diff --git a/node_modules/nuxt/dist/head/runtime/composables/v4.js b/node_modules/nuxt/dist/head/runtime/composables/v4.js
new file mode 100644
index 0000000..23ebaf3
--- /dev/null
+++ b/node_modules/nuxt/dist/head/runtime/composables/v4.js
@@ -0,0 +1,47 @@
+import { hasInjectionContext, inject } from "vue";
+import {
+  useHead as headCore,
+  useHeadSafe as headSafe,
+  headSymbol,
+  useSeoMeta as seoMeta,
+  useServerHead as serverHead,
+  useServerHeadSafe as serverHeadSafe,
+  useServerSeoMeta as serverSeoMeta
+} from "@unhead/vue";
+import { useNuxtApp } from "#app/nuxt";
+export function injectHead(nuxtApp) {
+  const nuxt = nuxtApp || useNuxtApp();
+  return nuxt.ssrContext?.head || nuxt.runWithContext(() => {
+    if (hasInjectionContext()) {
+      const head = inject(headSymbol);
+      if (!head) {
+        throw new Error("[nuxt] [unhead] Missing Unhead instance.");
+      }
+      return head;
+    }
+  });
+}
+export function useHead(input, options = {}) {
+  const head = injectHead(options.nuxt);
+  return headCore(input, { head, ...options });
+}
+export function useHeadSafe(input, options = {}) {
+  const head = injectHead(options.nuxt);
+  return headSafe(input, { head, ...options });
+}
+export function useSeoMeta(input, options = {}) {
+  const head = injectHead(options.nuxt);
+  return seoMeta(input, { head, ...options });
+}
+export function useServerHead(input, options = {}) {
+  const head = injectHead(options.nuxt);
+  return serverHead(input, { head, ...options });
+}
+export function useServerHeadSafe(input, options = {}) {
+  const head = injectHead(options.nuxt);
+  return serverHeadSafe(input, { head, ...options });
+}
+export function useServerSeoMeta(input, options = {}) {
+  const head = injectHead(options.nuxt);
+  return serverSeoMeta(input, { head, ...options });
+}
diff --git a/node_modules/nuxt/dist/head/runtime/plugins/unhead.js b/node_modules/nuxt/dist/head/runtime/plugins/unhead.js
index 09a0f64..0bbb32b 100644
--- a/node_modules/nuxt/dist/head/runtime/plugins/unhead.js
+++ b/node_modules/nuxt/dist/head/runtime/plugins/unhead.js
@@ -1,18 +1,11 @@
-import { createHead as createClientHead, setHeadInjectionHandler } from "@unhead/vue";
-import { renderDOMHead } from "@unhead/dom";
-import { defineNuxtPlugin, useNuxtApp } from "#app/nuxt";
-import unheadPlugins from "#build/unhead-plugins.mjs";
+import { createHead as createClientHead, renderDOMHead } from "@unhead/vue/client";
+import { defineNuxtPlugin } from "#app/nuxt";
+import unheadOptions from "#build/unhead-options.mjs";
 export default defineNuxtPlugin({
   name: "nuxt:head",
   enforce: "pre",
   setup(nuxtApp) {
-    const head = import.meta.server ? nuxtApp.ssrContext.head : createClientHead({
-      plugins: unheadPlugins
-    });
-    setHeadInjectionHandler(
-      // need a fresh instance of the nuxt app to avoid parallel requests interfering with each other
-      () => useNuxtApp().vueApp._context.provides.usehead
-    );
+    const head = import.meta.server ? nuxtApp.ssrContext.head : createClientHead(unheadOptions);
     nuxtApp.vueApp.use(head);
     if (import.meta.client) {
       let pauseDOMUpdates = true;
diff --git a/node_modules/nuxt/dist/head/runtime/plugins/vueuse-head-polyfill.d.ts b/node_modules/nuxt/dist/head/runtime/plugins/vueuse-head-polyfill.d.ts
index 5298df7..f8d5441 100644
--- a/node_modules/nuxt/dist/head/runtime/plugins/vueuse-head-polyfill.d.ts
+++ b/node_modules/nuxt/dist/head/runtime/plugins/vueuse-head-polyfill.d.ts
@@ -1,2 +1,33 @@
+import type { UseHeadInput, UseHeadOptions, VueHeadClient } from '@unhead/vue';
+export type VueHeadClientPollyFill = VueHeadClient & {
+    /**
+     * @deprecated use `resolveTags`
+     */
+    headTags: VueHeadClient['resolveTags'];
+    /**
+     * @deprecated use `push`
+     */
+    addEntry: VueHeadClient['push'];
+    /**
+     * @deprecated use `push`
+     */
+    addHeadObjs: VueHeadClient['push'];
+    /**
+     * @deprecated use `useHead`
+     */
+    addReactiveEntry: (input: UseHeadInput, options?: UseHeadOptions) => (() => void);
+    /**
+     * @deprecated Use useHead API.
+     */
+    removeHeadObjs: () => void;
+    /**
+     * @deprecated Call hook `entries:resolve` or update an entry
+     */
+    updateDOM: () => void;
+    /**
+     * @deprecated Access unhead properties directly.
+     */
+    unhead: VueHeadClient;
+};
 declare const _default: any;
 export default _default;
diff --git a/node_modules/nuxt/dist/head/runtime/plugins/vueuse-head-polyfill.js b/node_modules/nuxt/dist/head/runtime/plugins/vueuse-head-polyfill.js
index 9a0ee11..48cd509 100644
--- a/node_modules/nuxt/dist/head/runtime/plugins/vueuse-head-polyfill.js
+++ b/node_modules/nuxt/dist/head/runtime/plugins/vueuse-head-polyfill.js
@@ -1,5 +1,26 @@
-import { polyfillAsVueUseHead } from "@unhead/vue/polyfill";
 import { defineNuxtPlugin } from "#app/nuxt";
+import { useHead } from "#app/composables/head";
+function polyfillAsVueUseHead(head) {
+  const polyfilled = head;
+  polyfilled.headTags = head.resolveTags;
+  polyfilled.addEntry = head.push;
+  polyfilled.addHeadObjs = head.push;
+  polyfilled.addReactiveEntry = (input, options) => {
+    const api = useHead(input, options);
+    if (api !== void 0) {
+      return api.dispose;
+    }
+    return () => {
+    };
+  };
+  polyfilled.removeHeadObjs = () => {
+  };
+  polyfilled.updateDOM = () => {
+    head.hooks.callHook("entries:updated", head);
+  };
+  polyfilled.unhead = head;
+  return polyfilled;
+}
 export default defineNuxtPlugin({
   name: "nuxt:vueuse-head-polyfill",
   setup(nuxtApp) {
diff --git a/node_modules/nuxt/dist/index.mjs b/node_modules/nuxt/dist/index.mjs
index 4ed998c..c115ba0 100644
--- a/node_modules/nuxt/dist/index.mjs
+++ b/node_modules/nuxt/dist/index.mjs
@@ -1,53 +1,129 @@
-import fs, { promises, existsSync, readdirSync, writeFileSync, statSync, readFileSync, mkdirSync } from 'node:fs';
+import fs, { promises, existsSync, readdirSync, statSync, readFileSync, mkdirSync, writeFileSync } from 'node:fs';
 import { mkdir, readFile, readdir, writeFile, rm, stat, unlink, open } from 'node:fs/promises';
+import { randomUUID } from 'node:crypto';
+import { AsyncLocalStorage } from 'node:async_hooks';
 import { dirname, resolve, normalize, basename, extname, relative, isAbsolute, join } from 'pathe';
 import { createHooks, createDebugger } from 'hookable';
 import ignore from 'ignore';
-import { tryUseNuxt, useNuxt, resolveFiles, resolvePath as resolvePath$1, logger, defineNuxtModule, addPlugin, addTemplate, addTypeTemplate, addComponent, updateTemplates, useNitro, addBuildPlugin, findPath, addImportsSources, tryResolveModule, isIgnored, resolveAlias, addPluginTemplate, addVitePlugin, normalizeModuleTranspilePath, resolveNuxtModule, resolveIgnorePatterns, createResolver, importModule, nuxtCtx, addWebpackPlugin, addServerPlugin, installModule, addRouteMiddleware, loadNuxtConfig, normalizeTemplate, compileTemplate, normalizePlugin, templateUtils } from '@nuxt/kit';
+import { useLogger, tryUseNuxt, useNuxt, directoryToURL, resolveFiles, resolvePath, defineNuxtModule, findPath, addPlugin, addTemplate, addTypeTemplate, addComponent, useNitro, addBuildPlugin, isIgnored, resolveAlias, addPluginTemplate, addImportsSources, addVitePlugin, createIsIgnored, updateTemplates, tryResolveModule, normalizeModuleTranspilePath, resolveNuxtModule, resolveIgnorePatterns, logger as logger$1, createResolver, importModule, tryImportModule, runWithNuxtContext, nuxtCtx, loadNuxtConfig, addWebpackPlugin, addServerPlugin, installModule, addServerTemplate, addServerHandler, addRouteMiddleware, normalizeTemplate, compileTemplate, normalizePlugin, templateUtils } from '@nuxt/kit';
 import { resolvePackageJSON, readPackageJSON } from 'pkg-types';
-import { hash, objectHash, murmurHash } from 'ohash';
+import { hash, serialize } from 'ohash';
 import consola, { consola as consola$1 } from 'consola';
-import { colorize } from 'consola/utils';
-import { updateConfig } from 'c12/update';
+import onChange from 'on-change';
+import { colors } from 'consola/utils';
 import { resolveCompatibilityDatesFromEnv, formatDate } from 'compatx';
 import escapeRE from 'escape-string-regexp';
-import { withTrailingSlash, parseURL, parseQuery, withLeadingSlash, joinURL, encodePath, withoutLeadingSlash } from 'ufo';
+import { withTrailingSlash, parseURL, parseQuery, joinURL, withLeadingSlash, encodePath, withoutLeadingSlash } from 'ufo';
 import { ImpoundPlugin } from 'impound';
 import defu$1, { defu } from 'defu';
-import { satisfies, gt } from 'semver';
-import { isWindows, hasTTY, isCI } from 'std-env';
+import { satisfies, coerce, gt } from 'semver';
+import { isCI, provider, isWindows, hasTTY } from 'std-env';
 import { genArrayFromRaw, genSafeVariableName, genImport, genDynamicImport, genObjectFromRawEntries, genString, genExport } from 'knitwork';
+import { resolveModulePath } from 'exsolve';
+import { addDependency } from 'nypm';
+import { reverseResolveAlias, filename } from 'pathe/utils';
 import { createRoutesContext } from 'unplugin-vue-router';
 import { resolveOptions } from 'unplugin-vue-router/options';
 import { toRouteMatcher, createRouter, exportMatcher } from 'radix3';
 import { fileURLToPath, pathToFileURL } from 'node:url';
-import { resolvePath, findStaticImports, findExports, parseStaticImport, parseNodeModulePath, lookupNodeModuleSubpath } from 'mlly';
 import { runInNewContext } from 'node:vm';
-import { filename } from 'pathe/utils';
-import { transform } from 'esbuild';
-import { parse } from 'acorn';
-import { walk } from 'estree-walker';
-import { splitByCase, kebabCase, pascalCase, camelCase } from 'scule';
+import { klona } from 'klona';
+import { parseAndWalk, ScopeTracker, walk, isBindingIdentifier, getUndeclaredIdentifiersInFunction } from 'oxc-walker';
+import { splitByCase, kebabCase, pascalCase, camelCase, upperFirst } from 'scule';
 import { createUnplugin } from 'unplugin';
+import { findStaticImports, findExports, parseStaticImport, parseNodeModulePath, lookupNodeModuleSubpath } from 'mlly';
 import MagicString from 'magic-string';
 import { stripLiteral } from 'strip-literal';
-import { globby } from 'globby';
-import { parse as parse$1, walk as walk$1, ELEMENT_NODE } from 'ultrahtml';
-import { createUnimport, defineUnimportPreset, toExports, scanDirExports } from 'unimport';
+import { unheadVueComposablesImports } from '@unhead/vue';
+import { defineUnimportPreset, createUnimport, toExports, scanDirExports } from 'unimport';
+import { glob } from 'tinyglobby';
+import { parse, walk as walk$1, ELEMENT_NODE } from 'ultrahtml';
 import { parseQuery as parseQuery$1 } from 'vue-router';
 import { createTransformer } from 'unctx/transform';
 import { cpus } from 'node:os';
 import { createNitro, scanHandlers, writeTypes, copyPublicAssets, prepare, build as build$1, prerender, createDevServer } from 'nitropack';
-import { dynamicEventHandler } from 'h3';
+import { dynamicEventHandler, defineEventHandler } from 'h3';
 import { watch as watch$1 } from 'chokidar';
 import { debounce } from 'perfect-debounce';
 import { resolveSchema, generateTypes } from 'untyped';
 import untypedPlugin from 'untyped/babel-plugin';
 import { createJiti } from 'jiti';
+import { transform } from 'oxc-transform';
+import { minify } from 'oxc-minify';
 import { resolve as resolve$1 } from 'node:path';
-import { glob } from 'tinyglobby';
 import { parseTar, createTar } from 'nanotar';
 
+function toArray(value) {
+  return Array.isArray(value) ? value : [value];
+}
+async function isDirectory$1(path) {
+  return (await promises.lstat(path)).isDirectory();
+}
+const logger = useLogger("nuxt");
+function resolveToAlias(path, nuxt = tryUseNuxt()) {
+  return reverseResolveAlias(path, { ...nuxt?.options.alias || {}, ...strippedAtAliases }).pop() || path;
+}
+const strippedAtAliases = {
+  "@": "",
+  "@@": ""
+};
+
+const isStackblitz = provider === "stackblitz";
+async function promptToInstall(name, installCommand, options) {
+  for (const parent of options.searchPaths || []) {
+    if (await resolvePackageJSON(name, { parent }).catch(() => null)) {
+      return true;
+    }
+  }
+  logger.info(`Package ${name} is missing`);
+  if (isCI) {
+    return false;
+  }
+  if (options.prompt === true || options.prompt !== false && !isStackblitz) {
+    const confirm = await logger.prompt(`Do you want to install ${name} package?`, {
+      type: "confirm",
+      name: "confirm",
+      initial: true
+    });
+    if (!confirm) {
+      return false;
+    }
+  }
+  logger.info(`Installing ${name}...`);
+  try {
+    await installCommand();
+    logger.success(`Installed ${name}`);
+    return true;
+  } catch (err) {
+    logger.error(err);
+    return false;
+  }
+}
+const installPrompts = /* @__PURE__ */ new Set();
+function installNuxtModule(name, options) {
+  if (installPrompts.has(name)) {
+    return;
+  }
+  installPrompts.add(name);
+  const nuxt = useNuxt();
+  return promptToInstall(name, async () => {
+    const { runCommand } = await import('@nuxt/cli');
+    await runCommand("module", ["add", name, "--cwd", nuxt.options.rootDir]);
+  }, { rootDir: nuxt.options.rootDir, searchPaths: nuxt.options.modulesDir, ...options });
+}
+function ensurePackageInstalled(name, options) {
+  return promptToInstall(name, () => addDependency(name, {
+    cwd: options.rootDir,
+    dev: true
+  }), options);
+}
+
+const features = {
+  __proto__: null,
+  ensurePackageInstalled: ensurePackageInstalled,
+  installNuxtModule: installNuxtModule
+};
+
 let _distDir = dirname(fileURLToPath(import.meta.url));
 if (_distDir.match(/(chunks|shared)$/)) {
   _distDir = dirname(_distDir);
@@ -57,7 +133,11 @@ const pkgDir = resolve(distDir, "..");
 
 async function resolveTypePath(path, subpath, searchPaths = tryUseNuxt()?.options.modulesDir) {
   try {
-    const r = await resolvePath(path, { url: searchPaths, conditions: ["types", "import", "require"] });
+    const r = resolveModulePath(path, {
+      from: searchPaths?.map((d) => directoryToURL(d)),
+      conditions: ["types", "import", "require"],
+      extensions: [".js", ".mjs", ".cjs", ".ts", ".mts", ".cts"]
+    });
     if (subpath) {
       return r.replace(/(?:\.d)?\.[mc]?[jt]s$/, "");
     }
@@ -88,7 +168,7 @@ function resolveComponentNameSegments(fileName, prefixParts) {
     const prefixPart = prefixParts[index];
     matchedSuffix.unshift(...splitByCase(prefixPart).map((p) => p.toLowerCase()));
     const matchedSuffixContent = matchedSuffix.join("/");
-    if (fileNamePartsContent === matchedSuffixContent || fileNamePartsContent.startsWith(matchedSuffixContent + "/") || // e.g Item/Item/Item.vue -> Item
+    if (fileNamePartsContent === matchedSuffixContent || fileNamePartsContent.startsWith(matchedSuffixContent + "/") || // e.g. Item/Item/Item.vue -> Item
     prefixPart.toLowerCase() === fileNamePartsContent && prefixParts[index + 1] && prefixParts[index] === prefixParts[index + 1]) {
       componentNameParts.length = index;
     }
@@ -134,6 +214,14 @@ function getLoader(id) {
   }
   return ext.endsWith("x") ? "tsx" : "ts";
 }
+function matchWithStringOrRegex(value, matcher) {
+  if (typeof matcher === "string") {
+    return value === matcher;
+  } else if (matcher instanceof RegExp) {
+    return matcher.test(value);
+  }
+  return false;
+}
 
 function uniqueBy(arr, key) {
   if (arr.length < 2) {
@@ -154,24 +242,17 @@ const QUOTE_RE = /["']/g;
 const EXTENSION_RE = /\b\.\w+$/g;
 const SX_RE = /\.[tj]sx$/;
 
-function toArray(value) {
-  return Array.isArray(value) ? value : [value];
-}
-async function isDirectory$1(path) {
-  return (await promises.lstat(path)).isDirectory();
-}
-
-async function resolvePagesRoutes() {
-  const nuxt = useNuxt();
+const enUSComparator = new Intl.Collator("en-US");
+async function resolvePagesRoutes(pattern, nuxt = useNuxt()) {
   const pagesDirs = nuxt.options._layers.map(
-    (layer) => resolve(layer.config.srcDir, (layer.config.rootDir === nuxt.options.rootDir ? nuxt.options : layer.config).dir?.pages || "pages")
+    (layer) => resolve(layer.config.srcDir, (layer.config.rootDir === nuxt.options.rootDir ? nuxt.options.dir : layer.config.dir)?.pages || "pages")
   );
   const scannedFiles = [];
   for (const dir of pagesDirs) {
-    const files = await resolveFiles(dir, `**/*{${nuxt.options.extensions.join(",")}}`);
+    const files = await resolveFiles(dir, pattern);
     scannedFiles.push(...files.map((file) => ({ relativePath: relative(dir, file), absolutePath: file })));
   }
-  scannedFiles.sort((a, b) => a.relativePath.localeCompare(b.relativePath, "en-US"));
+  scannedFiles.sort((a, b) => enUSComparator.compare(a.relativePath, b.relativePath));
   const allRoutes = generateRoutesFromFiles(uniqueBy(scannedFiles, "relativePath"), {
     shouldUseServerComponents: !!nuxt.options.experimental.componentIslands
   });
@@ -181,22 +262,34 @@ async function resolvePagesRoutes() {
     await nuxt.callHook("pages:extend", pages);
     return pages;
   }
+  const extraPageMetaExtractionKeys = nuxt.options?.experimental?.extraPageMetaExtractionKeys || [];
+  const augmentCtx = {
+    extraExtractionKeys: /* @__PURE__ */ new Set([
+      "middleware",
+      ...extraPageMetaExtractionKeys
+    ]),
+    fullyResolvedPaths: new Set(scannedFiles.map((file) => file.absolutePath))
+  };
   if (shouldAugment === "after-resolve") {
     await nuxt.callHook("pages:extend", pages);
-    await augmentPages(pages, nuxt.vfs);
+    await augmentPages(pages, nuxt.vfs, augmentCtx);
   } else {
-    const augmentedPages = await augmentPages(pages, nuxt.vfs);
+    const augmentedPages = await augmentPages(pages, nuxt.vfs, augmentCtx);
     await nuxt.callHook("pages:extend", pages);
-    await augmentPages(pages, nuxt.vfs, augmentedPages);
-    augmentedPages.clear();
+    await augmentPages(pages, nuxt.vfs, { pagesToSkip: augmentedPages, ...augmentCtx });
+    augmentedPages?.clear();
   }
   await nuxt.callHook("pages:resolved", pages);
   return pages;
 }
 const INDEX_PAGE_RE = /\/index$/;
 function generateRoutesFromFiles(files, options = {}) {
+  if (!files.length) {
+    return [];
+  }
   const routes = [];
-  for (const file of files) {
+  const sortedFiles = [...files].sort((a, b) => a.relativePath.length - b.relativePath.length);
+  for (const file of sortedFiles) {
     const segments = file.relativePath.replace(new RegExp(`${escapeRE(extname(file.relativePath))}$`), "").split("/");
     const route = {
       name: "",
@@ -217,51 +310,53 @@ function generateRoutesFromFiles(files, options = {}) {
     }
     for (let i = 0; i < segments.length; i++) {
       const segment = segments[i];
-      const tokens = parseSegment(segment);
+      const tokens = parseSegment(segment, file.absolutePath);
       if (tokens.every((token) => token.type === 4 /* group */)) {
         continue;
       }
       const segmentName = tokens.map(({ value, type }) => type === 4 /* group */ ? "" : value).join("");
       route.name += (route.name && "/") + segmentName;
-      const path = withLeadingSlash(joinURL(route.path, getRoutePath(tokens).replace(INDEX_PAGE_RE, "/")));
-      const child = parent.find((parentRoute) => parentRoute.name === route.name && parentRoute.path === path);
+      const routePath = getRoutePath(tokens, segments[i + 1] !== void 0 && segments[i + 1] !== "index");
+      const path = withLeadingSlash(joinURL(route.path, routePath.replace(INDEX_PAGE_RE, "/")));
+      const child = parent.find((parentRoute) => parentRoute.name === route.name && parentRoute.path === path.replace("([^/]*)*", "(.*)*"));
       if (child && child.children) {
         parent = child.children;
         route.path = "";
       } else if (segmentName === "index" && !route.path) {
         route.path += "/";
       } else if (segmentName !== "index") {
-        route.path += getRoutePath(tokens);
+        route.path += routePath;
       }
     }
     parent.push(route);
   }
   return prepareRoutes(routes);
 }
-async function augmentPages(routes, vfs, augmentedPages = /* @__PURE__ */ new Set()) {
+async function augmentPages(routes, vfs, ctx = {}) {
+  ctx.augmentedPages ??= /* @__PURE__ */ new Set();
   for (const route of routes) {
-    if (route.file && !augmentedPages.has(route.file)) {
-      const fileContent = route.file in vfs ? vfs[route.file] : fs.readFileSync(await resolvePath$1(route.file), "utf-8");
-      const routeMeta = await getRouteMeta(fileContent, route.file);
+    if (route.file && !ctx.pagesToSkip?.has(route.file)) {
+      const fileContent = route.file in vfs ? vfs[route.file] : fs.readFileSync(ctx.fullyResolvedPaths?.has(route.file) ? route.file : await resolvePath(route.file), "utf-8");
+      const routeMeta = getRouteMeta(fileContent, route.file, ctx.extraExtractionKeys);
       if (route.meta) {
         routeMeta.meta = { ...routeMeta.meta, ...route.meta };
       }
       Object.assign(route, routeMeta);
-      augmentedPages.add(route.file);
+      ctx.augmentedPages.add(route.file);
     }
     if (route.children && route.children.length > 0) {
-      await augmentPages(route.children, vfs, augmentedPages);
+      await augmentPages(route.children, vfs, ctx);
     }
   }
-  return augmentedPages;
+  return ctx.augmentedPages;
 }
 const SFC_SCRIPT_RE = /<script(?<attrs>[^>]*)>(?<content>[\s\S]*?)<\/script[^>]*>/gi;
-function extractScriptContent(html) {
+function extractScriptContent(sfc) {
   const contents = [];
-  for (const match of html.matchAll(SFC_SCRIPT_RE)) {
+  for (const match of sfc.matchAll(SFC_SCRIPT_RE)) {
     if (match?.groups?.content) {
       contents.push({
-        loader: match.groups.attrs?.includes("tsx") ? "tsx" : "ts",
+        loader: match.groups.attrs && /[tj]sx/.test(match.groups.attrs) ? "tsx" : "ts",
         code: match.groups.content.trim()
       });
     }
@@ -269,17 +364,17 @@ function extractScriptContent(html) {
   return contents;
 }
 const PAGE_META_RE = /definePageMeta\([\s\S]*?\)/;
-const extractionKeys = ["name", "path", "props", "alias", "redirect"];
+const defaultExtractionKeys = ["name", "path", "props", "alias", "redirect", "middleware"];
 const DYNAMIC_META_KEY = "__nuxt_dynamic_meta_key";
 const pageContentsCache = {};
 const metaCache$1 = {};
-async function getRouteMeta(contents, absolutePath) {
+function getRouteMeta(contents, absolutePath, extraExtractionKeys = /* @__PURE__ */ new Set()) {
   if (!(absolutePath in pageContentsCache) || pageContentsCache[absolutePath] !== contents) {
     pageContentsCache[absolutePath] = contents;
     delete metaCache$1[absolutePath];
   }
   if (absolutePath in metaCache$1 && metaCache$1[absolutePath]) {
-    return metaCache$1[absolutePath];
+    return klona(metaCache$1[absolutePath]);
   }
   const loader = getLoader(absolutePath);
   const scriptBlocks = !loader ? null : loader === "vue" ? extractScriptContent(contents) : [{ code: contents, loader }];
@@ -288,98 +383,75 @@ async function getRouteMeta(contents, absolutePath) {
     return {};
   }
   const extractedMeta = {};
+  const extractionKeys = /* @__PURE__ */ new Set([...defaultExtractionKeys, ...extraExtractionKeys]);
   for (const script of scriptBlocks) {
     if (!PAGE_META_RE.test(script.code)) {
       continue;
     }
-    const js = await transform(script.code, { loader: script.loader });
-    const ast = parse(js.code, {
-      sourceType: "module",
-      ecmaVersion: "latest",
-      ranges: true
-    });
     const dynamicProperties = /* @__PURE__ */ new Set();
     let foundMeta = false;
-    walk(ast, {
-      enter(node) {
-        if (foundMeta) {
-          return;
+    parseAndWalk(script.code, absolutePath.replace(/\.\w+$/, "." + script.loader), (node) => {
+      if (foundMeta) {
+        return;
+      }
+      if (node.type !== "ExpressionStatement" || node.expression.type !== "CallExpression" || node.expression.callee.type !== "Identifier" || node.expression.callee.name !== "definePageMeta") {
+        return;
+      }
+      foundMeta = true;
+      const pageMetaArgument = node.expression.arguments[0];
+      if (pageMetaArgument?.type !== "ObjectExpression") {
+        logger.warn(`\`definePageMeta\` must be called with an object literal (reading \`${absolutePath}\`).`);
+        return;
+      }
+      for (const key of extractionKeys) {
+        const property = pageMetaArgument.properties.find((property2) => property2.type === "Property" && property2.key.type === "Identifier" && property2.key.name === key);
+        if (!property) {
+          continue;
         }
-        if (node.type !== "ExpressionStatement" || node.expression.type !== "CallExpression" || node.expression.callee.type !== "Identifier" || node.expression.callee.name !== "definePageMeta") {
-          return;
+        const { value, serializable } = isSerializable(script.code, property.value);
+        if (!serializable) {
+          logger.debug(`Skipping extraction of \`${key}\` metadata as it is not JSON-serializable (reading \`${absolutePath}\`).`);
+          dynamicProperties.add(extraExtractionKeys.has(key) ? "meta" : key);
+          continue;
         }
-        foundMeta = true;
-        const pageMetaArgument = node.expression.arguments[0];
-        for (const key of extractionKeys) {
-          const property = pageMetaArgument.properties.find((property2) => property2.type === "Property" && property2.key.type === "Identifier" && property2.key.name === key);
-          if (!property) {
-            continue;
-          }
-          if (property.value.type === "ObjectExpression") {
-            const valueString = js.code.slice(property.value.range[0], property.value.range[1]);
-            try {
-              extractedMeta[key] = JSON.parse(runInNewContext(`JSON.stringify(${valueString})`, {}));
-            } catch {
-              console.debug(`[nuxt] Skipping extraction of \`${key}\` metadata as it is not JSON-serializable (reading \`${absolutePath}\`).`);
-              dynamicProperties.add(key);
-              continue;
-            }
-          }
-          if (property.value.type === "ArrayExpression") {
-            const values = [];
-            for (const element of property.value.elements) {
-              if (!element) {
-                continue;
-              }
-              if (element.type !== "Literal" || typeof element.value !== "string") {
-                console.debug(`[nuxt] Skipping extraction of \`${key}\` metadata as it is not an array of string literals (reading \`${absolutePath}\`).`);
-                dynamicProperties.add(key);
-                continue;
-              }
-              values.push(element.value);
-            }
-            extractedMeta[key] = values;
-            continue;
-          }
-          if (property.value.type !== "Literal" || typeof property.value.value !== "string" && typeof property.value.value !== "boolean") {
-            console.debug(`[nuxt] Skipping extraction of \`${key}\` metadata as it is not a string literal or array of string literals (reading \`${absolutePath}\`).`);
-            dynamicProperties.add(key);
-            continue;
-          }
-          extractedMeta[key] = property.value.value;
+        if (extraExtractionKeys.has(key)) {
+          extractedMeta.meta ??= {};
+          extractedMeta.meta[key] = value;
+        } else {
+          extractedMeta[key] = value;
         }
-        for (const property of pageMetaArgument.properties) {
-          if (property.type !== "Property") {
-            continue;
-          }
-          const isIdentifierOrLiteral = property.key.type === "Literal" || property.key.type === "Identifier";
-          if (!isIdentifierOrLiteral) {
-            continue;
-          }
-          const name = property.key.type === "Identifier" ? property.key.name : String(property.value);
-          if (name) {
-            dynamicProperties.add("meta");
-            break;
-          }
+      }
+      for (const property of pageMetaArgument.properties) {
+        if (property.type !== "Property") {
+          continue;
+        }
+        const isIdentifierOrLiteral = property.key.type === "Literal" || property.key.type === "Identifier";
+        if (!isIdentifierOrLiteral) {
+          continue;
         }
-        if (dynamicProperties.size) {
-          extractedMeta.meta ?? (extractedMeta.meta = {});
-          extractedMeta.meta[DYNAMIC_META_KEY] = dynamicProperties;
+        const name = property.key.type === "Identifier" ? property.key.name : String(property.value);
+        if (!extraExtractionKeys.has(name)) {
+          dynamicProperties.add("meta");
+          break;
         }
       }
+      if (dynamicProperties.size) {
+        extractedMeta.meta ??= {};
+        extractedMeta.meta[DYNAMIC_META_KEY] = dynamicProperties;
+      }
     });
   }
   metaCache$1[absolutePath] = extractedMeta;
-  return extractedMeta;
+  return klona(extractedMeta);
 }
 const COLON_RE = /:/g;
-function getRoutePath(tokens) {
+function getRoutePath(tokens, hasSucceedingSegment = false) {
   return tokens.reduce((path, token) => {
-    return path + (token.type === 2 /* optional */ ? `:${token.value}?` : token.type === 1 /* dynamic */ ? `:${token.value}()` : token.type === 3 /* catchall */ ? `:${token.value}(.*)*` : token.type === 4 /* group */ ? "" : encodePath(token.value).replace(COLON_RE, "\\:"));
+    return path + (token.type === 2 /* optional */ ? `:${token.value}?` : token.type === 1 /* dynamic */ ? `:${token.value}()` : token.type === 3 /* catchall */ ? hasSucceedingSegment ? `:${token.value}([^/]*)*` : `:${token.value}(.*)*` : token.type === 4 /* group */ ? "" : encodePath(token.value).replace(COLON_RE, "\\:"));
   }, "/");
 }
 const PARAM_CHAR_RE = /[\w.]/;
-function parseSegment(segment) {
+function parseSegment(segment, absolutePath) {
   let state = 0 /* initial */;
   let i = 0;
   let buffer = "";
@@ -449,7 +521,11 @@ function parseSegment(segment) {
           state = 0 /* initial */;
         } else if (c && PARAM_CHAR_RE.test(c)) {
           buffer += c;
-        } else ;
+        } else if (state === 2 /* dynamic */ || state === 3 /* optional */) {
+          if (c !== "[" && c !== "]") {
+            logger.warn(`'\`${c}\`' is not allowed in a dynamic route parameter and has been ignored. Consider renaming \`${absolutePath}\`.`);
+          }
+        }
         break;
     }
     i++;
@@ -522,7 +598,7 @@ function normalizeRoutes(routes, metaImports = /* @__PURE__ */ new Set(), option
         alias: serializeRouteValue(toArray(page.alias), skipAlias),
         redirect: serializeRouteValue(page.redirect)
       };
-      for (const key of ["path", "props", "name", "meta", "alias", "redirect"]) {
+      for (const key of [...defaultExtractionKeys, "meta"]) {
         if (route[key] === void 0) {
           delete route[key];
         }
@@ -616,41 +692,91 @@ function resolveRoutePaths(page, parent = "/") {
     ...page.children?.flatMap((child) => resolveRoutePaths(child, joinURL(parent, page.path))) || []
   ];
 }
+function isSerializable(code, node) {
+  if (node.type === "ObjectExpression") {
+    const valueString = code.slice(node.start, node.end);
+    try {
+      return {
+        value: JSON.parse(runInNewContext(`JSON.stringify(${valueString})`, {})),
+        serializable: true
+      };
+    } catch {
+      return {
+        serializable: false
+      };
+    }
+  }
+  if (node.type === "ArrayExpression") {
+    const values = [];
+    for (const element of node.elements) {
+      if (!element) {
+        continue;
+      }
+      const { serializable, value } = isSerializable(code, element);
+      if (!serializable) {
+        return {
+          serializable: false
+        };
+      }
+      values.push(value);
+    }
+    return {
+      value: values,
+      serializable: true
+    };
+  }
+  if (node.type === "Literal" && (typeof node.value === "string" || typeof node.value === "boolean" || typeof node.value === "number" || node.value === null)) {
+    return {
+      value: node.value,
+      serializable: true
+    };
+  }
+  return {
+    serializable: false
+  };
+}
+function toRou3Patterns(pages, prefix = "/") {
+  const routes = [];
+  for (const page of pages) {
+    const path = page.path.replace(/\([^)]*\)/g, "").replace(/:(\w+)\*.*/g, (_, name) => `**:${name}`).replace(/:([^/*]*)/g, (_, name) => `:${name.replace(/\W/g, (r) => r === "?" ? "" : "_")}`);
+    routes.push(joinURL(prefix, path));
+    if (page.children) {
+      routes.push(...toRou3Patterns(page.children, joinURL(prefix, path)));
+    }
+  }
+  return routes;
+}
 
 const ROUTE_RULE_RE = /\bdefineRouteRules\(/;
 const ruleCache = {};
-async function extractRouteRules(code) {
+function extractRouteRules(code, path) {
+  if (!ROUTE_RULE_RE.test(code)) {
+    return null;
+  }
   if (code in ruleCache) {
     return ruleCache[code] || null;
   }
-  if (!ROUTE_RULE_RE.test(code)) {
+  const loader = getLoader(path);
+  if (!loader) {
     return null;
   }
   let rule = null;
-  const contents = extractScriptContent(code);
+  const contents = loader === "vue" ? extractScriptContent(code) : [{ code, loader }];
   for (const script of contents) {
     if (rule) {
       break;
     }
     code = script?.code || code;
-    const js = await transform(code, { loader: script?.loader || "ts" });
-    walk(parse(js.code, {
-      sourceType: "module",
-      ecmaVersion: "latest"
-    }), {
-      enter(_node) {
-        if (_node.type !== "CallExpression" || _node.callee.type !== "Identifier") {
-          return;
-        }
-        const node = _node;
-        const name = "name" in node.callee && node.callee.name;
-        if (name === "defineRouteRules") {
-          const rulesString = js.code.slice(node.start, node.end);
-          try {
-            rule = JSON.parse(runInNewContext(rulesString.replace("defineRouteRules", "JSON.stringify"), {}));
-          } catch {
-            throw new Error("[nuxt] Error parsing route rules. They should be JSON-serializable.");
-          }
+    parseAndWalk(code, "file." + (script?.loader || "ts"), (node) => {
+      if (node.type !== "CallExpression" || node.callee.type !== "Identifier") {
+        return;
+      }
+      if (node.callee.name === "defineRouteRules") {
+        const rulesString = code.slice(node.start, node.end);
+        try {
+          rule = JSON.parse(runInNewContext(rulesString.replace("defineRouteRules", "JSON.stringify"), {}));
+        } catch {
+          throw new Error("[nuxt] Error parsing route rules. They should be JSON-serializable.");
         }
       }
     });
@@ -664,7 +790,7 @@ function getMappedPages(pages, paths = {}, prefix = "") {
       const filename = normalize(page.file);
       paths[filename] = pathToNitroGlob(prefix + page.path);
     }
-    if (page.children) {
+    if (page.children?.length) {
       getMappedPages(page.children, paths, page.path + "/");
     }
   }
@@ -676,6 +802,10 @@ const CODE_EMPTY = `
 const __nuxt_page_meta = null
 export default __nuxt_page_meta
 `;
+const CODE_DEV_EMPTY = `
+const __nuxt_page_meta = {}
+export default __nuxt_page_meta
+`;
 const CODE_HMR = `
 // Vite
 if (import.meta.hot) {
@@ -689,7 +819,7 @@ if (import.meta.webpackHot) {
     if (err) { window.location = window.location.href }
   })
 }`;
-const PageMetaPlugin = (options) => createUnplugin(() => {
+const PageMetaPlugin = (options = {}) => createUnplugin(() => {
   return {
     name: "nuxt:pages-macros-transform",
     enforce: "post",
@@ -731,11 +861,11 @@ const PageMetaPlugin = (options) => createUnplugin(() => {
       }
       if (!hasMacro && !code.includes("export { default }") && !code.includes("__nuxt_page_meta")) {
         if (!code) {
-          s.append(CODE_EMPTY + (options.dev ? CODE_HMR : ""));
+          s.append(options.dev ? CODE_DEV_EMPTY + CODE_HMR : CODE_EMPTY);
           const { pathname } = parseURL(decodeURIComponent(pathToFileURL(id).href));
           logger.error(`The file \`${pathname}\` is not a valid page as it has no content.`);
         } else {
-          s.overwrite(0, code.length, CODE_EMPTY + (options.dev ? CODE_HMR : ""));
+          s.overwrite(0, code.length, options.dev ? CODE_DEV_EMPTY + CODE_HMR : CODE_EMPTY);
         }
         return result();
       }
@@ -751,58 +881,170 @@ const PageMetaPlugin = (options) => createUnplugin(() => {
           importMap.set(name, i);
         }
       }
-      walk(this.parse(code, {
-        sourceType: "module",
-        ecmaVersion: "latest"
-      }), {
-        enter(_node) {
-          if (_node.type !== "CallExpression" || _node.callee.type !== "Identifier") {
+      function isStaticIdentifier(name) {
+        return !!(name && importMap.has(name));
+      }
+      function addImport(name) {
+        if (!isStaticIdentifier(name)) {
+          return;
+        }
+        const importValue = importMap.get(name).code.trim();
+        if (!addedImports.has(importValue)) {
+          addedImports.add(importValue);
+        }
+      }
+      const declarationNodes = [];
+      const addedDeclarations = /* @__PURE__ */ new Set();
+      function addDeclaration(node) {
+        const codeSectionKey = `${node.start}-${node.end}`;
+        if (addedDeclarations.has(codeSectionKey)) {
+          return;
+        }
+        addedDeclarations.add(codeSectionKey);
+        declarationNodes.push(node);
+      }
+      function addImportOrDeclaration(name, node) {
+        if (isStaticIdentifier(name)) {
+          addImport(name);
+        } else {
+          const declaration = scopeTracker.getDeclaration(name);
+          if (declaration && declaration !== node) {
+            processDeclaration(declaration);
+          }
+        }
+      }
+      const scopeTracker = new ScopeTracker({
+        preserveExitedScopes: true
+      });
+      function processDeclaration(scopeTrackerNode) {
+        if (scopeTrackerNode?.type === "Variable") {
+          addDeclaration(scopeTrackerNode);
+          for (const decl of scopeTrackerNode.variableNode.declarations) {
+            if (!decl.init) {
+              continue;
+            }
+            walk(decl.init, {
+              enter: (node, parent) => {
+                if (node.type === "AwaitExpression") {
+                  logger.error(`Await expressions are not supported in definePageMeta. File: '${id}'`);
+                  throw new Error("await in definePageMeta");
+                }
+                if (isBindingIdentifier(node, parent) || node.type !== "Identifier") {
+                  return;
+                }
+                addImportOrDeclaration(node.name, scopeTrackerNode);
+              }
+            });
+          }
+        } else if (scopeTrackerNode?.type === "Function") {
+          if (scopeTrackerNode.node.type === "ArrowFunctionExpression") {
             return;
           }
-          const node = _node;
-          const name = "name" in node.callee && node.callee.name;
-          if (name !== "definePageMeta") {
+          const name = scopeTrackerNode.node.id?.name;
+          if (!name) {
+            return;
+          }
+          addDeclaration(scopeTrackerNode);
+          const undeclaredIdentifiers = getUndeclaredIdentifiersInFunction(scopeTrackerNode.node);
+          for (const name2 of undeclaredIdentifiers) {
+            addImportOrDeclaration(name2);
+          }
+        }
+      }
+      const { program: ast } = parseAndWalk(code, id, {
+        scopeTracker,
+        parseOptions: {
+          lang: query.lang ?? "ts"
+        }
+      });
+      scopeTracker.freeze();
+      let instances = 0;
+      walk(ast, {
+        scopeTracker,
+        enter: (node) => {
+          if (node.type !== "CallExpression" || node.callee.type !== "Identifier") {
+            return;
+          }
+          if (!("name" in node.callee) || node.callee.name !== "definePageMeta") {
             return;
           }
+          instances++;
           const meta = node.arguments[0];
-          let contents = `const __nuxt_page_meta = ${code.slice(meta.start, meta.end) || "null"}
-export default __nuxt_page_meta` + (options.dev ? CODE_HMR : "");
-          function addImport(name2) {
-            if (name2 && importMap.has(name2)) {
-              const importValue = importMap.get(name2).code;
-              if (!addedImports.has(importValue)) {
-                contents = importMap.get(name2).code + "\n" + contents;
-                addedImports.add(importValue);
+          if (!meta) {
+            return;
+          }
+          const metaCode = code.slice(meta.start, meta.end);
+          const m = new MagicString(metaCode);
+          if (meta.type === "ObjectExpression") {
+            for (let i = 0; i < meta.properties.length; i++) {
+              const prop = meta.properties[i];
+              if (prop.type === "Property" && prop.key.type === "Identifier" && options.extractedKeys?.includes(prop.key.name)) {
+                const { serializable } = isSerializable(metaCode, prop.value);
+                if (!serializable) {
+                  continue;
+                }
+                const nextProperty = meta.properties[i + 1];
+                if (nextProperty) {
+                  m.overwrite(prop.start - meta.start, nextProperty.start - meta.start, "");
+                } else if (code[prop.end] === ",") {
+                  m.overwrite(prop.start - meta.start, prop.end - meta.start + 1, "");
+                } else {
+                  m.overwrite(prop.start - meta.start, prop.end - meta.start, "");
+                }
               }
             }
           }
+          const definePageMetaScope = scopeTracker.getCurrentScope();
           walk(meta, {
-            enter(_node2) {
-              if (_node2.type === "CallExpression") {
-                const node2 = _node2;
-                addImport("name" in node2.callee && node2.callee.name);
+            scopeTracker,
+            enter(node2, parent) {
+              if (isBindingIdentifier(node2, parent) || node2.type !== "Identifier") {
+                return;
+              }
+              const declaration = scopeTracker.getDeclaration(node2.name);
+              if (declaration) {
+                if (declaration.isUnderScope(definePageMetaScope) && (scopeTracker.isCurrentScopeUnder(declaration.scope) || declaration.start < node2.start)) {
+                  return;
+                }
               }
-              if (_node2.type === "Identifier") {
-                const node2 = _node2;
+              if (isStaticIdentifier(node2.name)) {
                 addImport(node2.name);
+              } else if (declaration) {
+                processDeclaration(declaration);
               }
             }
           });
-          s.overwrite(0, code.length, contents);
+          const importStatements = Array.from(addedImports).join("\n");
+          const declarations = declarationNodes.sort((a, b) => a.start - b.start).map((node2) => code.slice(node2.start, node2.end)).join("\n");
+          const extracted = [
+            importStatements,
+            declarations,
+            `const __nuxt_page_meta = ${m.toString() || "null"}
+export default __nuxt_page_meta` + (options.dev ? CODE_HMR : "")
+          ].join("\n");
+          s.overwrite(0, code.length, extracted.trim());
         }
       });
+      if (instances > 1) {
+        throw new Error("Multiple `definePageMeta` calls are not supported. File: " + id.replace(/\?.+$/, ""));
+      }
       if (!s.hasChanged() && !code.includes("__nuxt_page_meta")) {
-        s.overwrite(0, code.length, CODE_EMPTY + (options.dev ? CODE_HMR : ""));
+        s.overwrite(0, code.length, options.dev ? CODE_DEV_EMPTY + CODE_HMR : CODE_EMPTY);
       }
       return result();
     },
     vite: {
       handleHotUpdate: {
-        order: "pre",
-        handler: ({ modules }) => {
-          const index = modules.findIndex((i) => i.id?.includes("?macro=true"));
-          if (index !== -1) {
-            modules.splice(index, 1);
+        order: "post",
+        handler: ({ file, modules, server }) => {
+          if (options.routesPath && options.isPage?.(file)) {
+            const macroModule = server.moduleGraph.getModuleById(file + "?macro=true");
+            const routesModule = server.moduleGraph.getModuleById("virtual:nuxt:" + encodeURIComponent(options.routesPath));
+            return [
+              ...modules,
+              ...macroModule ? [macroModule] : [],
+              ...routesModule ? [routesModule] : []
+            ];
           }
         }
       }
@@ -837,86 +1079,96 @@ const RouteInjectionPlugin = (nuxt) => createUnplugin(() => {
     transformInclude(id) {
       return isVue(id, { type: ["template", "script"] });
     },
-    transform(code) {
-      if (!INJECTION_SINGLE_RE.test(code) || code.includes("_ctx._.provides[__nuxt_route_symbol") || code.includes("this._.provides[__nuxt_route_symbol")) {
-        return;
-      }
-      let replaced = false;
-      const s = new MagicString(code);
-      const strippedCode = stripLiteral(code);
-      const replaceMatches = (regExp, replacement) => {
-        for (const match of strippedCode.matchAll(regExp)) {
-          const start = match.index;
-          const end = start + match[0].length;
-          s.overwrite(start, end, replacement);
-          if (!replaced) {
-            replaced = true;
-          }
+    transform: {
+      filter: {
+        code: { include: INJECTION_SINGLE_RE }
+      },
+      handler(code) {
+        if (code.includes("_ctx._.provides[__nuxt_route_symbol") || code.includes("this._.provides[__nuxt_route_symbol")) {
+          return;
         }
-      };
-      replaceMatches(INJECTION_RE_TEMPLATE, "(_ctx._.provides[__nuxt_route_symbol] || _ctx.$route)");
-      replaceMatches(INJECTION_RE_SCRIPT, "(this._.provides[__nuxt_route_symbol] || this.$route)");
-      if (replaced) {
-        s.prepend("import { PageRouteSymbol as __nuxt_route_symbol } from '#app/components/injections';\n");
-      }
-      if (s.hasChanged()) {
-        return {
-          code: s.toString(),
-          map: nuxt.options.sourcemap.client || nuxt.options.sourcemap.server ? s.generateMap({ hires: true }) : void 0
+        let replaced = false;
+        const s = new MagicString(code);
+        const strippedCode = stripLiteral(code);
+        const replaceMatches = (regExp, replacement) => {
+          for (const match of strippedCode.matchAll(regExp)) {
+            const start = match.index;
+            const end = start + match[0].length;
+            s.overwrite(start, end, replacement);
+            replaced ||= true;
+          }
         };
+        replaceMatches(INJECTION_RE_TEMPLATE, "(_ctx._.provides[__nuxt_route_symbol] || _ctx.$route)");
+        replaceMatches(INJECTION_RE_SCRIPT, "(this._.provides[__nuxt_route_symbol] || this.$route)");
+        if (replaced) {
+          s.prepend("import { PageRouteSymbol as __nuxt_route_symbol } from '#app/components/injections';\n");
+        }
+        if (s.hasChanged()) {
+          return {
+            code: s.toString(),
+            map: nuxt.options.sourcemap.client || nuxt.options.sourcemap.server ? s.generateMap({ hires: true }) : void 0
+          };
+        }
       }
     }
   };
 });
 
 const OPTIONAL_PARAM_RE = /^\/?:.*(?:\?|\(\.\*\)\*)$/;
+const runtimeDir = resolve(distDir, "pages/runtime");
+async function resolveRouterOptions(nuxt, builtInRouterOptions) {
+  const context = {
+    files: []
+  };
+  for (const layer of nuxt.options._layers) {
+    const path = await findPath(resolve(layer.config.srcDir, layer.config.dir?.app || "app", "router.options"));
+    if (path) {
+      context.files.unshift({ path });
+    }
+  }
+  context.files.unshift({ path: builtInRouterOptions, optional: true });
+  await nuxt.callHook("pages:routerOptions", context);
+  return context.files;
+}
 const pagesModule = defineNuxtModule({
   meta: {
-    name: "pages"
+    name: "nuxt:pages",
+    configKey: "pages"
   },
+  defaults: (nuxt) => ({
+    enabled: typeof nuxt.options.pages === "boolean" ? nuxt.options.pages : void 0,
+    pattern: `**/*{${nuxt.options.extensions.join(",")}}`
+  }),
   async setup(_options, nuxt) {
+    const options = typeof _options === "boolean" ? { enabled: _options ?? nuxt.options.pages, pattern: `**/*{${nuxt.options.extensions.join(",")}}` } : { ..._options };
+    options.pattern = Array.isArray(options.pattern) ? [...new Set(options.pattern)] : options.pattern;
     const useExperimentalTypedPages = nuxt.options.experimental.typedPages;
-    const runtimeDir = resolve(distDir, "pages/runtime");
+    const builtInRouterOptions = await findPath(resolve(runtimeDir, "router.options")) || resolve(runtimeDir, "router.options");
     const pagesDirs = nuxt.options._layers.map(
       (layer) => resolve(layer.config.srcDir, (layer.config.rootDir === nuxt.options.rootDir ? nuxt.options : layer.config).dir?.pages || "pages")
     );
     nuxt.options.alias["#vue-router"] = "vue-router";
     const routerPath = await resolveTypePath("vue-router", "", nuxt.options.modulesDir) || "vue-router";
     nuxt.hook("prepare:types", ({ tsConfig }) => {
-      var _a;
-      tsConfig.compilerOptions || (tsConfig.compilerOptions = {});
-      (_a = tsConfig.compilerOptions).paths || (_a.paths = {});
+      tsConfig.compilerOptions ||= {};
+      tsConfig.compilerOptions.paths ||= {};
       tsConfig.compilerOptions.paths["#vue-router"] = [routerPath];
       delete tsConfig.compilerOptions.paths["#vue-router/*"];
     });
-    async function resolveRouterOptions() {
-      const context = {
-        files: []
-      };
-      for (const layer of nuxt.options._layers) {
-        const path = await findPath(resolve(layer.config.srcDir, layer.config.dir?.app || "app", "router.options"));
-        if (path) {
-          context.files.unshift({ path });
-        }
-      }
-      context.files.unshift({ path: await findPath(resolve(runtimeDir, "router.options")) || resolve(runtimeDir, "router.options"), optional: true });
-      await nuxt.callHook("pages:routerOptions", context);
-      return context.files;
-    }
     const isNonEmptyDir = (dir) => existsSync(dir) && readdirSync(dir).length;
-    const userPreference = nuxt.options.pages;
+    const userPreference = options.enabled;
     const isPagesEnabled = async () => {
       if (typeof userPreference === "boolean") {
         return userPreference;
       }
-      const routerOptionsFiles = await resolveRouterOptions();
+      const routerOptionsFiles = await resolveRouterOptions(nuxt, builtInRouterOptions);
       if (routerOptionsFiles.filter((p) => !p.optional).length > 0) {
         return true;
       }
       if (pagesDirs.some((dir) => isNonEmptyDir(dir))) {
         return true;
       }
-      const pages = await resolvePagesRoutes();
+      const pages = await resolvePagesRoutes(options.pattern, nuxt);
       if (pages.length) {
         if (nuxt.apps.default) {
           nuxt.apps.default.pages = pages;
@@ -925,18 +1177,22 @@ const pagesModule = defineNuxtModule({
       }
       return false;
     };
-    nuxt.options.pages = await isPagesEnabled();
-    if (nuxt.options.dev && nuxt.options.pages) {
+    options.enabled = await isPagesEnabled();
+    nuxt.options.pages = options;
+    Object.defineProperty(nuxt.options.pages, "toString", {
+      enumerable: false,
+      get: () => () => options.enabled
+    });
+    if (nuxt.options.dev && options.enabled) {
       addPlugin(resolve(runtimeDir, "plugins/check-if-page-unused"));
     }
-    nuxt.hook("app:templates", async (app) => {
-      app.pages = await resolvePagesRoutes();
-      if (!nuxt.options.ssr && app.pages.some((p) => p.mode === "server")) {
+    nuxt.hook("app:templates", (app) => {
+      if (!nuxt.options.ssr && app.pages?.some((p) => p.mode === "server")) {
         logger.warn("Using server pages with `ssr: false` is not supported with auto-detected component islands. Set `experimental.componentIslands` to `true`.");
       }
     });
     const restartPaths = nuxt.options._layers.flatMap((layer) => {
-      const pagesDir = (layer.config.rootDir === nuxt.options.rootDir ? nuxt.options : layer.config).dir?.pages || "pages";
+      const pagesDir = (layer.config.rootDir === nuxt.options.rootDir ? nuxt.options.dir : layer.config.dir)?.pages || "pages";
       return [
         resolve(layer.config.srcDir || layer.cwd, layer.config.dir?.app || "app", "router.options.ts"),
         resolve(layer.config.srcDir || layer.cwd, pagesDir)
@@ -946,13 +1202,13 @@ const pagesModule = defineNuxtModule({
       const path = resolve(nuxt.options.srcDir, relativePath);
       if (restartPaths.some((p) => p === path || path.startsWith(p + "/"))) {
         const newSetting = await isPagesEnabled();
-        if (nuxt.options.pages !== newSetting) {
+        if (options.enabled !== newSetting) {
           logger.info("Pages", newSetting ? "enabled" : "disabled");
           return nuxt.callHook("restart");
         }
       }
     });
-    if (!nuxt.options.pages) {
+    if (!options.enabled) {
       addPlugin(resolve(distDir, "app/plugins/router"));
       addTemplate({
         filename: "pages.mjs",
@@ -961,6 +1217,15 @@ const pagesModule = defineNuxtModule({
           "export const START_LOCATION = Symbol('router:start-location')"
         ].join("\n")
       });
+      addTemplate({
+        filename: "router.options.mjs",
+        getContents: () => {
+          return [
+            "export const hashMode = false",
+            "export default {}"
+          ].join("\n");
+        }
+      });
       addTypeTemplate({
         filename: "types/middleware.d.ts",
         getContents: () => [
@@ -971,7 +1236,7 @@ const pagesModule = defineNuxtModule({
           "}",
           "export {}"
         ].join("\n")
-      });
+      }, { nuxt: true, nitro: true });
       addComponent({
         name: "NuxtPage",
         priority: 10,
@@ -988,20 +1253,20 @@ const pagesModule = defineNuxtModule({
     }
     if (useExperimentalTypedPages) {
       const declarationFile = "./types/typed-router.d.ts";
-      const options = {
+      const typedRouterOptions = {
         routesFolder: [],
         dts: resolve(nuxt.options.buildDir, declarationFile),
-        logs: nuxt.options.debug,
+        logs: nuxt.options.debug && nuxt.options.debug.router,
         async beforeWriteFiles(rootPage) {
           rootPage.children.forEach((child) => child.delete());
-          const pages = nuxt.apps.default?.pages || await resolvePagesRoutes();
+          const pages = nuxt.apps.default?.pages || await resolvePagesRoutes(options.pattern, nuxt);
           if (nuxt.apps.default) {
             nuxt.apps.default.pages = pages;
           }
           const addedPagePaths = /* @__PURE__ */ new Set();
-          function addPage(parent, page) {
-            const absolutePagePath = joinURL(parent.path, page.path);
-            const route = addedPagePaths.has(absolutePagePath) ? parent : parent.insert(page.path, page.file);
+          function addPage(parent, page, basePath = "") {
+            const absolutePagePath = joinURL(basePath, page.path);
+            const route = addedPagePaths.has(absolutePagePath) ? parent : page.path[0] === "/" ? rootPage.insert(page.path, page.file) : parent.insert(page.path, page.file);
             addedPagePaths.add(absolutePagePath);
             if (page.meta) {
               route.addToMeta(page.meta);
@@ -1013,7 +1278,7 @@ const pagesModule = defineNuxtModule({
               route.name = page.name;
             }
             if (page.children) {
-              page.children.forEach((child) => addPage(route, child));
+              page.children.forEach((child) => addPage(route, child, absolutePagePath));
             }
           }
           for (const page of pages) {
@@ -1025,7 +1290,7 @@ const pagesModule = defineNuxtModule({
         references.push({ path: declarationFile });
         references.push({ types: "unplugin-vue-router/client" });
       });
-      const context = createRoutesContext(resolveOptions(options));
+      const context = createRoutesContext(resolveOptions(typedRouterOptions));
       const dtsFile = resolve(nuxt.options.buildDir, declarationFile);
       await mkdir(dirname(dtsFile), { recursive: true });
       await context.scanPages(false);
@@ -1052,7 +1317,7 @@ const pagesModule = defineNuxtModule({
       }
     });
     const updateTemplatePaths = nuxt.options._layers.flatMap((l) => {
-      const dir = (l.config.rootDir === nuxt.options.rootDir ? nuxt.options : l.config).dir;
+      const dir = l.config.rootDir === nuxt.options.rootDir ? nuxt.options.dir : l.config.dir;
       return [
         resolve(l.config.srcDir || l.cwd, dir?.pages || "pages") + "/",
         resolve(l.config.srcDir || l.cwd, dir?.layouts || "layouts") + "/",
@@ -1065,6 +1330,9 @@ const pagesModule = defineNuxtModule({
       }
       return pages.some((page) => page.file === file) || pages.some((page) => page.children && isPage(file, page.children));
     }
+    nuxt.hooks.hookOnce("app:templates", async (app) => {
+      app.pages ||= await resolvePagesRoutes(options.pattern, nuxt);
+    });
     nuxt.hook("builder:watch", async (event, relativePath) => {
       const path = resolve(nuxt.options.srcDir, relativePath);
       const shouldAlwaysRegenerate = nuxt.options.experimental.scanPageMeta && isPage(path);
@@ -1072,9 +1340,7 @@ const pagesModule = defineNuxtModule({
         return;
       }
       if (shouldAlwaysRegenerate || updateTemplatePaths.some((dir) => path.startsWith(dir))) {
-        await updateTemplates({
-          filter: (template) => template.filename === "routes.mjs"
-        });
+        nuxt.apps.default.pages = await resolvePagesRoutes(options.pattern, nuxt);
       }
     });
     nuxt.hook("app:resolve", (app) => {
@@ -1123,6 +1389,10 @@ const pagesModule = defineNuxtModule({
       if (nuxt.options.dev || nuxt.options.router.options.hashMode) {
         return;
       }
+      nitro.options.ssrRoutes = [
+        ...nitro.options.ssrRoutes || [],
+        ...toRou3Patterns(nuxt.apps.default?.pages || [])
+      ];
       if (!nitro.options.static && !nitro.options.prerender.crawlLinks) {
         const routeRulesMatcher = toRouteMatcher(createRouter({ routes: nitro.options.routeRules }));
         for (const route of prerenderRoutes) {
@@ -1168,11 +1438,11 @@ const pagesModule = defineNuxtModule({
         const glob = pageToGlobMap[path];
         const code = path in nuxt.vfs ? nuxt.vfs[path] : await readFile(path, "utf-8");
         try {
-          const extractedRule = await extractRouteRules(code);
+          const extractedRule = extractRouteRules(code, path);
           if (extractedRule) {
             if (!glob) {
-              const relativePath = relative(nuxt.options.srcDir, path);
-              logger.error(`Could not set inline route rules in \`~/${relativePath}\` as it could not be mapped to a Nitro route.`);
+              const relativePath = resolveToAlias(path, nuxt);
+              logger.error(`Could not set inline route rules in \`${relativePath}\` as it could not be mapped to a Nitro route.`);
               return;
             }
             inlineRules[glob] = extractedRule;
@@ -1181,8 +1451,7 @@ const pagesModule = defineNuxtModule({
           }
         } catch (e) {
           if (e.toString().includes("Error parsing route rules")) {
-            const relativePath = relative(nuxt.options.srcDir, path);
-            logger.error(`Error parsing route rules within \`~/${relativePath}\`. They should be JSON-serializable.`);
+            logger.error(`Error parsing route rules within \`${resolveToAlias(path, nuxt)}\`. They should be JSON-serializable.`);
           } else {
             logger.error(e);
           }
@@ -1208,7 +1477,7 @@ const pagesModule = defineNuxtModule({
         await updateRouteConfig?.();
       });
     }
-    const componentStubPath = await resolvePath$1(resolve(runtimeDir, "component-stub"));
+    const componentStubPath = await resolvePath(resolve(runtimeDir, "component-stub"));
     if (nuxt.options.test && nuxt.options.dev) {
       nuxt.hook("pages:extend", (routes) => {
         routes.push({
@@ -1226,7 +1495,7 @@ const pagesModule = defineNuxtModule({
           if (!rule.redirect) {
             continue;
           }
-          resolvedRoutes || (resolvedRoutes = routes.flatMap((route) => resolveRoutePaths(route)));
+          resolvedRoutes ||= routes.flatMap((route) => resolveRoutePaths(route));
           if (resolvedRoutes.includes(path)) {
             continue;
           }
@@ -1238,10 +1507,15 @@ const pagesModule = defineNuxtModule({
         }
       });
     }
+    const extraPageMetaExtractionKeys = nuxt.options?.experimental?.extraPageMetaExtractionKeys || [];
+    const extractedKeys = nuxt.options.future.compatibilityVersion === 4 ? [...defaultExtractionKeys, "middleware", ...extraPageMetaExtractionKeys] : ["middleware", ...extraPageMetaExtractionKeys];
     nuxt.hook("modules:done", () => {
       addBuildPlugin(PageMetaPlugin({
         dev: nuxt.options.dev,
-        sourcemap: !!nuxt.options.sourcemap.server || !!nuxt.options.sourcemap.client
+        sourcemap: !!nuxt.options.sourcemap.server || !!nuxt.options.sourcemap.client,
+        isPage,
+        routesPath: resolve(nuxt.options.buildDir, "routes.mjs"),
+        extractedKeys: nuxt.options.experimental.scanPageMeta ? extractedKeys : []
       }));
     });
     addPlugin(resolve(runtimeDir, "plugins/prefetch.client"));
@@ -1273,31 +1547,32 @@ const pagesModule = defineNuxtModule({
       filename: "routes.mjs",
       getContents({ app }) {
         if (!app.pages) {
-          return "export default []";
+          return ROUTES_HMR_CODE + "export default []";
         }
         const { routes, imports } = normalizeRoutes(app.pages, /* @__PURE__ */ new Set(), {
           serverComponentRuntime,
           clientComponentRuntime,
           overrideMeta: !!nuxt.options.experimental.scanPageMeta
         });
-        return [...imports, `export default ${routes}`].join("\n");
+        return ROUTES_HMR_CODE + [...imports, `export default ${routes}`].join("\n");
       }
     });
     addTemplate({
       filename: "pages.mjs",
       getContents: () => "export { START_LOCATION, useRoute } from 'vue-router'"
     });
-    nuxt.options.vite.resolve = nuxt.options.vite.resolve || {};
-    nuxt.options.vite.resolve.dedupe = nuxt.options.vite.resolve.dedupe || [];
+    nuxt.options.vite.resolve ||= {};
+    nuxt.options.vite.resolve.dedupe ||= [];
     nuxt.options.vite.resolve.dedupe.push("vue-router");
     addTemplate({
       filename: "router.options.mjs",
-      getContents: async () => {
-        const routerOptionsFiles = await resolveRouterOptions();
-        const configRouterOptions = genObjectFromRawEntries(Object.entries(nuxt.options.router.options).map(([key, value]) => [key, genString(value)]));
+      getContents: async ({ nuxt: nuxt2 }) => {
+        const routerOptionsFiles = await resolveRouterOptions(nuxt2, builtInRouterOptions);
+        const configRouterOptions = genObjectFromRawEntries(Object.entries(nuxt2.options.router.options).map(([key, value]) => [key, genString(value)]));
         return [
           ...routerOptionsFiles.map((file, index) => genImport(file.path, `routerOptions${index}`)),
           `const configRouterOptions = ${configRouterOptions}`,
+          `export const hashMode = ${[...routerOptionsFiles.filter((o) => o.path !== builtInRouterOptions).map((_, index) => `routerOptions${index}.hashMode`).reverse(), nuxt2.options.router.options.hashMode].join(" ?? ")}`,
           "export default {",
           "...configRouterOptions,",
           ...routerOptionsFiles.map((_, index) => `...routerOptions${index},`),
@@ -1307,17 +1582,25 @@ const pagesModule = defineNuxtModule({
     });
     addTypeTemplate({
       filename: "types/middleware.d.ts",
-      getContents: ({ nuxt: nuxt2, app }) => {
-        const composablesFile = relative(join(nuxt2.options.buildDir, "types"), resolve(runtimeDir, "composables"));
+      getContents: ({ app }) => {
         const namedMiddleware = app.middleware.filter((mw) => !mw.global);
         return [
           "import type { NavigationGuard } from 'vue-router'",
           `export type MiddlewareKey = ${namedMiddleware.map((mw) => genString(mw.name)).join(" | ") || "never"}`,
-          `declare module ${genString(composablesFile)} {`,
+          "declare module 'nuxt/app' {",
           "  interface PageMeta {",
           "    middleware?: MiddlewareKey | NavigationGuard | Array<MiddlewareKey | NavigationGuard>",
           "  }",
-          "}",
+          "}"
+        ].join("\n");
+      }
+    });
+    addTypeTemplate({
+      filename: "types/nitro-middleware.d.ts",
+      getContents: ({ app }) => {
+        const namedMiddleware = app.middleware.filter((mw) => !mw.global);
+        return [
+          `export type MiddlewareKey = ${namedMiddleware.map((mw) => genString(mw.name)).join(" | ") || "never"}`,
           "declare module 'nitropack' {",
           "  interface NitroRouteConfig {",
           "    appMiddleware?: MiddlewareKey | MiddlewareKey[] | Record<MiddlewareKey, boolean>",
@@ -1325,15 +1608,14 @@ const pagesModule = defineNuxtModule({
           "}"
         ].join("\n");
       }
-    });
+    }, { nuxt: true, nitro: true });
     addTypeTemplate({
       filename: "types/layouts.d.ts",
-      getContents: ({ nuxt: nuxt2, app }) => {
-        const composablesFile = relative(join(nuxt2.options.buildDir, "types"), resolve(runtimeDir, "composables"));
+      getContents: ({ app }) => {
         return [
           "import type { ComputedRef, MaybeRef } from 'vue'",
           `export type LayoutKey = ${Object.keys(app.layouts).map((name) => genString(name)).join(" | ") || "string"}`,
-          `declare module ${genString(composablesFile)} {`,
+          "declare module 'nuxt/app' {",
           "  interface PageMeta {",
           "    layout?: MaybeRef<LayoutKey | false> | ComputedRef<LayoutKey | false>",
           "  }",
@@ -1344,16 +1626,14 @@ const pagesModule = defineNuxtModule({
     if (nuxt.options.experimental.viewTransition) {
       addTypeTemplate({
         filename: "types/view-transitions.d.ts",
-        getContents: ({ nuxt: nuxt2 }) => {
-          const runtimeDir2 = resolve(distDir, "pages/runtime");
-          const composablesFile = relative(join(nuxt2.options.buildDir, "types"), resolve(runtimeDir2, "composables"));
+        getContents: () => {
           return [
-            "import type { ComputedRef, MaybeRef } from 'vue'",
-            `declare module ${genString(composablesFile)} {`,
+            "declare module 'nuxt/app' {",
             "  interface PageMeta {",
             "    viewTransition?: boolean | 'always'",
             "  }",
-            "}"
+            "}",
+            "export {}"
           ].join("\n");
         }
       });
@@ -1366,61 +1646,155 @@ const pagesModule = defineNuxtModule({
     });
   }
 });
-
-const components = ["NoScript", "Link", "Base", "Title", "Meta", "Style", "Head", "Html", "Body"];
-const metaModule = defineNuxtModule({
-  meta: {
-    name: "meta",
-    configKey: "unhead"
-  },
-  async setup(options, nuxt) {
-    const runtimeDir = resolve(distDir, "head/runtime");
-    nuxt.options.build.transpile.push("@unhead/vue");
-    const componentsPath = resolve(runtimeDir, "components");
-    for (const componentName of components) {
-      addComponent({
-        name: componentName,
-        filePath: componentsPath,
-        export: componentName,
-        // built-in that we do not expect the user to override
-        priority: 10,
-        // kebab case version of these tags is not valid
-        kebabName: componentName
-      });
+const ROUTES_HMR_CODE = (
+  /* js */
+  `
+if (import.meta.hot) {
+  import.meta.hot.accept((mod) => {
+    const router = import.meta.hot.data.router
+    const generateRoutes = import.meta.hot.data.generateRoutes
+    if (!router || !generateRoutes) {
+      import.meta.hot.invalidate('[nuxt] Cannot replace routes because there is no active router. Reloading.')
+      return
+    }
+    router.clearRoutes()
+    const routes = generateRoutes(mod.default || mod)
+    function addRoutes (routes) {
+      for (const route of routes) {
+        router.addRoute(route)
+      }
+      router.replace(router.currentRoute.value.fullPath)
+    }
+    if (routes && 'then' in routes) {
+      routes.then(addRoutes)
+    } else {
+      addRoutes(routes)
     }
-    if (!nuxt.options.dev) {
-      nuxt.options.optimization.treeShake.composables.client["@unhead/vue"] = [
-        "useServerHead",
-        "useServerSeoMeta",
-        "useServerHeadSafe"
-      ];
+  })
+}
+
+export function handleHotUpdate(_router, _generateRoutes) {
+  if (import.meta.hot) {
+    import.meta.hot.data ||= {}
+    import.meta.hot.data.router = _router
+    import.meta.hot.data.generateRoutes = _generateRoutes
+  }
+}
+`
+);
+
+const UNHEAD_LIB_RE = /node_modules[/\\](?:@unhead[/\\][^/\\]+|unhead)[/\\]/;
+function toImports(specifiers) {
+  return specifiers.map((specifier) => {
+    const imported = specifier.imported;
+    const isNamedImport = imported && imported.name !== specifier.local.name;
+    return isNamedImport ? `${imported.name} as ${specifier.local.name}` : specifier.local.name;
+  });
+}
+const UnheadVue = "@unhead/vue";
+const UnheadVueRE = /@unhead\/vue/;
+const UnheadImportsPlugin = (options) => createUnplugin(() => {
+  return {
+    name: "nuxt:head:unhead-imports",
+    enforce: "post",
+    transformInclude(id) {
+      id = normalize(id);
+      return (isJS(id) || isVue(id, { type: ["script"] })) && !id.startsWith("virtual:") && !id.startsWith(normalize(distDir)) && !UNHEAD_LIB_RE.test(id);
+    },
+    transform: {
+      filter: {
+        code: { include: UnheadVueRE }
+      },
+      handler(code, id) {
+        const s = new MagicString(code);
+        const importsToAdd = [];
+        parseAndWalk(code, id, function(node) {
+          if (node.type === "ImportDeclaration" && [UnheadVue, "#app/composables/head"].includes(String(node.source.value))) {
+            importsToAdd.push(...node.specifiers);
+            const { start, end } = node;
+            s.remove(start, end);
+          }
+        });
+        const importsFromUnhead = importsToAdd.filter((specifier) => unheadVueComposablesImports[UnheadVue].includes(specifier.imported?.name));
+        const importsFromHead = importsToAdd.filter((specifier) => !unheadVueComposablesImports[UnheadVue].includes(specifier.imported?.name));
+        if (importsFromUnhead.length) {
+          if (!normalize(id).includes("node_modules")) {
+            logger.warn(`You are importing from \`${UnheadVue}\` in \`./${relative(normalize(options.rootDir), normalize(id))}\`. Please import from \`#imports\` instead for full type safety.`);
+          }
+          s.prepend(`${genImport("#app/composables/head", toImports(importsFromUnhead))}
+`);
+        }
+        if (importsFromHead.length) {
+          s.prepend(`${genImport(UnheadVue, toImports(importsFromHead))}
+`);
+        }
+        if (s.hasChanged()) {
+          return {
+            code: s.toString(),
+            map: options.sourcemap ? s.generateMap({ hires: true }) : void 0
+          };
+        }
+      }
     }
-    addImportsSources({
-      from: "@unhead/vue",
-      // hard-coded for now we so don't support auto-imports on the deprecated composables
-      imports: [
-        "injectHead",
-        "useHead",
-        "useSeoMeta",
-        "useHeadSafe",
+  };
+});
+
+const components = ["NoScript", "Link", "Base", "Title", "Meta", "Style", "Head", "Html", "Body"];
+const metaModule = defineNuxtModule({
+  meta: {
+    name: "nuxt:meta",
+    configKey: "unhead"
+  },
+  setup(options, nuxt) {
+    const runtimeDir = resolve(distDir, "head/runtime");
+    nuxt.options.build.transpile.push("@unhead/vue");
+    const isNuxtV4 = nuxt.options._majorVersion === 4 || nuxt.options.future?.compatibilityVersion === 4;
+    const componentsPath = resolve(runtimeDir, "components");
+    for (const componentName of components) {
+      addComponent({
+        name: componentName,
+        filePath: componentsPath,
+        export: componentName,
+        // built-in that we do not expect the user to override
+        priority: 10,
+        // kebab case version of these tags is not valid
+        kebabName: componentName
+      });
+    }
+    if (!nuxt.options.dev) {
+      nuxt.options.optimization.treeShake.composables.client["@unhead/vue"] = [
         "useServerHead",
         "useServerSeoMeta",
         "useServerHeadSafe"
-      ]
-    });
-    const unheadVue = await tryResolveModule("@unhead/vue", nuxt.options.modulesDir) || "@unhead/vue";
+      ];
+    }
+    nuxt.options.alias["#unhead/composables"] = resolve(runtimeDir, "composables", isNuxtV4 ? "v4" : "v3");
+    addBuildPlugin(UnheadImportsPlugin({
+      sourcemap: !!nuxt.options.sourcemap.server,
+      rootDir: nuxt.options.rootDir
+    }));
+    const importPaths = nuxt.options.modulesDir.map((d) => directoryToURL(d));
+    const unheadPlugins = resolveModulePath("@unhead/vue/plugins", { try: true, from: importPaths }) || "@unhead/vue/plugins";
     if (nuxt.options.experimental.polyfillVueUseHead) {
-      nuxt.options.alias["@vueuse/head"] = unheadVue;
+      nuxt.options.alias["@vueuse/head"] = resolveModulePath("@unhead/vue", { try: true, from: importPaths }) || "@unhead/vue";
       addPlugin({ src: resolve(runtimeDir, "plugins/vueuse-head-polyfill") });
     }
     addTemplate({
-      filename: "unhead-plugins.mjs",
+      filename: "unhead-options.mjs",
       getContents() {
-        if (!nuxt.options.experimental.headNext) {
-          return "export default []";
+        if (isNuxtV4 && !options.legacy) {
+          return `
+export default {
+  disableDefaults: true,
+}`;
         }
-        return `import { CapoPlugin } from ${JSON.stringify(unheadVue)};
-export default import.meta.server ? [CapoPlugin({ track: true })] : [];`;
+        const disableCapoSorting = !nuxt.options.experimental.headNext;
+        return `import { DeprecationsPlugin, PromisesPlugin, TemplateParamsPlugin, AliasSortingPlugin } from ${JSON.stringify(unheadPlugins)};
+export default {
+  disableDefaults: true,
+  disableCapoSorting: ${Boolean(disableCapoSorting)},
+  plugins: [DeprecationsPlugin, PromisesPlugin, TemplateParamsPlugin, AliasSortingPlugin],
+}`;
       }
     });
     addTemplate({
@@ -1432,13 +1806,280 @@ export default import.meta.server ? [CapoPlugin({ track: true })] : [];`;
       }
     });
     nuxt.hooks.hook("nitro:config", (config) => {
-      config.virtual["#internal/unhead-plugins.mjs"] = () => nuxt.vfs["#build/unhead-plugins.mjs"];
+      config.virtual["#internal/unhead-options.mjs"] = () => nuxt.vfs["#build/unhead-options.mjs"];
       config.virtual["#internal/unhead.config.mjs"] = () => nuxt.vfs["#build/unhead.config.mjs"];
     });
     addPlugin({ src: resolve(runtimeDir, "plugins/unhead") });
   }
 });
 
+const commonPresets = [
+  // vue-demi (mocked)
+  defineUnimportPreset({
+    from: "vue-demi",
+    imports: [
+      "isVue2",
+      "isVue3"
+    ]
+  })
+];
+const granularAppPresets = [
+  {
+    from: "#app/components/nuxt-link",
+    imports: ["defineNuxtLink"]
+  },
+  {
+    imports: ["useNuxtApp", "tryUseNuxtApp", "defineNuxtPlugin", "definePayloadPlugin", "useRuntimeConfig", "defineAppConfig"],
+    from: "#app/nuxt"
+  },
+  {
+    imports: ["useAppConfig", "updateAppConfig"],
+    from: "#app/config"
+  },
+  {
+    imports: ["defineNuxtComponent"],
+    from: "#app/composables/component"
+  },
+  {
+    imports: ["useAsyncData", "useLazyAsyncData", "useNuxtData", "refreshNuxtData", "clearNuxtData"],
+    from: "#app/composables/asyncData"
+  },
+  {
+    imports: ["useHydration"],
+    from: "#app/composables/hydrate"
+  },
+  {
+    imports: ["callOnce"],
+    from: "#app/composables/once"
+  },
+  {
+    imports: ["useState", "clearNuxtState"],
+    from: "#app/composables/state"
+  },
+  {
+    imports: ["clearError", "createError", "isNuxtError", "showError", "useError"],
+    from: "#app/composables/error"
+  },
+  {
+    imports: ["useFetch", "useLazyFetch"],
+    from: "#app/composables/fetch"
+  },
+  {
+    imports: ["useCookie", "refreshCookie"],
+    from: "#app/composables/cookie"
+  },
+  {
+    imports: ["onPrehydrate", "prerenderRoutes", "useRequestHeader", "useRequestHeaders", "useResponseHeader", "useRequestEvent", "useRequestFetch", "setResponseStatus"],
+    from: "#app/composables/ssr"
+  },
+  {
+    imports: ["onNuxtReady"],
+    from: "#app/composables/ready"
+  },
+  {
+    imports: ["preloadComponents", "prefetchComponents", "preloadRouteComponents"],
+    from: "#app/composables/preload"
+  },
+  {
+    imports: ["abortNavigation", "addRouteMiddleware", "defineNuxtRouteMiddleware", "setPageLayout", "navigateTo", "useRoute", "useRouter"],
+    from: "#app/composables/router"
+  },
+  {
+    imports: ["isPrerendered", "loadPayload", "preloadPayload", "definePayloadReducer", "definePayloadReviver"],
+    from: "#app/composables/payload"
+  },
+  {
+    imports: ["useLoadingIndicator"],
+    from: "#app/composables/loading-indicator"
+  },
+  {
+    imports: ["getAppManifest", "getRouteRules"],
+    from: "#app/composables/manifest"
+  },
+  {
+    imports: ["reloadNuxtApp"],
+    from: "#app/composables/chunk"
+  },
+  {
+    imports: ["useRequestURL"],
+    from: "#app/composables/url"
+  },
+  {
+    imports: ["usePreviewMode"],
+    from: "#app/composables/preview"
+  },
+  {
+    imports: ["useRouteAnnouncer"],
+    from: "#app/composables/route-announcer"
+  },
+  {
+    imports: ["useRuntimeHook"],
+    from: "#app/composables/runtime-hook"
+  },
+  {
+    imports: ["useHead", "useHeadSafe", "useServerHeadSafe", "useServerHead", "useSeoMeta", "useServerSeoMeta", "injectHead"],
+    from: "#app/composables/head"
+  }
+];
+const scriptsStubsPreset = {
+  imports: [
+    "useScriptTriggerConsent",
+    "useScriptEventPage",
+    "useScriptTriggerElement",
+    "useScript",
+    "useScriptGoogleAnalytics",
+    "useScriptPlausibleAnalytics",
+    "useScriptCrisp",
+    "useScriptClarity",
+    "useScriptCloudflareWebAnalytics",
+    "useScriptFathomAnalytics",
+    "useScriptMatomoAnalytics",
+    "useScriptGoogleTagManager",
+    "useScriptGoogleAdsense",
+    "useScriptSegment",
+    "useScriptMetaPixel",
+    "useScriptXPixel",
+    "useScriptIntercom",
+    "useScriptHotjar",
+    "useScriptStripe",
+    "useScriptLemonSqueezy",
+    "useScriptVimeoPlayer",
+    "useScriptYouTubePlayer",
+    "useScriptGoogleMaps",
+    "useScriptNpm",
+    "useScriptUmamiAnalytics",
+    "useScriptSnapchatPixel",
+    "useScriptRybbitAnalytics"
+  ],
+  priority: -1,
+  from: "#app/composables/script-stubs"
+};
+const routerPreset = defineUnimportPreset({
+  imports: ["onBeforeRouteLeave", "onBeforeRouteUpdate"],
+  from: "#app/composables/router"
+});
+const vuePreset = defineUnimportPreset({
+  from: "vue",
+  imports: [
+    // <script setup>
+    "withCtx",
+    "withDirectives",
+    "withKeys",
+    "withMemo",
+    "withModifiers",
+    "withScopeId",
+    // Lifecycle
+    "onActivated",
+    "onBeforeMount",
+    "onBeforeUnmount",
+    "onBeforeUpdate",
+    "onDeactivated",
+    "onErrorCaptured",
+    "onMounted",
+    "onRenderTracked",
+    "onRenderTriggered",
+    "onServerPrefetch",
+    "onUnmounted",
+    "onUpdated",
+    // Reactivity
+    "computed",
+    "customRef",
+    "isProxy",
+    "isReactive",
+    "isReadonly",
+    "isRef",
+    "markRaw",
+    "proxyRefs",
+    "reactive",
+    "readonly",
+    "ref",
+    "shallowReactive",
+    "shallowReadonly",
+    "shallowRef",
+    "toRaw",
+    "toRef",
+    "toRefs",
+    "triggerRef",
+    "unref",
+    "watch",
+    "watchEffect",
+    "watchPostEffect",
+    "watchSyncEffect",
+    "onWatcherCleanup",
+    "isShallow",
+    // effect
+    "effect",
+    "effectScope",
+    "getCurrentScope",
+    "onScopeDispose",
+    // Component
+    "defineComponent",
+    "defineAsyncComponent",
+    "resolveComponent",
+    "getCurrentInstance",
+    "h",
+    "inject",
+    "hasInjectionContext",
+    "nextTick",
+    "provide",
+    "mergeModels",
+    "toValue",
+    "useModel",
+    "useAttrs",
+    "useCssModule",
+    "useCssVars",
+    "useSlots",
+    "useTransitionState",
+    "useId",
+    "useTemplateRef",
+    "useShadowRoot",
+    "useCssVars"
+  ]
+});
+const vueTypesPreset = defineUnimportPreset({
+  from: "vue",
+  type: true,
+  imports: [
+    "Component",
+    "ComponentPublicInstance",
+    "ComputedRef",
+    "DirectiveBinding",
+    "ExtractDefaultPropTypes",
+    "ExtractPropTypes",
+    "ExtractPublicPropTypes",
+    "InjectionKey",
+    "PropType",
+    "Ref",
+    "MaybeRef",
+    "MaybeRefOrGetter",
+    "VNode",
+    "WritableComputedRef"
+  ]
+});
+const appCompatPresets = [
+  {
+    imports: ["requestIdleCallback", "cancelIdleCallback"],
+    from: "#app/compat/idle-callback"
+  },
+  {
+    imports: ["setInterval"],
+    from: "#app/compat/interval"
+  }
+];
+const lazyHydrationMacroPreset = [
+  {
+    imports: ["defineLazyHydrationComponent"],
+    from: "#app/composables/lazy-hydration"
+  }
+];
+const defaultPresets = [
+  ...commonPresets,
+  ...granularAppPresets,
+  routerPreset,
+  vuePreset,
+  vueTypesPreset
+];
+
 const createImportMagicComments = (options) => {
   const { chunkName, prefetch, preload } = options;
   return [
@@ -1508,7 +2149,7 @@ const componentsIslandsTemplate = {
       component.mode === "server" && !components.some((c) => c.pascalName === component.pascalName && c.mode === "client")
     );
     const pageExports = pages?.filter((p) => p.mode === "server" && p.file && p.name).map((p) => {
-      return `"page:${p.name}": defineAsyncComponent(${genDynamicImport(p.file)}.then(c => c.default || c))`;
+      return `"page_${p.name}": defineAsyncComponent(${genDynamicImport(p.file)}.then(c => c.default || c))`;
     }) || [];
     return [
       "import { defineAsyncComponent } from 'vue'",
@@ -1529,20 +2170,32 @@ const componentsTypeTemplate = {
   filename: "components.d.ts",
   getContents: ({ app, nuxt }) => {
     const buildDir = nuxt.options.buildDir;
+    const serverPlaceholderPath = resolve(distDir, "app/components/server-placeholder");
     const componentTypes = app.components.filter((c) => !c.island).map((c) => {
       const type = `typeof ${genDynamicImport(isAbsolute(c.filePath) ? relative(buildDir, c.filePath).replace(NON_VUE_RE, "") : c.filePath.replace(NON_VUE_RE, ""), { wrapper: false })}['${c.export}']`;
+      const isServerOnly = c.mode === "server" && c.filePath !== serverPlaceholderPath && !app.components.some((other) => other.pascalName === c.pascalName && other.mode === "client");
       return [
         c.pascalName,
-        c.island || c.mode === "server" ? `IslandComponent<${type}>` : type
+        isServerOnly ? `IslandComponent<${type}>` : type
       ];
     });
     const islandType = "type IslandComponent<T extends DefineComponent> = T & DefineComponent<{}, {refresh: () => Promise<void>}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, SlotsType<{ fallback: { error: unknown } }>>";
     return `
 import type { DefineComponent, SlotsType } from 'vue'
 ${nuxt.options.experimental.componentIslands ? islandType : ""}
+type HydrationStrategies = {
+  hydrateOnVisible?: IntersectionObserverInit | true
+  hydrateOnIdle?: number | true
+  hydrateOnInteraction?: keyof HTMLElementEventMap | Array<keyof HTMLElementEventMap> | true
+  hydrateOnMediaQuery?: string
+  hydrateAfter?: number
+  hydrateWhen?: boolean
+  hydrateNever?: true
+}
+type LazyComponent<T> = (T & DefineComponent<HydrationStrategies, {}, {}, {}, {}, {}, {}, { hydrated: () => void }>)
 interface _GlobalComponents {
   ${componentTypes.map(([pascalName, type]) => `    '${pascalName}': ${type}`).join("\n")}
-  ${componentTypes.map(([pascalName, type]) => `    'Lazy${pascalName}': ${type}`).join("\n")}
+  ${componentTypes.map(([pascalName, type]) => `    'Lazy${pascalName}': LazyComponent<${type}>`).join("\n")}
 }
 
 declare module 'vue' {
@@ -1550,7 +2203,7 @@ declare module 'vue' {
 }
 
 ${componentTypes.map(([pascalName, type]) => `export const ${pascalName}: ${type}`).join("\n")}
-${componentTypes.map(([pascalName, type]) => `export const Lazy${pascalName}: ${type}`).join("\n")}
+${componentTypes.map(([pascalName, type]) => `export const Lazy${pascalName}: LazyComponent<${type}>`).join("\n")}
 
 export const componentNames: string[]
 `;
@@ -1575,19 +2228,20 @@ async function scanComponents(dirs, srcDir) {
       continue;
     }
     const resolvedNames = /* @__PURE__ */ new Map();
-    const files = (await globby(dir.pattern, { cwd: dir.path, ignore: dir.ignore })).sort();
+    const files = (await glob(dir.pattern, { cwd: dir.path, ignore: dir.ignore })).sort();
     if (files.length) {
-      const siblings = await readdir(dirname(dir.path)).catch(() => []);
+      const siblings = new Set(await readdir(dirname(dir.path)).catch(() => []));
       const directory = basename(dir.path);
-      if (!siblings.includes(directory)) {
+      if (!siblings.has(directory)) {
         const directoryLowerCase = directory.toLowerCase();
-        const caseCorrected = siblings.find((sibling) => sibling.toLowerCase() === directoryLowerCase);
-        if (caseCorrected) {
-          const nuxt = useNuxt();
-          const original = relative(nuxt.options.srcDir, dir.path);
-          const corrected = relative(nuxt.options.srcDir, join(dirname(dir.path), caseCorrected));
-          logger.warn(`Components not scanned from \`~/${corrected}\`. Did you mean to name the directory \`~/${original}\` instead?`);
-          continue;
+        for (const sibling of siblings) {
+          if (sibling.toLowerCase() === directoryLowerCase) {
+            const nuxt = useNuxt();
+            const original = resolveToAlias(dir.path, nuxt);
+            const corrected = resolveToAlias(join(dirname(dir.path), sibling), nuxt);
+            logger.warn(`Components not scanned from \`${corrected}\`. Did you mean to name the directory \`${original}\` instead?`);
+            break;
+          }
         }
       }
     }
@@ -1649,10 +2303,11 @@ async function scanComponents(dirs, srcDir) {
         component = await dir.extendComponent(component) || component;
       }
       if (!pascalName) {
-        logger.warn(`Component did not resolve to a file name in \`~/${relative(srcDir, filePath)}\`.`);
+        logger.warn(`Component did not resolve to a file name in \`${resolveToAlias(filePath)}\`.`);
         continue;
       }
-      const existingComponent = components.find((c) => c.pascalName === component.pascalName && ["all", component.mode].includes(c.mode));
+      const validModes = /* @__PURE__ */ new Set(["all", component.mode]);
+      const existingComponent = components.find((c) => c.pascalName === component.pascalName && validModes.has(c.mode));
       if (existingComponent) {
         const existingPriority = existingComponent.priority ?? 0;
         const newPriority = component.priority ?? 0;
@@ -1680,49 +2335,7 @@ function warnAboutDuplicateComponent(componentName, filePath, duplicatePath) {
 }
 const LAZY_COMPONENT_NAME_REGEX = /^Lazy(?=[A-Z])/;
 
-const CLIENT_FALLBACK_RE = /<(?:NuxtClientFallback|nuxt-client-fallback)(?: [^>]*)?>/;
-const CLIENT_FALLBACK_GLOBAL_RE = /<(NuxtClientFallback|nuxt-client-fallback)( [^>]*)?>/g;
-const UID_RE = / :?uid=/;
-const ClientFallbackAutoIdPlugin = (options) => createUnplugin(() => {
-  const exclude = options.transform?.exclude || [];
-  const include = options.transform?.include || [];
-  return {
-    name: "nuxt:client-fallback-auto-id",
-    enforce: "pre",
-    transformInclude(id) {
-      if (exclude.some((pattern) => pattern.test(id))) {
-        return false;
-      }
-      if (include.some((pattern) => pattern.test(id))) {
-        return true;
-      }
-      return isVue(id);
-    },
-    transform(code, id) {
-      if (!CLIENT_FALLBACK_RE.test(code)) {
-        return;
-      }
-      const s = new MagicString(code);
-      const relativeID = isAbsolute(id) ? relative(options.rootDir, id) : id;
-      let count = 0;
-      s.replace(CLIENT_FALLBACK_GLOBAL_RE, (full, name, attrs) => {
-        count++;
-        if (UID_RE.test(attrs)) {
-          return full;
-        }
-        return `<${name} :uid="'${hash(relativeID)}' + JSON.stringify($props) + '${count}'"  ${attrs ?? ""}>`;
-      });
-      if (s.hasChanged()) {
-        return {
-          code: s.toString(),
-          map: options.sourcemap ? s.generateMap({ hires: true }) : void 0
-        };
-      }
-    }
-  };
-});
-
-const REPLACE_COMPONENT_TO_DIRECT_IMPORT_RE = /(?<=[ (])_?resolveComponent\(\s*["'](lazy-|Lazy(?=[A-Z]))?([^'"]*)["'][^)]*\)/g;
+const REPLACE_COMPONENT_TO_DIRECT_IMPORT_RE = /(?<=[\s(=;])_?resolveComponent\s*\(\s*(?<quote>["'`])(?<lazy>lazy-|Lazy(?=[A-Z]))?(?<modifier>Idle|Visible|idle-|visible-|Interaction|interaction-|MediaQuery|media-query-|If|if-|Never|never-|Time|time-)?(?<name>[^'"`]*)\k<quote>[^)]*\)/g;
 const LoaderPlugin = (options) => createUnplugin(() => {
   const exclude = options.transform?.exclude || [];
   const include = options.transform?.include || [];
@@ -1745,16 +2358,18 @@ const LoaderPlugin = (options) => createUnplugin(() => {
       const imports = /* @__PURE__ */ new Set();
       const map = /* @__PURE__ */ new Map();
       const s = new MagicString(code);
-      s.replace(REPLACE_COMPONENT_TO_DIRECT_IMPORT_RE, (full, lazy, name) => {
-        const component = findComponent(components, name, options.mode);
+      s.replace(REPLACE_COMPONENT_TO_DIRECT_IMPORT_RE, (full, ...args) => {
+        const { lazy, modifier, name } = args.pop();
+        const normalComponent = findComponent$1(components, name, options.mode);
+        const modifierComponent = !normalComponent && modifier ? findComponent$1(components, modifier + name, options.mode) : null;
+        const component = normalComponent || modifierComponent;
         if (component) {
           const internalInstall = component._internal_install;
           if (internalInstall && nuxt?.options.test === false) {
             if (!nuxt.options.dev) {
-              const relativePath = relative(nuxt.options.rootDir, id);
-              throw new Error(`[nuxt] \`~/${relativePath}\` is using \`${component.pascalName}\` which requires \`${internalInstall}\``);
+              throw new Error(`[nuxt] \`${resolveToAlias(id, nuxt)}\` is using \`${component.pascalName}\` which requires \`${internalInstall}\``);
             }
-            import('./chunks/features.mjs').then(({ installNuxtModule }) => installNuxtModule(internalInstall));
+            installNuxtModule(internalInstall);
           }
           let identifier = map.get(component) || `__nuxt_component_${num++}`;
           map.set(component, identifier);
@@ -1773,9 +2388,58 @@ const LoaderPlugin = (options) => createUnplugin(() => {
             identifier += "_client";
           }
           if (lazy) {
-            imports.add(genImport("vue", [{ name: "defineAsyncComponent", as: "__defineAsyncComponent" }]));
-            identifier += "_lazy";
-            imports.add(`const ${identifier} = __defineAsyncComponent(${genDynamicImport(component.filePath, { interopDefault: false })}.then(c => c.${component.export ?? "default"} || c)${isClientOnly ? ".then(c => createClientOnly(c))" : ""})`);
+            const dynamicImport = `${genDynamicImport(component.filePath, { interopDefault: false })}.then(c => c.${component.export ?? "default"} || c)`;
+            if (modifier && normalComponent) {
+              const relativePath = relative(options.srcDir, component.filePath);
+              switch (modifier) {
+                case "Visible":
+                case "visible-":
+                  imports.add(genImport(options.clientDelayedComponentRuntime, [{ name: "createLazyVisibleComponent" }]));
+                  identifier += "_lazy_visible";
+                  imports.add(`const ${identifier} = createLazyVisibleComponent(${JSON.stringify(relativePath)}, ${dynamicImport})`);
+                  break;
+                case "Interaction":
+                case "interaction-":
+                  imports.add(genImport(options.clientDelayedComponentRuntime, [{ name: "createLazyInteractionComponent" }]));
+                  identifier += "_lazy_event";
+                  imports.add(`const ${identifier} = createLazyInteractionComponent(${JSON.stringify(relativePath)}, ${dynamicImport})`);
+                  break;
+                case "Idle":
+                case "idle-":
+                  imports.add(genImport(options.clientDelayedComponentRuntime, [{ name: "createLazyIdleComponent" }]));
+                  identifier += "_lazy_idle";
+                  imports.add(`const ${identifier} = createLazyIdleComponent(${JSON.stringify(relativePath)}, ${dynamicImport})`);
+                  break;
+                case "MediaQuery":
+                case "media-query-":
+                  imports.add(genImport(options.clientDelayedComponentRuntime, [{ name: "createLazyMediaQueryComponent" }]));
+                  identifier += "_lazy_media";
+                  imports.add(`const ${identifier} = createLazyMediaQueryComponent(${JSON.stringify(relativePath)}, ${dynamicImport})`);
+                  break;
+                case "If":
+                case "if-":
+                  imports.add(genImport(options.clientDelayedComponentRuntime, [{ name: "createLazyIfComponent" }]));
+                  identifier += "_lazy_if";
+                  imports.add(`const ${identifier} = createLazyIfComponent(${JSON.stringify(relativePath)}, ${dynamicImport})`);
+                  break;
+                case "Never":
+                case "never-":
+                  imports.add(genImport(options.clientDelayedComponentRuntime, [{ name: "createLazyNeverComponent" }]));
+                  identifier += "_lazy_never";
+                  imports.add(`const ${identifier} = createLazyNeverComponent(${JSON.stringify(relativePath)}, ${dynamicImport})`);
+                  break;
+                case "Time":
+                case "time-":
+                  imports.add(genImport(options.clientDelayedComponentRuntime, [{ name: "createLazyTimeComponent" }]));
+                  identifier += "_lazy_time";
+                  imports.add(`const ${identifier} = createLazyTimeComponent(${JSON.stringify(relativePath)}, ${dynamicImport})`);
+                  break;
+              }
+            } else {
+              imports.add(genImport("vue", [{ name: "defineAsyncComponent", as: "__defineAsyncComponent" }]));
+              identifier += "_lazy";
+              imports.add(`const ${identifier} = __defineAsyncComponent(${dynamicImport}${isClientOnly ? ".then(c => createClientOnly(c))" : ""})`);
+            }
           } else {
             imports.add(genImport(component.filePath, [{ name: component._raw ? "default" : component.export, as: identifier }]));
             if (isClientOnly) {
@@ -1799,9 +2463,10 @@ const LoaderPlugin = (options) => createUnplugin(() => {
     }
   };
 });
-function findComponent(components, name, mode) {
+function findComponent$1(components, name, mode) {
   const id = pascalCase(name).replace(QUOTE_RE, "");
-  const component = components.find((component2) => id === component2.pascalName && ["all", mode, void 0].includes(component2.mode));
+  const validModes = /* @__PURE__ */ new Set(["all", mode, void 0]);
+  const component = components.find((component2) => id === component2.pascalName && validModes.has(component2.mode));
   if (component) {
     return component;
   }
@@ -1812,9 +2477,9 @@ function findComponent(components, name, mode) {
   return otherModeComponent;
 }
 
-const SCRIPT_RE = /<script[^>]*>/gi;
+const SCRIPT_RE$2 = /<script[^>]*>/gi;
 const HAS_SLOT_OR_CLIENT_RE = /<slot[^>]*>|nuxt-client/;
-const TEMPLATE_RE = /<template>([\s\S]*)<\/template>/;
+const TEMPLATE_RE$1 = /<template>([\s\S]*)<\/template>/;
 const NUXTCLIENT_ATTR_RE = /\s:?nuxt-client(="[^"]*")?/g;
 const IMPORT_CODE = "\nimport { mergeProps as __mergeProps } from 'vue'\nimport { vforToArray as __vforToArray } from '#app/components/utils'\nimport NuxtTeleportIslandComponent from '#app/components/nuxt-teleport-island-component'\nimport NuxtTeleportSsrSlot from '#app/components/nuxt-teleport-island-slot'";
 const EXTRACTED_ATTRS_RE = /v-(?:if|else-if|else)(="[^"]*")?/g;
@@ -1841,83 +2506,86 @@ const IslandsTransformPlugin = (options) => createUnplugin((_options, meta) => {
       const { pathname } = parseURL(decodeURIComponent(pathToFileURL(id).href));
       return islands.some((c) => c.filePath === pathname);
     },
-    async transform(code, id) {
-      if (!HAS_SLOT_OR_CLIENT_RE.test(code)) {
-        return;
-      }
-      const template = code.match(TEMPLATE_RE);
-      if (!template) {
-        return;
-      }
-      const startingIndex = template.index || 0;
-      const s = new MagicString(code);
-      if (!code.match(SCRIPT_RE)) {
-        s.prepend("<script setup>" + IMPORT_CODE + "<\/script>");
-      } else {
-        s.replace(SCRIPT_RE, (full) => {
-          return full + IMPORT_CODE;
-        });
-      }
-      let hasNuxtClient = false;
-      const ast = parse$1(template[0]);
-      await walk$1(ast, (node) => {
-        if (node.type !== ELEMENT_NODE) {
+    transform: {
+      filter: {
+        code: {
+          include: [HAS_SLOT_OR_CLIENT_RE]
+        }
+      },
+      async handler(code, id) {
+        const template = code.match(TEMPLATE_RE$1);
+        if (!template) {
           return;
         }
-        if (node.name === "slot") {
-          const { attributes: attributes2, children, loc: loc2 } = node;
-          const slotName = attributes2.name ?? "default";
-          if (attributes2.name) {
-            delete attributes2.name;
+        const startingIndex = template.index || 0;
+        const s = new MagicString(code);
+        if (!code.match(SCRIPT_RE$2)) {
+          s.prepend("<script setup>" + IMPORT_CODE + "<\/script>");
+        } else {
+          s.replace(SCRIPT_RE$2, (full) => {
+            return full + IMPORT_CODE;
+          });
+        }
+        let hasNuxtClient = false;
+        const ast = parse(template[0]);
+        await walk$1(ast, (node) => {
+          if (node.type !== ELEMENT_NODE) {
+            return;
           }
-          if (attributes2["v-bind"]) {
-            attributes2._bind = extractAttributes(attributes2, ["v-bind"])["v-bind"];
+          if (node.name === "slot") {
+            const { attributes: attributes2, children, loc: loc2 } = node;
+            const slotName = attributes2.name ?? "default";
+            if (attributes2.name) {
+              delete attributes2.name;
+            }
+            if (attributes2["v-bind"]) {
+              attributes2._bind = extractAttributes(attributes2, ["v-bind"])["v-bind"];
+            }
+            const teleportAttributes = extractAttributes(attributes2, ["v-if", "v-else-if", "v-else"]);
+            const bindings = getPropsToString(attributes2);
+            s.appendLeft(startingIndex + loc2[0].start, `<NuxtTeleportSsrSlot${attributeToString(teleportAttributes)} name="${slotName}" :props="${bindings}">`);
+            if (children.length) {
+              const attrString = attributeToString(attributes2);
+              const slice = code.slice(startingIndex + loc2[0].end, startingIndex + loc2[1].start).replaceAll(KEY_RE, "");
+              s.overwrite(startingIndex + loc2[0].start, startingIndex + loc2[1].end, `<slot${attrString.replaceAll(EXTRACTED_ATTRS_RE, "")}/><template #fallback>${attributes2["v-for"] ? wrapWithVForDiv(slice, attributes2["v-for"]) : slice}</template>`);
+            } else {
+              s.overwrite(startingIndex + loc2[0].start, startingIndex + loc2[0].end, code.slice(startingIndex + loc2[0].start, startingIndex + loc2[0].end).replaceAll(EXTRACTED_ATTRS_RE, ""));
+            }
+            s.appendRight(startingIndex + loc2[1].end, "</NuxtTeleportSsrSlot>");
+            return;
           }
-          const teleportAttributes = extractAttributes(attributes2, ["v-if", "v-else-if", "v-else"]);
-          const bindings = getPropsToString(attributes2);
-          s.appendLeft(startingIndex + loc2[0].start, `<NuxtTeleportSsrSlot${attributeToString(teleportAttributes)} name="${slotName}" :props="${bindings}">`);
-          if (children.length) {
-            const attrString = attributeToString(attributes2);
-            const slice = code.slice(startingIndex + loc2[0].end, startingIndex + loc2[1].start).replaceAll(KEY_RE, "");
-            s.overwrite(startingIndex + loc2[0].start, startingIndex + loc2[1].end, `<slot${attrString.replaceAll(EXTRACTED_ATTRS_RE, "")}/><template #fallback>${attributes2["v-for"] ? wrapWithVForDiv(slice, attributes2["v-for"]) : slice}</template>`);
-          } else {
-            s.overwrite(startingIndex + loc2[0].start, startingIndex + loc2[0].end, code.slice(startingIndex + loc2[0].start, startingIndex + loc2[0].end).replaceAll(EXTRACTED_ATTRS_RE, ""));
+          if (!("nuxt-client" in node.attributes) && !(":nuxt-client" in node.attributes)) {
+            return;
+          }
+          hasNuxtClient = true;
+          if (!isVite || !options.selectiveClient) {
+            return;
+          }
+          const { loc, attributes } = node;
+          const attributeValue = attributes[":nuxt-client"] || attributes["nuxt-client"] || "true";
+          const wrapperAttributes = extractAttributes(attributes, ["v-if", "v-else-if", "v-else"]);
+          let startTag = code.slice(startingIndex + loc[0].start, startingIndex + loc[0].end).replace(NUXTCLIENT_ATTR_RE, "");
+          if (wrapperAttributes) {
+            startTag = startTag.replaceAll(EXTRACTED_ATTRS_RE, "");
+          }
+          s.appendLeft(startingIndex + loc[0].start, `<NuxtTeleportIslandComponent${attributeToString(wrapperAttributes)} :nuxt-client="${attributeValue}">`);
+          s.overwrite(startingIndex + loc[0].start, startingIndex + loc[0].end, startTag);
+          s.appendRight(startingIndex + loc[1].end, "</NuxtTeleportIslandComponent>");
+        });
+        if (hasNuxtClient) {
+          if (!options.selectiveClient) {
+            console.warn(`The \`nuxt-client\` attribute and client components within islands are only supported when \`experimental.componentIslands.selectiveClient\` is enabled. file: ${id}`);
+          } else if (!isVite) {
+            console.warn(`The \`nuxt-client\` attribute and client components within islands are only supported with Vite. file: ${id}`);
           }
-          s.appendRight(startingIndex + loc2[1].end, "</NuxtTeleportSsrSlot>");
-          return;
-        }
-        if (!("nuxt-client" in node.attributes) && !(":nuxt-client" in node.attributes)) {
-          return;
-        }
-        hasNuxtClient = true;
-        if (!isVite || !options.selectiveClient) {
-          return;
         }
-        const { loc, attributes } = node;
-        const attributeValue = attributes[":nuxt-client"] || attributes["nuxt-client"] || "true";
-        const uid = hash(id + node.loc[0].start + node.loc[0].end);
-        const wrapperAttributes = extractAttributes(attributes, ["v-if", "v-else-if", "v-else"]);
-        let startTag = code.slice(startingIndex + loc[0].start, startingIndex + loc[0].end).replace(NUXTCLIENT_ATTR_RE, "");
-        if (wrapperAttributes) {
-          startTag = startTag.replaceAll(EXTRACTED_ATTRS_RE, "");
-        }
-        s.appendLeft(startingIndex + loc[0].start, `<NuxtTeleportIslandComponent${attributeToString(wrapperAttributes)} to="${node.name}-${uid}" :nuxt-client="${attributeValue}">`);
-        s.overwrite(startingIndex + loc[0].start, startingIndex + loc[0].end, startTag);
-        s.appendRight(startingIndex + loc[1].end, "</NuxtTeleportIslandComponent>");
-      });
-      if (hasNuxtClient) {
-        if (!options.selectiveClient) {
-          console.warn(`The \`nuxt-client\` attribute and client components within islands are only supported when \`experimental.componentIslands.selectiveClient\` is enabled. file: ${id}`);
-        } else if (!isVite) {
-          console.warn(`The \`nuxt-client\` attribute and client components within islands are only supported with Vite. file: ${id}`);
+        if (s.hasChanged()) {
+          return {
+            code: s.toString(),
+            map: s.generateMap({ source: id, includeContent: true })
+          };
         }
       }
-      if (s.hasChanged()) {
-        return {
-          code: s.toString(),
-          map: s.generateMap({ source: id, includeContent: true })
-        };
-      }
     }
   };
 });
@@ -1950,58 +2618,73 @@ function getPropsToString(bindings) {
     return `__vforToArray(${vfor[1]}).map(${vfor[0]} => (${data}))`;
   }
 }
-const ComponentsChunkPlugin = createUnplugin((options) => {
-  const { buildDir } = options;
-  return {
-    name: "nuxt:components-chunk",
-    vite: {
-      async config(config) {
-        const components = options.getComponents();
-        config.build = defu$1(config.build, {
-          rollupOptions: {
-            input: {},
-            output: {}
-          }
-        });
-        const rollupOptions = config.build.rollupOptions;
-        if (typeof rollupOptions.input === "string") {
-          rollupOptions.input = { entry: rollupOptions.input };
-        } else if (typeof rollupOptions.input === "object" && Array.isArray(rollupOptions.input)) {
-          rollupOptions.input = rollupOptions.input.reduce((acc, input) => {
-            acc[input] = input;
-            return acc;
-          }, {});
-        }
-        rollupOptions.preserveEntrySignatures = "allow-extension";
-        for (const component of components) {
-          if (component.mode === "client" || component.mode === "all") {
-            rollupOptions.input[component.pascalName] = await resolvePath$1(component.filePath);
+const COMPONENT_CHUNK_ID = `#build/component-chunk`;
+const COMPONENT_CHUNK_RESOLVED_ID = "\0nuxt-component-chunk";
+const ComponentsChunkPlugin = (options) => {
+  const chunkIds = /* @__PURE__ */ new Map();
+  const paths = /* @__PURE__ */ new Map();
+  return [
+    {
+      name: "nuxt:components-chunk:client",
+      apply: () => !options.dev,
+      applyToEnvironment: (environment) => environment.name === "client",
+      buildStart() {
+        for (const c of options.getComponents()) {
+          if (!c.filePath || c.mode === "server") {
+            continue;
           }
+          chunkIds.set(c.pascalName, this.emitFile({
+            type: "chunk",
+            name: `${c.pascalName}-chunk.mjs`,
+            id: c.filePath,
+            preserveSignature: "strict"
+          }));
         }
       },
-      async generateBundle(_opts, bundle) {
-        const components = options.getComponents().filter((c) => c.mode === "client" || c.mode === "all");
-        const pathAssociation = {};
-        for (const [chunkPath, chunkInfo] of Object.entries(bundle)) {
-          if (chunkInfo.type !== "chunk") {
-            continue;
+      generateBundle(_, bundle) {
+        const ids = /* @__PURE__ */ new Set();
+        for (const [name, id] of chunkIds.entries()) {
+          const filename = this.getFileName(id);
+          ids.add(filename);
+          paths.set(name, filename);
+        }
+        for (const chunk of Object.values(bundle)) {
+          if (chunk.type === "chunk") {
+            if (ids.has(chunk.fileName)) {
+              chunk.isEntry = false;
+            }
+          }
+        }
+      }
+    },
+    {
+      name: "nuxt:components-chunk:server",
+      resolveId: {
+        order: "pre",
+        handler(id) {
+          if (id === COMPONENT_CHUNK_ID) {
+            return COMPONENT_CHUNK_RESOLVED_ID;
           }
-          for (const component of components) {
-            if (chunkInfo.facadeModuleId && chunkInfo.exports.length > 0) {
-              const { pathname } = parseURL(decodeURIComponent(pathToFileURL(chunkInfo.facadeModuleId).href));
-              const isPath = await resolvePath$1(component.filePath) === pathname;
-              if (isPath) {
-                chunkInfo.isEntry = false;
-                pathAssociation[component.pascalName] = chunkPath;
+        }
+      },
+      load(id) {
+        if (id === COMPONENT_CHUNK_RESOLVED_ID) {
+          if (options.dev) {
+            const filePaths = {};
+            for (const c of options.getComponents()) {
+              if (!c.filePath || c.mode === "server") {
+                continue;
               }
+              filePaths[c.pascalName] = `@fs/${c.filePath}`;
             }
+            return `export default ${genObjectFromRawEntries(Object.entries(filePaths).map(([name, path]) => [name, genString(path)]))}`;
           }
+          return `export default ${genObjectFromRawEntries(Array.from(paths.entries()).map(([name, id2]) => [name, genString("/" + id2)]))}`;
         }
-        fs.writeFileSync(join(buildDir, "components-chunk.mjs"), `export const paths = ${JSON.stringify(pathAssociation, null, 2)}`);
       }
     }
-  };
-});
+  ];
+};
 
 const COMPONENT_QUERY_RE = /[?&]nuxt_component=/;
 function TransformPlugin$1(nuxt, options) {
@@ -2017,9 +2700,10 @@ function TransformPlugin$1(nuxt, options) {
   });
   function getComponentsImports() {
     const components = options.getComponents(options.mode);
+    const clientOrServerModes = /* @__PURE__ */ new Set(["client", "server"]);
     return components.flatMap((c) => {
       const withMode = (mode2) => mode2 ? `${c.filePath}${c.filePath.includes("?") ? "&" : "?"}nuxt_component=${mode2}&nuxt_component_name=${c.pascalName}&nuxt_component_export=${c.export || "default"}` : c.filePath;
-      const mode = !c._raw && c.mode && ["client", "server"].includes(c.mode) ? c.mode : void 0;
+      const mode = !c._raw && c.mode && clientOrServerModes.has(c.mode) ? c.mode : void 0;
       return [
         {
           as: c.pascalName,
@@ -2039,7 +2723,7 @@ function TransformPlugin$1(nuxt, options) {
     enforce: "post",
     transformInclude(id) {
       id = normalize(id);
-      return id.startsWith("virtual:") || id.startsWith("\0virtual:") || id.startsWith(nuxt.options.buildDir) || !isIgnored(id);
+      return id.startsWith("virtual:") || id.startsWith("\0virtual:") || id.startsWith(nuxt.options.buildDir) || !isIgnored(id, void 0, nuxt);
     },
     async transform(code, id) {
       if (COMPONENT_QUERY_RE.test(id)) {
@@ -2111,7 +2795,6 @@ function TransformPlugin$1(nuxt, options) {
 const SSR_RENDER_RE = /ssrRenderComponent/;
 const PLACEHOLDER_EXACT_RE = /^(?:fallback|placeholder)$/;
 const CLIENT_ONLY_NAME_RE = /^(?:_unref\()?(?:_component_)?(?:Lazy|lazy_)?(?:client_only|ClientOnly\)?)$/;
-const PARSER_OPTIONS = { sourceType: "module", ecmaVersion: "latest" };
 const TreeShakeTemplatePlugin = (options) => createUnplugin(() => {
   const regexpMap = /* @__PURE__ */ new WeakMap();
   return {
@@ -2121,7 +2804,7 @@ const TreeShakeTemplatePlugin = (options) => createUnplugin(() => {
       const { pathname } = parseURL(decodeURIComponent(pathToFileURL(id).href));
       return pathname.endsWith(".vue");
     },
-    transform(code) {
+    transform(code, id) {
       const components = options.getComponents();
       if (!regexpMap.has(components)) {
         const serverPlaceholderPath = resolve(distDir, "app/components/server-placeholder");
@@ -2133,50 +2816,48 @@ const TreeShakeTemplatePlugin = (options) => createUnplugin(() => {
       if (!COMPONENTS_RE.test(code)) {
         return;
       }
-      const codeAst = this.parse(code, PARSER_OPTIONS);
       const componentsToRemoveSet = /* @__PURE__ */ new Set();
-      walk(codeAst, {
-        enter: (_node) => {
-          const node = _node;
-          if (isSsrRender(node)) {
-            const [componentCall, _, children] = node.arguments;
-            if (!componentCall) {
-              return;
-            }
-            if (componentCall.type === "Identifier" || componentCall.type === "MemberExpression" || componentCall.type === "CallExpression") {
-              const componentName = getComponentName(node);
-              const isClientComponent = COMPONENTS_IDENTIFIERS_RE.test(componentName);
-              const isClientOnlyComponent = CLIENT_ONLY_NAME_RE.test(componentName);
-              if (isClientComponent && children?.type === "ObjectExpression") {
-                const slotsToRemove = isClientOnlyComponent ? children.properties.filter((prop) => prop.type === "Property" && prop.key.type === "Identifier" && !PLACEHOLDER_EXACT_RE.test(prop.key.name)) : children.properties;
-                for (const slot of slotsToRemove) {
-                  s.remove(slot.start, slot.end + 1);
-                  const removedCode = `({${code.slice(slot.start, slot.end + 1)}})`;
-                  const currentCodeAst = this.parse(s.toString(), PARSER_OPTIONS);
-                  walk(this.parse(removedCode, PARSER_OPTIONS), {
-                    enter: (_node2) => {
-                      const node2 = _node2;
-                      if (isSsrRender(node2)) {
-                        const name = getComponentName(node2);
-                        const nameToRemove = isComponentNotCalledInSetup(currentCodeAst, name);
-                        if (nameToRemove) {
-                          componentsToRemoveSet.add(nameToRemove);
-                        }
-                      }
-                    }
-                  });
-                }
+      const { program: ast } = parseAndWalk(code, id, (node) => {
+        if (!isSsrRender(node)) {
+          return;
+        }
+        const [componentCall, _, children] = node.arguments;
+        if (!componentCall) {
+          return;
+        }
+        if (componentCall.type === "Identifier" || componentCall.type === "MemberExpression" || componentCall.type === "CallExpression") {
+          const componentName = getComponentName(node);
+          if (!componentName || !COMPONENTS_IDENTIFIERS_RE.test(componentName) || children?.type !== "ObjectExpression") {
+            return;
+          }
+          const isClientOnlyComponent = CLIENT_ONLY_NAME_RE.test(componentName);
+          const slotsToRemove = isClientOnlyComponent ? children.properties.filter((prop) => prop.type === "Property" && prop.key.type === "Identifier" && !PLACEHOLDER_EXACT_RE.test(prop.key.name)) : children.properties;
+          for (const slot of slotsToRemove) {
+            s.remove(slot.start, slot.end + 1);
+            const removedCode = `({${code.slice(slot.start, slot.end + 1)}})`;
+            const currentState = s.toString();
+            parseAndWalk(removedCode, id, (node2) => {
+              if (!isSsrRender(node2)) {
+                return;
               }
-            }
+              const name = getComponentName(node2);
+              if (!name) {
+                return;
+              }
+              const nameToRemove = isComponentNotCalledInSetup(currentState, id, name);
+              if (nameToRemove) {
+                componentsToRemoveSet.add(nameToRemove);
+              }
+            });
           }
         }
       });
       const componentsToRemove = [...componentsToRemoveSet];
       const removedNodes = /* @__PURE__ */ new WeakSet();
       for (const componentName of componentsToRemove) {
-        removeImportDeclaration(codeAst, componentName, s);
-        removeVariableDeclarator(codeAst, componentName, s, removedNodes);
-        removeFromSetupReturn(codeAst, componentName, s);
+        removeImportDeclaration(ast, componentName, s);
+        removeVariableDeclarator(ast, componentName, s, removedNodes);
+        removeFromSetupReturn(ast, componentName, s);
       }
       if (s.hasChanged()) {
         return {
@@ -2195,7 +2876,7 @@ function removeFromSetupReturn(codeAst, name, magicString) {
         this.skip();
       } else if (node.type === "Property" && node.key.type === "Identifier" && node.key.name === "setup" && (node.value.type === "FunctionExpression" || node.value.type === "ArrowFunctionExpression")) {
         walkedInSetup = true;
-        if (node.value.body.type === "BlockStatement") {
+        if (node.value.body?.type === "BlockStatement") {
           const returnStatement = node.value.body.body.find((statement) => statement.type === "ReturnStatement");
           if (returnStatement && returnStatement.argument?.type === "ObjectExpression") {
             removePropertyFromObject(returnStatement.argument, name, magicString);
@@ -2227,69 +2908,73 @@ function isSsrRender(node) {
 }
 function removeImportDeclaration(ast, importName, magicString) {
   for (const node of ast.body) {
-    if (node.type === "ImportDeclaration") {
-      const specifier = node.specifiers.find((s) => s.local.name === importName);
-      if (specifier) {
-        if (node.specifiers.length > 1) {
-          const specifierIndex = node.specifiers.findIndex((s) => s.local.name === importName);
-          if (specifierIndex > -1) {
-            magicString.remove(node.specifiers[specifierIndex].start, node.specifiers[specifierIndex].end + 1);
-            node.specifiers.splice(specifierIndex, 1);
-          }
-        } else {
-          magicString.remove(node.start, node.end);
-        }
-        return true;
+    if (node.type !== "ImportDeclaration" || !node.specifiers) {
+      continue;
+    }
+    const specifierIndex = node.specifiers.findIndex((s) => s.local.name === importName);
+    if (specifierIndex > -1) {
+      if (node.specifiers.length > 1) {
+        const specifier = node.specifiers[specifierIndex];
+        magicString.remove(specifier.start, specifier.end + 1);
+        node.specifiers.splice(specifierIndex, 1);
+      } else {
+        magicString.remove(node.start, node.end);
       }
+      return true;
     }
   }
   return false;
 }
-function isComponentNotCalledInSetup(codeAst, name) {
-  if (name) {
-    let found = false;
-    walk(codeAst, {
-      enter(node) {
-        if (node.type === "Property" && node.key.type === "Identifier" && node.value.type === "FunctionExpression" && node.key.name === "setup" || node.type === "FunctionDeclaration" && (node.id?.name === "_sfc_ssrRender" || node.id?.name === "ssrRender")) {
-          walk(node, {
-            enter(node2) {
-              if (found || node2.type === "VariableDeclaration") {
-                this.skip();
-              } else if (node2.type === "Identifier" && node2.name === name) {
-                found = true;
-              } else if (node2.type === "MemberExpression") {
-                found = node2.property.type === "Literal" && node2.property.value === name || node2.property.type === "Identifier" && node2.property.name === name;
-              }
-            }
-          });
+function isComponentNotCalledInSetup(code, id, name) {
+  if (!name) {
+    return;
+  }
+  let found = false;
+  parseAndWalk(code, id, function(node) {
+    if (node.type === "Property" && node.key.type === "Identifier" && node.value.type === "FunctionExpression" && node.key.name === "setup" || node.type === "FunctionDeclaration" && (node.id?.name === "_sfc_ssrRender" || node.id?.name === "ssrRender")) {
+      walk(node, {
+        enter(node2) {
+          if (found || node2.type === "VariableDeclaration") {
+            this.skip();
+          } else if (node2.type === "Identifier" && node2.name === name) {
+            found = true;
+          } else if (node2.type === "MemberExpression") {
+            found = node2.property.type === "Literal" && node2.property.value === name || node2.property.type === "Identifier" && node2.property.name === name;
+          }
         }
-      }
-    });
-    if (!found) {
-      return name;
+      });
     }
+  });
+  if (!found) {
+    return name;
   }
 }
 function getComponentName(ssrRenderNode) {
   const componentCall = ssrRenderNode.arguments[0];
+  if (!componentCall) {
+    return;
+  }
   if (componentCall.type === "Identifier") {
     return componentCall.name;
   } else if (componentCall.type === "MemberExpression") {
-    return componentCall.property.value;
+    if (componentCall.property.type === "Literal") {
+      return componentCall.property.value;
+    }
+  } else if (componentCall.type === "CallExpression") {
+    return getComponentName(componentCall);
   }
-  return componentCall.arguments[0].name;
 }
 function removeVariableDeclarator(codeAst, name, magicString, removedNodes) {
   walk(codeAst, {
     enter(node) {
-      if (node.type === "VariableDeclaration") {
-        for (const declarator of node.declarations) {
-          const toRemove = findMatchingPatternToRemove(declarator.id, node, name, removedNodes);
-          if (toRemove) {
-            magicString.remove(toRemove.start, toRemove.end + 1);
-            removedNodes.add(toRemove);
-            return toRemove;
-          }
+      if (node.type !== "VariableDeclaration") {
+        return;
+      }
+      for (const declarator of node.declarations) {
+        const toRemove = findMatchingPatternToRemove(declarator.id, node, name, removedNodes);
+        if (toRemove) {
+          magicString.remove(toRemove.start, toRemove.end + 1);
+          removedNodes.add(toRemove);
         }
       }
     }
@@ -2339,27 +3024,230 @@ const ComponentNamePlugin = (options) => createUnplugin(() => {
     transformInclude(id) {
       return isVue(id) || !!id.match(SX_RE);
     },
-    transform(code, id) {
-      const filename = id.match(FILENAME_RE)?.[1];
-      if (!filename) {
-        return;
+    transform: {
+      filter: {
+        id: { include: FILENAME_RE }
+      },
+      handler(code, id) {
+        const filename = id.match(FILENAME_RE)?.[1];
+        if (!filename) {
+          return;
+        }
+        const component = options.getComponents().find((c) => c.filePath === id);
+        if (!component) {
+          return;
+        }
+        const NAME_RE = new RegExp(`__name:\\s*['"]${filename}['"]`);
+        const s = new MagicString(code);
+        s.replace(NAME_RE, `__name: ${JSON.stringify(component.pascalName)}`);
+        if (!s.hasChanged()) {
+          parseAndWalk(code, id, function(node) {
+            if (node.type !== "ExportDefaultDeclaration") {
+              return;
+            }
+            const { start, end } = node.declaration;
+            s.overwrite(start, end, `Object.assign(${code.slice(start, end)}, { __name: ${JSON.stringify(component.pascalName)} })`);
+            this.skip();
+          });
+        }
+        if (s.hasChanged()) {
+          return {
+            code: s.toString(),
+            map: options.sourcemap ? s.generateMap({ hires: true }) : void 0
+          };
+        }
+      }
+    }
+  };
+});
+
+const SCRIPT_RE$1 = /(?<=<script[^>]*>)[\s\S]*?(?=<\/script>)/gi;
+const TEMPLATE_RE = /<template>([\s\S]*)<\/template>/;
+const hydrationStrategyMap = {
+  hydrateOnIdle: "Idle",
+  hydrateOnVisible: "Visible",
+  hydrateOnInteraction: "Interaction",
+  hydrateOnMediaQuery: "MediaQuery",
+  hydrateAfter: "Time",
+  hydrateWhen: "If",
+  hydrateNever: "Never"
+};
+const LAZY_HYDRATION_PROPS_RE = /\b(?:hydrate-on-idle|hydrateOnIdle|hydrate-on-visible|hydrateOnVisible|hydrate-on-interaction|hydrateOnInteraction|hydrate-on-media-query|hydrateOnMediaQuery|hydrate-after|hydrateAfter|hydrate-when|hydrateWhen|hydrate-never|hydrateNever)\b/;
+const LazyHydrationTransformPlugin = (options) => createUnplugin(() => {
+  const exclude = options.transform?.exclude || [];
+  const include = options.transform?.include || [];
+  const nuxt = tryUseNuxt();
+  return {
+    name: "nuxt:components-loader-pre",
+    enforce: "pre",
+    transformInclude(id) {
+      if (exclude.some((pattern) => pattern.test(id))) {
+        return false;
+      }
+      if (include.some((pattern) => pattern.test(id))) {
+        return true;
+      }
+      return isVue(id);
+    },
+    transform: {
+      filter: {
+        code: { include: TEMPLATE_RE }
+      },
+      async handler(code, id) {
+        const scopeTracker = new ScopeTracker({ preserveExitedScopes: true });
+        for (const { 0: script } of code.matchAll(SCRIPT_RE$1)) {
+          if (!script) {
+            continue;
+          }
+          try {
+            parseAndWalk(script, id, {
+              scopeTracker
+            });
+          } catch {
+          }
+        }
+        const { 0: template, index: offset = 0 } = code.match(TEMPLATE_RE) || {};
+        if (!template || !LAZY_HYDRATION_PROPS_RE.test(template)) {
+          return;
+        }
+        const s = new MagicString(code);
+        try {
+          const ast = parse(template);
+          const components = new Set(options.getComponents().map((c) => c.pascalName));
+          await walk$1(ast, (node) => {
+            if (node.type !== 1) {
+              return;
+            }
+            if (scopeTracker.getDeclaration(node.name)) {
+              return;
+            }
+            const pascalName = pascalCase(node.name.replace(/^(Lazy|lazy-)/, ""));
+            if (!components.has(pascalName)) {
+              return;
+            }
+            let strategy;
+            for (const attr in node.attributes) {
+              const isDynamic = attr.startsWith(":");
+              const prop = camelCase(isDynamic ? attr.slice(1) : attr);
+              if (prop in hydrationStrategyMap) {
+                if (strategy) {
+                  logger.warn(`Multiple hydration strategies are not supported in the same component`);
+                } else {
+                  strategy = hydrationStrategyMap[prop];
+                }
+              }
+            }
+            if (strategy && !/^(?:Lazy|lazy-)/.test(node.name)) {
+              if (node.name !== "template" && (nuxt?.options.dev || nuxt?.options.test)) {
+                const relativePath = resolveToAlias(id, nuxt);
+                logger.warn(`Component \`<${node.name}>\` (used in \`${relativePath}\`) has lazy-hydration props but is not declared as a lazy component.
+Rename it to \`<Lazy${pascalCase(node.name)} />\` or remove the lazy-hydration props to avoid unexpected behavior.`);
+              }
+              return;
+            }
+            if (strategy) {
+              const newName = "Lazy" + strategy + pascalName;
+              const chunk = template.slice(node.loc[0].start, node.loc.at(-1).end);
+              const chunkOffset = node.loc[0].start + offset;
+              const { 0: startingChunk, index: startingPoint = 0 } = chunk.match(new RegExp(`<${node.name}[^>]*>`)) || {};
+              s.overwrite(startingPoint + chunkOffset, startingPoint + chunkOffset + startingChunk.length, startingChunk.replace(node.name, newName));
+              const { 0: endingChunk, index: endingPoint } = chunk.match(new RegExp(`<\\/${node.name}[^>]*>$`)) || {};
+              if (endingChunk && endingPoint) {
+                s.overwrite(endingPoint + chunkOffset, endingPoint + chunkOffset + endingChunk.length, endingChunk.replace(node.name, newName));
+              }
+            }
+          });
+        } catch {
+        }
+        if (s.hasChanged()) {
+          return {
+            code: s.toString(),
+            map: options.sourcemap ? s.generateMap({ hires: true }) : void 0
+          };
+        }
+      }
+    }
+  };
+});
+
+const LAZY_HYDRATION_MACRO_RE = /(?:\b(?:const|let|var)\s+(\w+)\s*=\s*)?defineLazyHydrationComponent\(\s*['"]([^'"]+)['"]\s*,\s*\(\s*\)\s*=>\s*import\s*\(\s*['"]([^'"]+)['"]\s*\)\s*\)/g;
+const COMPONENT_NAME = /import\(["'].*\/([^\\/]+?)\.\w+["']\)/;
+const HYDRATION_STRATEGY = ["visible", "idle", "interaction", "mediaQuery", "if", "time", "never"];
+const LazyHydrationMacroTransformPlugin = (options) => createUnplugin(() => {
+  const exclude = options.transform?.exclude || [];
+  const include = options.transform?.include || [];
+  return {
+    name: "nuxt:lazy-hydration-macro",
+    enforce: "post",
+    transformInclude(id) {
+      if (exclude.some((pattern) => pattern.test(id))) {
+        return false;
       }
-      const component = options.getComponents().find((c) => c.filePath === id);
-      if (!component) {
-        return;
+      if (include.some((pattern) => pattern.test(id))) {
+        return true;
       }
-      const NAME_RE = new RegExp(`__name:\\s*['"]${filename}['"]`);
-      const s = new MagicString(code);
-      s.replace(NAME_RE, `__name: ${JSON.stringify(component.pascalName)}`);
-      if (s.hasChanged()) {
-        return {
-          code: s.toString(),
-          map: options.sourcemap ? s.generateMap({ hires: true }) : void 0
-        };
+      return isVue(id, { type: ["template", "script"] }) || isJS(id);
+    },
+    transform: {
+      filter: {
+        code: { include: LAZY_HYDRATION_MACRO_RE }
+      },
+      handler(code) {
+        const matches = Array.from(code.matchAll(LAZY_HYDRATION_MACRO_RE));
+        if (!matches.length) {
+          return;
+        }
+        const s = new MagicString(code);
+        const names = /* @__PURE__ */ new Set();
+        const components = options.getComponents();
+        for (const match of matches) {
+          const [matchedString, variableName, hydrationStrategy] = match;
+          const startIndex = match.index;
+          const endIndex = startIndex + matchedString.length;
+          if (!variableName) {
+            s.remove(startIndex, endIndex);
+            continue;
+          }
+          if (!hydrationStrategy || !HYDRATION_STRATEGY.includes(hydrationStrategy)) {
+            s.remove(startIndex, endIndex);
+            continue;
+          }
+          const componentNameMatch = matchedString.match(COMPONENT_NAME);
+          if (!componentNameMatch || !componentNameMatch[1]) {
+            s.remove(startIndex, endIndex);
+            continue;
+          }
+          const name = componentNameMatch[1];
+          const component = findComponent(components, name);
+          if (!component) {
+            s.remove(startIndex, endIndex);
+            continue;
+          }
+          const relativePath = relative(options.srcDir, component.filePath);
+          const dynamicImport = `${genDynamicImport(component.filePath, { interopDefault: false })}.then(c => c.${component.export ?? "default"} || c)`;
+          const replaceFunctionName = `createLazy${upperFirst(hydrationStrategy)}Component`;
+          const replacement = `const ${variableName} = __${replaceFunctionName}(${JSON.stringify(relativePath)}, ${dynamicImport})`;
+          s.overwrite(startIndex, endIndex, replacement);
+          names.add(replaceFunctionName);
+        }
+        if (names.size) {
+          const imports = genImport(options.clientDelayedComponentRuntime, [...names].map((name) => ({ name, as: `__${name}` })));
+          s.prepend(imports);
+        }
+        if (s.hasChanged()) {
+          return {
+            code: s.toString(),
+            map: options.sourcemap ? s.generateMap({ hires: true }) : void 0
+          };
+        }
       }
     }
   };
 });
+function findComponent(components, name) {
+  const id = pascalCase(name);
+  return components.find((c) => c.pascalName === id);
+}
 
 const isPureObjectOrString = (val) => !Array.isArray(val) && typeof val === "object" || typeof val === "string";
 const isDirectory = (p) => {
@@ -2377,7 +3265,7 @@ const DEFAULT_COMPONENTS_DIRS_RE = /\/components(?:\/(?:global|islands))?$/;
 const STARTER_DOT_RE = /^\./g;
 const componentsModule = defineNuxtModule({
   meta: {
-    name: "components",
+    name: "nuxt:components",
     configKey: "components"
   },
   defaults: {
@@ -2468,15 +3356,21 @@ const componentsModule = defineNuxtModule({
     addBuildPlugin(TransformPlugin$1(nuxt, { getComponents, serverComponentRuntime, mode: "server" }), { server: true, client: false });
     addBuildPlugin(TransformPlugin$1(nuxt, { getComponents, serverComponentRuntime, mode: "client" }), { server: false, client: true });
     nuxt.hook("build:manifest", (manifest) => {
-      const sourceFiles = getComponents().filter((c) => c.global).map((c) => relative(nuxt.options.srcDir, c.filePath));
+      const sourceFiles = /* @__PURE__ */ new Set();
+      for (const c of getComponents()) {
+        if (c.global) {
+          sourceFiles.add(relative(nuxt.options.srcDir, c.filePath));
+        }
+      }
       for (const chunk of Object.values(manifest)) {
         if (chunk.isEntry) {
-          chunk.dynamicImports = chunk.dynamicImports?.filter((i) => !sourceFiles.includes(i));
+          chunk.dynamicImports = chunk.dynamicImports?.filter((i) => !sourceFiles.has(i));
         }
       }
     });
+    const restartEvents = /* @__PURE__ */ new Set(["addDir", "unlinkDir"]);
     nuxt.hook("builder:watch", (event, relativePath) => {
-      if (!["addDir", "unlinkDir"].includes(event)) {
+      if (!restartEvents.has(event)) {
         return;
       }
       const path = resolve(nuxt.options.srcDir, relativePath);
@@ -2491,401 +3385,122 @@ const componentsModule = defineNuxtModule({
       await nuxt.callHook("components:extend", newComponents);
       for (const component of newComponents) {
         if (!component._scanned && !(component.filePath in nuxt.vfs) && isAbsolute(component.filePath) && !existsSync(component.filePath)) {
-          component.filePath = await resolvePath$1(component.filePath, { fallbackToOriginal: true });
-        }
-        if (component.mode === "client" && !newComponents.some((c) => c.pascalName === component.pascalName && c.mode === "server")) {
-          newComponents.push({
-            ...component,
-            _raw: true,
-            mode: "server",
-            filePath: serverPlaceholderPath,
-            chunkName: "components/" + component.kebabName
-          });
-        }
-        if (component.mode === "server" && !nuxt.options.ssr && !newComponents.some((other) => other.pascalName === component.pascalName && other.mode === "client")) {
-          logger.warn(`Using server components with \`ssr: false\` is not supported with auto-detected component islands. If you need to use server component \`${component.pascalName}\`, set \`experimental.componentIslands\` to \`true\`.`);
-        }
-      }
-      context.components = newComponents;
-      app.components = newComponents;
-    });
-    nuxt.hook("prepare:types", ({ tsConfig }) => {
-      tsConfig.compilerOptions.paths["#components"] = [resolve(nuxt.options.buildDir, "components")];
-    });
-    nuxt.hook("builder:watch", async (event, relativePath) => {
-      if (!["add", "unlink"].includes(event)) {
-        return;
-      }
-      const path = resolve(nuxt.options.srcDir, relativePath);
-      if (componentDirs.some((dir) => path.startsWith(dir.path + "/"))) {
-        await updateTemplates({
-          filter: (template) => [
-            "components.plugin.mjs",
-            "components.d.ts",
-            "components.server.mjs",
-            "components.client.mjs"
-          ].includes(template.filename)
-        });
-      }
-    });
-    if (nuxt.options.experimental.treeshakeClientOnly) {
-      addBuildPlugin(TreeShakeTemplatePlugin({ sourcemap: !!nuxt.options.sourcemap.server, getComponents }), { client: false });
-    }
-    if (nuxt.options.experimental.clientFallback) {
-      addBuildPlugin(ClientFallbackAutoIdPlugin({ sourcemap: !!nuxt.options.sourcemap.client, rootDir: nuxt.options.rootDir }), { server: false });
-      addBuildPlugin(ClientFallbackAutoIdPlugin({ sourcemap: !!nuxt.options.sourcemap.server, rootDir: nuxt.options.rootDir }), { client: false });
-    }
-    const sharedLoaderOptions = {
-      getComponents,
-      serverComponentRuntime,
-      transform: typeof nuxt.options.components === "object" && !Array.isArray(nuxt.options.components) ? nuxt.options.components.transform : void 0,
-      experimentalComponentIslands: !!nuxt.options.experimental.componentIslands
-    };
-    addBuildPlugin(LoaderPlugin({ ...sharedLoaderOptions, sourcemap: !!nuxt.options.sourcemap.client, mode: "client" }), { server: false });
-    addBuildPlugin(LoaderPlugin({ ...sharedLoaderOptions, sourcemap: !!nuxt.options.sourcemap.server, mode: "server" }), { client: false });
-    if (nuxt.options.experimental.componentIslands) {
-      const selectiveClient = typeof nuxt.options.experimental.componentIslands === "object" && nuxt.options.experimental.componentIslands.selectiveClient;
-      addVitePlugin({
-        name: "nuxt-server-component-hmr",
-        handleHotUpdate(ctx) {
-          const components = getComponents();
-          const filePath = normalize(ctx.file);
-          const comp = components.find((c) => c.filePath === filePath);
-          if (comp?.mode === "server") {
-            ctx.server.ws.send({
-              event: `nuxt-server-component:${comp.pascalName}`,
-              type: "custom"
-            });
-          }
-        }
-      }, { server: false });
-      addBuildPlugin(IslandsTransformPlugin({ getComponents, selectiveClient }), { client: false });
-      nuxt.hook("vite:extendConfig", (config, { isClient }) => {
-        config.plugins = config.plugins || [];
-        if (isClient && selectiveClient) {
-          writeFileSync(join(nuxt.options.buildDir, "components-chunk.mjs"), "export const paths = {}");
-          if (!nuxt.options.dev) {
-            config.plugins.push(ComponentsChunkPlugin.vite({
-              getComponents,
-              buildDir: nuxt.options.buildDir
-            }));
-          } else {
-            writeFileSync(join(nuxt.options.buildDir, "components-chunk.mjs"), `export const paths = ${JSON.stringify(
-              getComponents().filter((c) => c.mode === "client" || c.mode === "all").reduce((acc, c) => {
-                if (c.filePath.endsWith(".vue") || c.filePath.endsWith(".js") || c.filePath.endsWith(".ts")) {
-                  return Object.assign(acc, { [c.pascalName]: `/@fs/${c.filePath}` });
-                }
-                const filePath = existsSync(`${c.filePath}.vue`) ? `${c.filePath}.vue` : existsSync(`${c.filePath}.js`) ? `${c.filePath}.js` : `${c.filePath}.ts`;
-                return Object.assign(acc, { [c.pascalName]: `/@fs/${filePath}` });
-              }, {})
-            )}`);
-          }
-        }
-      });
-      for (const key of ["rspack:config", "webpack:config"]) {
-        nuxt.hook(key, (configs) => {
-          configs.forEach((config) => {
-            const mode = config.name === "client" ? "client" : "server";
-            config.plugins = config.plugins || [];
-            if (mode !== "server") {
-              writeFileSync(join(nuxt.options.buildDir, "components-chunk.mjs"), "export const paths = {}");
-            }
-          });
-        });
-      }
-    }
-  }
-});
-
-const NODE_MODULES_RE$1 = /[\\/]node_modules[\\/]/;
-const IMPORTS_RE = /(['"])#imports\1/;
-const TransformPlugin = ({ ctx, options, sourcemap }) => createUnplugin(() => {
-  return {
-    name: "nuxt:imports-transform",
-    enforce: "post",
-    transformInclude(id) {
-      if (options.transform?.include?.some((pattern) => pattern.test(id))) {
-        return true;
-      }
-      if (options.transform?.exclude?.some((pattern) => pattern.test(id))) {
-        return false;
-      }
-      if (isVue(id, { type: ["script", "template"] })) {
-        return true;
-      }
-      return isJS(id);
-    },
-    async transform(code, id) {
-      id = normalize(id);
-      const isNodeModule = NODE_MODULES_RE$1.test(id) && !options.transform?.include?.some((pattern) => pattern.test(id));
-      if (isNodeModule && !IMPORTS_RE.test(code)) {
-        return;
-      }
-      const { s, imports } = await ctx.injectImports(code, id, { autoImport: options.autoImport && !isNodeModule });
-      if (imports.some((i) => i.from === "#app/composables/script-stubs") && tryUseNuxt()?.options.test === false) {
-        import('./chunks/features.mjs').then(({ installNuxtModule }) => installNuxtModule("@nuxt/scripts"));
-      }
-      if (s.hasChanged()) {
-        return {
-          code: s.toString(),
-          map: sourcemap ? s.generateMap({ hires: true }) : void 0
-        };
-      }
-    }
-  };
-});
-
-const commonPresets = [
-  // vue-demi (mocked)
-  defineUnimportPreset({
-    from: "vue-demi",
-    imports: [
-      "isVue2",
-      "isVue3"
-    ]
-  })
-];
-const granularAppPresets = [
-  {
-    from: "#app/components/nuxt-link",
-    imports: ["defineNuxtLink"]
-  },
-  {
-    imports: ["useNuxtApp", "tryUseNuxtApp", "defineNuxtPlugin", "definePayloadPlugin", "useRuntimeConfig", "defineAppConfig"],
-    from: "#app/nuxt"
-  },
-  {
-    imports: ["requestIdleCallback", "cancelIdleCallback"],
-    from: "#app/compat/idle-callback"
-  },
-  {
-    imports: ["setInterval"],
-    from: "#app/compat/interval"
-  },
-  {
-    imports: ["useAppConfig", "updateAppConfig"],
-    from: "#app/config"
-  },
-  {
-    imports: ["defineNuxtComponent"],
-    from: "#app/composables/component"
-  },
-  {
-    imports: ["useAsyncData", "useLazyAsyncData", "useNuxtData", "refreshNuxtData", "clearNuxtData"],
-    from: "#app/composables/asyncData"
-  },
-  {
-    imports: ["useHydration"],
-    from: "#app/composables/hydrate"
-  },
-  {
-    imports: ["callOnce"],
-    from: "#app/composables/once"
-  },
-  {
-    imports: ["useState", "clearNuxtState"],
-    from: "#app/composables/state"
-  },
-  {
-    imports: ["clearError", "createError", "isNuxtError", "showError", "useError"],
-    from: "#app/composables/error"
-  },
-  {
-    imports: ["useFetch", "useLazyFetch"],
-    from: "#app/composables/fetch"
-  },
-  {
-    imports: ["useCookie", "refreshCookie"],
-    from: "#app/composables/cookie"
-  },
-  {
-    imports: ["onPrehydrate", "prerenderRoutes", "useRequestHeader", "useRequestHeaders", "useResponseHeader", "useRequestEvent", "useRequestFetch", "setResponseStatus"],
-    from: "#app/composables/ssr"
-  },
-  {
-    imports: ["onNuxtReady"],
-    from: "#app/composables/ready"
-  },
-  {
-    imports: ["preloadComponents", "prefetchComponents", "preloadRouteComponents"],
-    from: "#app/composables/preload"
-  },
-  {
-    imports: ["abortNavigation", "addRouteMiddleware", "defineNuxtRouteMiddleware", "setPageLayout", "navigateTo", "useRoute", "useRouter"],
-    from: "#app/composables/router"
-  },
-  {
-    imports: ["isPrerendered", "loadPayload", "preloadPayload", "definePayloadReducer", "definePayloadReviver"],
-    from: "#app/composables/payload"
-  },
-  {
-    imports: ["useLoadingIndicator"],
-    from: "#app/composables/loading-indicator"
-  },
-  {
-    imports: ["getAppManifest", "getRouteRules"],
-    from: "#app/composables/manifest"
-  },
-  {
-    imports: ["reloadNuxtApp"],
-    from: "#app/composables/chunk"
-  },
-  {
-    imports: ["useRequestURL"],
-    from: "#app/composables/url"
-  },
-  {
-    imports: ["usePreviewMode"],
-    from: "#app/composables/preview"
-  },
-  {
-    imports: ["useRouteAnnouncer"],
-    from: "#app/composables/route-announcer"
-  },
-  {
-    imports: ["useRuntimeHook"],
-    from: "#app/composables/runtime-hook"
+          component.filePath = resolveModulePath(resolveAlias(component.filePath), { try: true, extensions: nuxt.options.extensions }) ?? component.filePath;
+        }
+        if (component.mode === "client" && !newComponents.some((c) => c.pascalName === component.pascalName && c.mode === "server")) {
+          newComponents.push({
+            ...component,
+            _raw: true,
+            mode: "server",
+            filePath: serverPlaceholderPath,
+            chunkName: "components/" + component.kebabName
+          });
+        }
+        if (component.mode === "server" && !nuxt.options.ssr && !newComponents.some((other) => other.pascalName === component.pascalName && other.mode === "client")) {
+          logger.warn(`Using server components with \`ssr: false\` is not supported with auto-detected component islands. If you need to use server component \`${component.pascalName}\`, set \`experimental.componentIslands\` to \`true\`.`);
+        }
+      }
+      context.components = newComponents;
+      app.components = newComponents;
+    });
+    nuxt.hook("prepare:types", ({ tsConfig }) => {
+      tsConfig.compilerOptions.paths["#components"] = [resolve(nuxt.options.buildDir, "components")];
+    });
+    if (nuxt.options.experimental.treeshakeClientOnly) {
+      addBuildPlugin(TreeShakeTemplatePlugin({ sourcemap: !!nuxt.options.sourcemap.server, getComponents }), { client: false });
+    }
+    const clientDelayedComponentRuntime = await findPath(join(distDir, "components/runtime/lazy-hydrated-component")) ?? join(distDir, "components/runtime/lazy-hydrated-component");
+    const sharedLoaderOptions = {
+      getComponents,
+      clientDelayedComponentRuntime,
+      serverComponentRuntime,
+      srcDir: nuxt.options.srcDir,
+      transform: typeof nuxt.options.components === "object" && !Array.isArray(nuxt.options.components) ? nuxt.options.components.transform : void 0,
+      experimentalComponentIslands: !!nuxt.options.experimental.componentIslands
+    };
+    addBuildPlugin(LoaderPlugin({ ...sharedLoaderOptions, sourcemap: !!nuxt.options.sourcemap.client, mode: "client" }), { server: false });
+    addBuildPlugin(LoaderPlugin({ ...sharedLoaderOptions, sourcemap: !!nuxt.options.sourcemap.server, mode: "server" }), { client: false });
+    if (nuxt.options.experimental.lazyHydration) {
+      addBuildPlugin(LazyHydrationTransformPlugin({
+        ...sharedLoaderOptions,
+        sourcemap: !!(nuxt.options.sourcemap.server || nuxt.options.sourcemap.client)
+      }), { prepend: true });
+      addBuildPlugin(LazyHydrationMacroTransformPlugin({
+        ...sharedLoaderOptions,
+        sourcemap: !!(nuxt.options.sourcemap.server || nuxt.options.sourcemap.client)
+      }));
+      addImportsSources(lazyHydrationMacroPreset);
+    }
+    if (nuxt.options.experimental.componentIslands) {
+      const selectiveClient = typeof nuxt.options.experimental.componentIslands === "object" && nuxt.options.experimental.componentIslands.selectiveClient;
+      addVitePlugin({
+        name: "nuxt-server-component-hmr",
+        handleHotUpdate(ctx) {
+          const components = getComponents();
+          const filePath = normalize(ctx.file);
+          const comp = components.find((c) => c.filePath === filePath);
+          if (comp?.mode === "server") {
+            ctx.server.ws.send({
+              event: `nuxt-server-component:${comp.pascalName}`,
+              type: "custom"
+            });
+          }
+        }
+      }, { server: false });
+      addBuildPlugin(IslandsTransformPlugin({ getComponents, selectiveClient }), { client: false });
+      if (selectiveClient && nuxt.options.builder === "@nuxt/vite-builder") {
+        addVitePlugin(() => ComponentsChunkPlugin({ dev: nuxt.options.dev, getComponents }));
+      } else {
+        addTemplate({
+          filename: "component-chunk.mjs",
+          getContents: () => `export default {}`
+        });
+      }
+    }
   }
-];
-const scriptsStubsPreset = {
-  imports: [
-    "useScriptTriggerConsent",
-    "useScriptEventPage",
-    "useScriptTriggerElement",
-    "useScript",
-    "useScriptGoogleAnalytics",
-    "useScriptPlausibleAnalytics",
-    "useScriptClarity",
-    "useScriptCloudflareWebAnalytics",
-    "useScriptFathomAnalytics",
-    "useScriptMatomoAnalytics",
-    "useScriptGoogleTagManager",
-    "useScriptGoogleAdsense",
-    "useScriptSegment",
-    "useScriptMetaPixel",
-    "useScriptXPixel",
-    "useScriptIntercom",
-    "useScriptHotjar",
-    "useScriptStripe",
-    "useScriptLemonSqueezy",
-    "useScriptVimeoPlayer",
-    "useScriptYouTubePlayer",
-    "useScriptGoogleMaps",
-    "useScriptNpm",
-    "useScriptCrisp"
-  ],
-  priority: -1,
-  from: "#app/composables/script-stubs"
-};
-const routerPreset = defineUnimportPreset({
-  imports: ["onBeforeRouteLeave", "onBeforeRouteUpdate"],
-  from: "#app/composables/router"
-});
-const vuePreset = defineUnimportPreset({
-  from: "vue",
-  imports: [
-    // <script setup>
-    "withCtx",
-    "withDirectives",
-    "withKeys",
-    "withMemo",
-    "withModifiers",
-    "withScopeId",
-    // Lifecycle
-    "onActivated",
-    "onBeforeMount",
-    "onBeforeUnmount",
-    "onBeforeUpdate",
-    "onDeactivated",
-    "onErrorCaptured",
-    "onMounted",
-    "onRenderTracked",
-    "onRenderTriggered",
-    "onServerPrefetch",
-    "onUnmounted",
-    "onUpdated",
-    // Reactivity
-    "computed",
-    "customRef",
-    "isProxy",
-    "isReactive",
-    "isReadonly",
-    "isRef",
-    "markRaw",
-    "proxyRefs",
-    "reactive",
-    "readonly",
-    "ref",
-    "shallowReactive",
-    "shallowReadonly",
-    "shallowRef",
-    "toRaw",
-    "toRef",
-    "toRefs",
-    "triggerRef",
-    "unref",
-    "watch",
-    "watchEffect",
-    "watchPostEffect",
-    "watchSyncEffect",
-    "isShallow",
-    // effect
-    "effect",
-    "effectScope",
-    "getCurrentScope",
-    "onScopeDispose",
-    // Component
-    "defineComponent",
-    "defineAsyncComponent",
-    "resolveComponent",
-    "getCurrentInstance",
-    "h",
-    "inject",
-    "hasInjectionContext",
-    "nextTick",
-    "provide",
-    "mergeModels",
-    "toValue",
-    "useModel",
-    "useAttrs",
-    "useCssModule",
-    "useCssVars",
-    "useSlots",
-    "useTransitionState",
-    "useId",
-    "useTemplateRef",
-    "useShadowRoot",
-    "useCssVars"
-  ]
 });
-const vueTypesPreset = defineUnimportPreset({
-  from: "vue",
-  type: true,
-  imports: [
-    "Component",
-    "ComponentPublicInstance",
-    "ComputedRef",
-    "ExtractPropTypes",
-    "ExtractPublicPropTypes",
-    "InjectionKey",
-    "PropType",
-    "Ref",
-    "MaybeRef",
-    "MaybeRefOrGetter",
-    "VNode"
-  ]
+
+const NODE_MODULES_RE$1 = /[\\/]node_modules[\\/]/;
+const IMPORTS_RE = /(['"])#imports\1/;
+const TransformPlugin = ({ ctx, options, sourcemap }) => createUnplugin(() => {
+  return {
+    name: "nuxt:imports-transform",
+    enforce: "post",
+    transformInclude(id) {
+      if (options.transform?.include?.some((pattern) => pattern.test(id))) {
+        return true;
+      }
+      if (options.transform?.exclude?.some((pattern) => pattern.test(id))) {
+        return false;
+      }
+      if (isVue(id, { type: ["script", "template"] })) {
+        return true;
+      }
+      return isJS(id);
+    },
+    async transform(code, id) {
+      id = normalize(id);
+      const isNodeModule = NODE_MODULES_RE$1.test(id) && !options.transform?.include?.some((pattern) => pattern.test(id));
+      if (isNodeModule && !IMPORTS_RE.test(code)) {
+        return;
+      }
+      const { s, imports } = await ctx.injectImports(code, id, { autoImport: options.autoImport && !isNodeModule });
+      if (imports.some((i) => i.from === "#app/composables/script-stubs") && tryUseNuxt()?.options.test === false) {
+        installNuxtModule("@nuxt/scripts");
+      }
+      if (s.hasChanged()) {
+        return {
+          code: s.toString(),
+          map: sourcemap ? s.generateMap({ hires: true }) : void 0
+        };
+      }
+    }
+  };
 });
-const defaultPresets = [
-  ...commonPresets,
-  ...granularAppPresets,
-  routerPreset,
-  vuePreset,
-  vueTypesPreset
-];
 
 const importsModule = defineNuxtModule({
   meta: {
-    name: "imports",
+    name: "nuxt:imports",
     configKey: "imports"
   },
   defaults: (nuxt) => ({
@@ -2901,17 +3516,25 @@ const importsModule = defineNuxtModule({
       ],
       exclude: void 0
     },
-    virtualImports: ["#imports"]
+    virtualImports: ["#imports"],
+    polyfills: true
   }),
   async setup(options, nuxt) {
     const presets = JSON.parse(JSON.stringify(options.presets));
+    if (options.polyfills) {
+      presets.push(...appCompatPresets);
+    }
     await nuxt.callHook("imports:sources", presets);
+    const { addons: inlineAddons, ...rest } = options;
+    const [addons, addonsOptions] = Array.isArray(inlineAddons) ? [inlineAddons] : [[], inlineAddons];
     const ctx = createUnimport({
       injectAtEnd: true,
-      ...options,
+      ...rest,
       addons: {
+        addons,
         vueTemplate: options.autoImport,
-        ...options.addons
+        vueDirectives: options.autoImport === false ? void 0 : true,
+        ...addonsOptions
       },
       presets
     });
@@ -2926,8 +3549,8 @@ const importsModule = defineNuxtModule({
         composablesDirs.push(resolve(layer.config.srcDir, "composables"));
         composablesDirs.push(resolve(layer.config.srcDir, "utils"));
         if (isNuxtV4) {
-          composablesDirs.push(resolve(layer.config.rootDir, "shared", "utils"));
-          composablesDirs.push(resolve(layer.config.rootDir, "shared", "types"));
+          composablesDirs.push(resolve(layer.config.rootDir, layer.config.dir?.shared ?? "shared", "utils"));
+          composablesDirs.push(resolve(layer.config.rootDir, layer.config.dir?.shared ?? "shared", "types"));
         }
         for (const dir of layer.config.imports?.dirs ?? []) {
           if (!dir) {
@@ -2956,13 +3579,13 @@ const importsModule = defineNuxtModule({
     nuxt.options.alias["#imports"] = join(nuxt.options.buildDir, "imports");
     addBuildPlugin(TransformPlugin({ ctx, options, sourcemap: !!nuxt.options.sourcemap.server || !!nuxt.options.sourcemap.client }));
     const priorities = nuxt.options._layers.map((layer, i) => [layer.config.srcDir, -i]).sort(([a], [b]) => b.length - a.length);
+    const IMPORTS_TEMPLATE_RE = /\/imports\.(?:d\.ts|mjs)$/;
     function isImportsTemplate(template) {
-      return [
-        "/types/imports.d.ts",
-        "/imports.d.ts",
-        "/imports.mjs"
-      ].some((i) => template.filename.endsWith(i));
+      return IMPORTS_TEMPLATE_RE.test(template.filename);
     }
+    const isIgnored = createIsIgnored(nuxt);
+    const defaultImportSources = new Set(defaultPresets.flatMap((i) => i.from));
+    const defaultImports = new Set(presets.flatMap((p) => defaultImportSources.has(p.from) ? p.imports : []));
     const regenerateImports = async () => {
       await ctx.modifyDynamicImports(async (imports) => {
         imports.length = 0;
@@ -2971,11 +3594,20 @@ const importsModule = defineNuxtModule({
             fileFilter: (file) => !isIgnored(file)
           });
           for (const i of scannedImports) {
-            i.priority = i.priority || priorities.find(([dir]) => i.from.startsWith(dir))?.[1];
+            i.priority ||= priorities.find(([dir]) => i.from.startsWith(dir))?.[1];
           }
           imports.push(...scannedImports);
         }
         await nuxt.callHook("imports:extend", imports);
+        for (const i of imports) {
+          if (!defaultImportSources.has(i.from)) {
+            const value = i.as || i.name;
+            if (defaultImports.has(value) && (!i.priority || i.priority >= 0)) {
+              const relativePath = isAbsolute(i.from) ? `${resolveToAlias(i.from, nuxt)}` : i.from;
+              logger.error(`\`${value}\` is an auto-imported function that is in use by Nuxt. Overriding it will likely cause issues. Please consider renaming \`${value}\` in \`${relativePath}\`.`);
+            }
+          }
+        }
         return imports;
       });
       await updateTemplates({
@@ -3002,6 +3634,7 @@ function addDeclarationTemplates(ctx, options) {
   const resolvedImportPathMap = /* @__PURE__ */ new Map();
   const r = ({ from }) => resolvedImportPathMap.get(from);
   const SUPPORTED_EXTENSION_RE = new RegExp(`\\.(${nuxt.options.extensions.map((i) => i.replace(".", "")).join("|")})$`);
+  const importPaths = nuxt.options.modulesDir.map((dir) => directoryToURL(dir));
   async function cacheImportPaths(imports) {
     const importSource = Array.from(new Set(imports.map((i) => i.from)));
     await Promise.all(importSource.map(async (from) => {
@@ -3010,7 +3643,7 @@ function addDeclarationTemplates(ctx, options) {
       }
       let path = resolveAlias(from);
       if (!isAbsolute(path)) {
-        path = await tryResolveModule(from, nuxt.options.modulesDir).then(async (r2) => {
+        path = await tryResolveModule(from, importPaths).then(async (r2) => {
           if (!r2) {
             return r2;
           }
@@ -3048,7 +3681,7 @@ function addDeclarationTemplates(ctx, options) {
   });
 }
 
-const version = "3.14.159";
+const version = "3.18.1";
 
 const createImportProtectionPatterns = (nuxt, options) => {
   const patterns = [];
@@ -3068,7 +3701,7 @@ const createImportProtectionPatterns = (nuxt, options) => {
       "Importing directly from module entry-points is not allowed."
     ]);
   }
-  for (const i of [/(^|node_modules\/)@nuxt\/(kit|test-utils)/, /(^|node_modules\/)nuxi/, /(^|node_modules\/)nitro(?:pack)?(?:-nightly)?(?:$|\/)(?!(?:dist\/)?(?:presets|runtime|types))/, /(^|node_modules\/)nuxt\/(config|kit|schema)/]) {
+  for (const i of [/(^|node_modules\/)@nuxt\/(cli|kit|test-utils)/, /(^|node_modules\/)nuxi/, /(^|node_modules\/)nitro(?:pack)?(?:-nightly)?(?:$|\/)(?!(?:dist\/)?(?:node_modules|presets|runtime|types))/, /(^|node_modules\/)nuxt\/(config|kit|schema)/]) {
     patterns.push([i, `This module cannot be imported in ${context}.`]);
   }
   if (options.context === "nitro-app" || options.context === "shared") {
@@ -3091,6 +3724,7 @@ const contextFlags = {
 };
 
 const TRANSFORM_MARKER = "/* _processed_nuxt_unctx_transform */\n";
+const TRANSFORM_MARKER_RE = /^\/\* _processed_nuxt_unctx_transform \*\/\n/;
 const UnctxTransformPlugin = (options) => createUnplugin(() => {
   const transformer = createTransformer(options.transformerOptions);
   return {
@@ -3099,16 +3733,21 @@ const UnctxTransformPlugin = (options) => createUnplugin(() => {
     transformInclude(id) {
       return isVue(id, { type: ["template", "script"] }) || isJS(id);
     },
-    transform(code) {
-      if (code.startsWith(TRANSFORM_MARKER) || !transformer.shouldTransform(code)) {
-        return;
-      }
-      const result = transformer.transform(code);
-      if (result) {
-        return {
-          code: TRANSFORM_MARKER + result.code,
-          map: options.sourcemap ? result.magicString.generateMap({ hires: true }) : void 0
-        };
+    transform: {
+      filter: {
+        code: { exclude: TRANSFORM_MARKER_RE }
+      },
+      handler(code) {
+        if (!transformer.shouldTransform(code)) {
+          return;
+        }
+        const result = transformer.transform(code);
+        if (result) {
+          return {
+            code: TRANSFORM_MARKER + result.code,
+            map: options.sourcemap ? result.magicString.generateMap({ hires: true }) : void 0
+          };
+        }
       }
     }
   };
@@ -3117,28 +3756,30 @@ const UnctxTransformPlugin = (options) => createUnplugin(() => {
 const TreeShakeComposablesPlugin = (options) => createUnplugin(() => {
   const composableNames = Object.values(options.composables).flat();
   const regexp = `(^\\s*)(${composableNames.join("|")})(?=\\((?!\\) \\{))`;
-  const COMPOSABLE_RE = new RegExp(regexp, "m");
-  const COMPOSABLE_RE_GLOBAL = new RegExp(regexp, "gm");
-  return {
-    name: "nuxt:tree-shake-composables:transform",
-    enforce: "post",
-    transformInclude(id) {
-      return isVue(id, { type: ["script"] }) || isJS(id);
-    },
-    transform(code) {
-      if (!COMPOSABLE_RE.test(code)) {
-        return;
-      }
-      const s = new MagicString(code);
-      const strippedCode = stripLiteral(code);
-      for (const match of strippedCode.matchAll(COMPOSABLE_RE_GLOBAL)) {
-        s.overwrite(match.index, match.index + match[0].length, `${match[1]} false && /*@__PURE__*/ ${match[2]}`);
-      }
-      if (s.hasChanged()) {
-        return {
-          code: s.toString(),
-          map: options.sourcemap ? s.generateMap({ hires: true }) : void 0
-        };
+  const COMPOSABLE_RE = new RegExp(regexp, "m");
+  const COMPOSABLE_RE_GLOBAL = new RegExp(regexp, "gm");
+  return {
+    name: "nuxt:tree-shake-composables:transform",
+    enforce: "post",
+    transformInclude(id) {
+      return isVue(id, { type: ["script"] }) || isJS(id);
+    },
+    transform: {
+      filter: {
+        code: { include: COMPOSABLE_RE }
+      },
+      handler(code) {
+        const s = new MagicString(code);
+        const strippedCode = stripLiteral(code);
+        for (const match of strippedCode.matchAll(COMPOSABLE_RE_GLOBAL)) {
+          s.overwrite(match.index, match.index + match[0].length, `${match[1]} false && /*@__PURE__*/ ${match[2]}`);
+        }
+        if (s.hasChanged()) {
+          return {
+            code: s.toString(),
+            map: options.sourcemap ? s.generateMap({ hires: true }) : void 0
+          };
+        }
       }
     }
   };
@@ -3153,22 +3794,29 @@ const DevOnlyPlugin = (options) => createUnplugin(() => {
     transformInclude(id) {
       return isVue(id, { type: ["template"] });
     },
-    transform(code) {
-      if (!DEVONLY_COMP_SINGLE_RE.test(code)) {
-        return;
-      }
-      const s = new MagicString(code);
-      for (const match of code.matchAll(DEVONLY_COMP_RE)) {
-        const ast = parse$1(match[0]).children[0];
-        const fallback = ast.children?.find((n) => n.name === "template" && Object.values(n.attributes).includes("#fallback"));
-        const replacement = fallback ? match[0].slice(fallback.loc[0].end, fallback.loc[fallback.loc.length - 1].start) : "";
-        s.overwrite(match.index, match.index + match[0].length, replacement);
-      }
-      if (s.hasChanged()) {
-        return {
-          code: s.toString(),
-          map: options.sourcemap ? s.generateMap({ hires: true }) : void 0
-        };
+    transform: {
+      filter: {
+        code: { include: DEVONLY_COMP_SINGLE_RE }
+      },
+      handler(code) {
+        const s = new MagicString(code);
+        for (const match of code.matchAll(DEVONLY_COMP_RE)) {
+          const ast = parse(match[0]).children[0];
+          const fallback = ast.children?.find((n) => {
+            if (n.name !== "template") {
+              return false;
+            }
+            return "fallback" in n.attributes || "#fallback" in n.attributes;
+          });
+          const replacement = fallback ? match[0].slice(fallback.loc[0].end, fallback.loc[fallback.loc.length - 1].start) : "";
+          s.overwrite(match.index, match.index + match[0].length, replacement);
+        }
+        if (s.hasChanged()) {
+          return {
+            code: s.toString(),
+            map: options.sourcemap ? s.generateMap({ hires: true }) : void 0
+          };
+        }
       }
     }
   };
@@ -3218,22 +3866,27 @@ const LayerAliasingPlugin = (options) => createUnplugin((_options, meta) => {
       const _id = normalize(id);
       return layers.some((dir) => _id.startsWith(dir));
     },
-    transform(code, id) {
-      if (meta.framework === "vite") {
-        return;
-      }
-      const _id = normalize(id);
-      const layer = layers.find((l) => _id.startsWith(l));
-      if (!layer || !ALIAS_RE_SINGLE.test(code)) {
-        return;
-      }
-      const s = new MagicString(code);
-      s.replace(ALIAS_RE, (r) => aliases[layer]?.[r] || r);
-      if (s.hasChanged()) {
-        return {
-          code: s.toString(),
-          map: options.sourcemap ? s.generateMap({ hires: true }) : void 0
-        };
+    transform: {
+      filter: {
+        code: { include: ALIAS_RE_SINGLE }
+      },
+      handler(code, id) {
+        if (meta.framework === "vite") {
+          return;
+        }
+        const _id = normalize(id);
+        const layer = layers.find((l) => _id.startsWith(l));
+        if (!layer) {
+          return;
+        }
+        const s = new MagicString(code);
+        s.replace(ALIAS_RE, (r) => aliases[layer]?.[r] || r);
+        if (s.hasChanged()) {
+          return {
+            code: s.toString(),
+            map: options.sourcemap ? s.generateMap({ hires: true }) : void 0
+          };
+        }
       }
     }
   };
@@ -3269,20 +3922,34 @@ const logLevelMapReverse = {
 const NODE_MODULES_RE = /(?<=\/)node_modules\/(.+)$/;
 const PNPM_NODE_MODULES_RE = /\.pnpm\/.+\/node_modules\/(.+)$/;
 async function initNitro(nuxt) {
-  var _a, _b;
   const excludePaths = nuxt.options._layers.flatMap((l) => [
     l.cwd.match(NODE_MODULES_RE)?.[1],
     l.cwd.match(PNPM_NODE_MODULES_RE)?.[1]
   ]).filter((dir) => Boolean(dir)).map((dir) => escapeRE(dir));
   const excludePattern = excludePaths.length ? [new RegExp(`node_modules\\/(?!${excludePaths.join("|")})`)] : [/node_modules/];
   const rootDirWithSlash = withTrailingSlash(nuxt.options.rootDir);
-  const modules = await resolveNuxtModule(
-    rootDirWithSlash,
-    nuxt.options._installedModules.filter((m) => m.entryPath).map((m) => m.entryPath)
-  );
+  const moduleEntryPaths = [];
+  for (const m of nuxt.options._installedModules) {
+    const path = m.meta?.rawPath || m.entryPath;
+    if (path) {
+      moduleEntryPaths.push(path);
+    }
+  }
+  const modules = await resolveNuxtModule(rootDirWithSlash, moduleEntryPaths);
+  const sharedDirs = /* @__PURE__ */ new Set();
   const isNuxtV4 = nuxt.options.future?.compatibilityVersion === 4;
+  if (isNuxtV4 && (nuxt.options.nitro.imports !== false && nuxt.options.imports.scan !== false)) {
+    for (const layer of nuxt.options._layers) {
+      if (layer.config?.imports?.scan === false) {
+        continue;
+      }
+      sharedDirs.add(resolve(layer.config.rootDir, layer.config.dir?.shared ?? "shared", "utils"));
+      sharedDirs.add(resolve(layer.config.rootDir, layer.config.dir?.shared ?? "shared", "types"));
+    }
+  }
+  const mockProxy = resolveModulePath("mocked-exports/proxy", { from: import.meta.url });
   const nitroConfig = defu(nuxt.options.nitro, {
-    debug: nuxt.options.debug,
+    debug: nuxt.options.debug ? nuxt.options.debug.nitro : false,
     rootDir: nuxt.options.rootDir,
     workspaceDir: nuxt.options.workspaceDir,
     srcDir: nuxt.options.serverDir,
@@ -3298,26 +3965,23 @@ async function initNitro(nuxt) {
     },
     imports: {
       autoImport: nuxt.options.imports.autoImport,
-      dirs: isNuxtV4 ? [
-        resolve(nuxt.options.rootDir, "shared", "utils"),
-        resolve(nuxt.options.rootDir, "shared", "types")
-      ] : [],
+      dirs: [...sharedDirs],
       imports: [
         {
           as: "__buildAssetsURL",
           name: "buildAssetsURL",
-          from: resolve(distDir, "core/runtime/nitro/paths")
+          from: resolve(distDir, "core/runtime/nitro/utils/paths")
         },
         {
           as: "__publicAssetsURL",
           name: "publicAssetsURL",
-          from: resolve(distDir, "core/runtime/nitro/paths")
+          from: resolve(distDir, "core/runtime/nitro/utils/paths")
         },
         {
-          // TODO: Remove after https://github.com/unjs/nitro/issues/1049
+          // TODO: Remove after https://github.com/nitrojs/nitro/issues/1049
           as: "defineAppConfig",
           name: "defineAppConfig",
-          from: resolve(distDir, "core/runtime/nitro/config"),
+          from: resolve(distDir, "core/runtime/nitro/utils/config"),
           priority: -1
         }
       ],
@@ -3332,8 +3996,8 @@ async function initNitro(nuxt) {
       filename: join(nuxt.options.analyzeDir, "{name}.html")
     } : false,
     scanDirs: nuxt.options._layers.map((layer) => (layer.config.serverDir || layer.config.srcDir) && resolve(layer.cwd, layer.config.serverDir || resolve(layer.config.srcDir, "server"))).filter(Boolean),
-    renderer: resolve(distDir, "core/runtime/nitro/renderer"),
-    errorHandler: resolve(distDir, "core/runtime/nitro/error"),
+    renderer: resolve(distDir, "core/runtime/nitro/handlers/renderer"),
+    errorHandler: resolve(distDir, "core/runtime/nitro/handlers/error"),
     nodeModulesDirs: nuxt.options.modulesDir,
     handlers: nuxt.options.serverHandlers,
     devHandlers: [],
@@ -3359,7 +4023,13 @@ async function initNitro(nuxt) {
         },
         include: [
           join(nuxt.options.buildDir, "types/nitro-nuxt.d.ts"),
-          ...modules.map((m) => join(relativeWithDot(nuxt.options.buildDir, m), "runtime/server"))
+          ...modules.flatMap((m) => {
+            const moduleDir = relativeWithDot(nuxt.options.buildDir, m);
+            return [
+              join(moduleDir, "runtime/server"),
+              join(moduleDir, "dist/runtime/server")
+            ];
+          })
         ],
         exclude: [
           ...nuxt.options.modulesDir.map((m) => relativeWithDot(nuxt.options.buildDir, m)),
@@ -3374,9 +4044,10 @@ async function initNitro(nuxt) {
         maxAge: 31536e3,
         baseURL: nuxt.options.app.buildAssetsDir
       },
-      ...nuxt.options._layers.map((layer) => resolve(layer.config.srcDir, (layer.config.rootDir === nuxt.options.rootDir ? nuxt.options : layer.config).dir?.public || "public")).filter((dir) => existsSync(dir)).map((dir) => ({ dir }))
+      ...nuxt.options._layers.map((layer) => resolve(layer.config.srcDir, (layer.config.rootDir === nuxt.options.rootDir ? nuxt.options.dir : layer.config.dir)?.public || "public")).filter((dir) => existsSync(dir)).map((dir) => ({ dir }))
     ],
     prerender: {
+      ignoreUnprefixedPublicAssets: true,
       failOnError: true,
       concurrency: cpus().length * 4 || 4,
       routes: [].concat(nuxt.options.generate.routes)
@@ -3413,23 +4084,24 @@ async function initNitro(nuxt) {
     alias: {
       // Vue 3 mocks
       ...nuxt.options.vue.runtimeCompiler || nuxt.options.experimental.externalVue ? {} : {
-        "estree-walker": "unenv/runtime/mock/proxy",
-        "@babel/parser": "unenv/runtime/mock/proxy",
-        "@vue/compiler-core": "unenv/runtime/mock/proxy",
-        "@vue/compiler-dom": "unenv/runtime/mock/proxy",
-        "@vue/compiler-ssr": "unenv/runtime/mock/proxy"
+        "estree-walker": mockProxy,
+        "@babel/parser": mockProxy,
+        "@vue/compiler-core": mockProxy,
+        "@vue/compiler-dom": mockProxy,
+        "@vue/compiler-ssr": mockProxy
       },
       "@vue/devtools-api": "vue-devtools-stub",
       // Nuxt aliases
       ...nuxt.options.alias,
       // Paths
-      "#internal/nuxt/paths": resolve(distDir, "core/runtime/nitro/paths")
+      "#internal/nuxt/paths": resolve(distDir, "core/runtime/nitro/utils/paths")
     },
     replace: {
       "process.env.NUXT_NO_SSR": nuxt.options.ssr === false,
       "process.env.NUXT_EARLY_HINTS": nuxt.options.experimental.writeEarlyHints !== false,
-      "process.env.NUXT_NO_SCRIPTS": !!nuxt.options.features.noScripts && !nuxt.options.dev,
+      "process.env.NUXT_NO_SCRIPTS": String(nuxt.options.features.noScripts === "all" || !!nuxt.options.features.noScripts && !nuxt.options.dev),
       "process.env.NUXT_INLINE_STYLES": !!nuxt.options.features.inlineStyles,
+      "process.env.PARSE_ERROR_DATA": String(!!nuxt.options.experimental.parseErrorData),
       "process.env.NUXT_JSON_PAYLOADS": !!nuxt.options.experimental.renderJsonPayloads,
       "process.env.NUXT_ASYNC_CONTEXT": !!nuxt.options.experimental.asyncContext,
       "process.env.NUXT_SHARED_DATA": !!nuxt.options.experimental.sharedPrerenderData,
@@ -3437,22 +4109,31 @@ async function initNitro(nuxt) {
       "__VUE_PROD_DEVTOOLS__": false
     },
     rollupConfig: {
-      output: {},
+      output: {
+        generatedCode: {
+          symbols: true
+          // temporary fix for https://github.com/vuejs/core/issues/8351
+        }
+      },
       plugins: []
     },
     logLevel: logLevelMapReverse[nuxt.options.logLevel]
   });
   nitroConfig.srcDir = resolve(nuxt.options.rootDir, nuxt.options.srcDir, nitroConfig.srcDir);
-  nitroConfig.ignore = [...nitroConfig.ignore || [], ...resolveIgnorePatterns(nitroConfig.srcDir), `!${join(nuxt.options.buildDir, "dist/client", nuxt.options.app.buildAssetsDir, "**/*")}`];
+  nitroConfig.ignore ||= [];
+  nitroConfig.ignore.push(
+    ...resolveIgnorePatterns(nitroConfig.srcDir),
+    `!${join(nuxt.options.buildDir, "dist/client", nuxt.options.app.buildAssetsDir, "**/*")}`
+  );
   nitroConfig.plugins = nitroConfig.plugins?.map((plugin) => plugin ? resolveAlias(plugin, nuxt.options.alias) : plugin);
   if (nuxt.options.experimental.appManifest) {
-    const buildId = (_a = nuxt.options.runtimeConfig.app).buildId || (_a.buildId = nuxt.options.buildId);
+    const buildId = nuxt.options.runtimeConfig.app.buildId ||= nuxt.options.buildId;
     const buildTimestamp = Date.now();
     const manifestPrefix = joinURL(nuxt.options.app.buildAssetsDir, "builds");
     const tempDir = join(nuxt.options.buildDir, "manifest");
-    nitroConfig.prerender || (nitroConfig.prerender = {});
-    (_b = nitroConfig.prerender).ignore || (_b.ignore = []);
-    nitroConfig.prerender.ignore.push(manifestPrefix);
+    nitroConfig.prerender ||= {};
+    nitroConfig.prerender.ignore ||= [];
+    nitroConfig.prerender.ignore.push(joinURL(nuxt.options.app.baseURL, manifestPrefix));
     nitroConfig.publicAssets.unshift(
       // build manifest
       {
@@ -3468,7 +4149,25 @@ async function initNitro(nuxt) {
       }
     );
     nuxt.options.alias["#app-manifest"] = join(tempDir, `meta/${buildId}.json`);
+    if (!nuxt.options.dev) {
+      nuxt.hook("build:before", async () => {
+        await promises.mkdir(join(tempDir, "meta"), { recursive: true });
+        await promises.writeFile(join(tempDir, `meta/${buildId}.json`), JSON.stringify({}));
+      });
+    }
+    if (nuxt.options.future.compatibilityVersion !== 4) {
+      nuxt.hook("nitro:config", (config) => {
+        for (const value of Object.values(config.routeRules || {})) {
+          if ("experimentalNoScripts" in value) {
+            value.noScripts = value.experimentalNoScripts;
+            delete value.experimentalNoScripts;
+          }
+        }
+      });
+    }
     nuxt.hook("nitro:config", (config) => {
+      config.alias ||= {};
+      config.alias["#app-manifest"] = join(tempDir, `meta/${buildId}.json`);
       const rules = config.routeRules;
       for (const rule in rules) {
         if (!rules[rule].appMiddleware) {
@@ -3490,6 +4189,7 @@ async function initNitro(nuxt) {
       nitro2.hooks.hook("rollup:before", async (nitro3) => {
         const routeRules = {};
         const _routeRules = nitro3.options.routeRules;
+        const validManifestKeys = /* @__PURE__ */ new Set(["prerender", "redirect", "appMiddleware"]);
         for (const key in _routeRules) {
           if (key === "/__nuxt_error") {
             continue;
@@ -3498,7 +4198,7 @@ async function initNitro(nuxt) {
           const filteredRules = {};
           for (const routeKey in _routeRules[key]) {
             const value = _routeRules[key][routeKey];
-            if (["prerender", "redirect", "appMiddleware"].includes(routeKey) && value) {
+            if (value && validManifestKeys.has(routeKey)) {
               if (routeKey === "redirect") {
                 filteredRules[routeKey] = typeof value === "string" ? value : value.to;
               } else {
@@ -3542,6 +4242,9 @@ async function initNitro(nuxt) {
       });
     });
   }
+  if (!nuxt.options.experimental.appManifest) {
+    nuxt.options.alias["#app-manifest"] = mockProxy;
+  }
   const FORWARD_SLASH_RE = /\//g;
   if (!nuxt.options.ssr) {
     nitroConfig.virtual["#build/dist/server/server.mjs"] = "export default () => {}";
@@ -3556,9 +4259,9 @@ async function initNitro(nuxt) {
     }
   }
   if (nuxt.options.experimental.respectNoSSRHeader) {
-    nitroConfig.handlers = nitroConfig.handlers || [];
+    nitroConfig.handlers ||= [];
     nitroConfig.handlers.push({
-      handler: resolve(distDir, "core/runtime/nitro/no-ssr"),
+      handler: resolve(distDir, "core/runtime/nitro/middleware/no-ssr"),
       middleware: true
     });
   }
@@ -3576,16 +4279,34 @@ async function initNitro(nuxt) {
     ImpoundPlugin.rollup({
       cwd: nuxt.options.rootDir,
       patterns: createImportProtectionPatterns(nuxt, { context: "nitro-app" }),
-      exclude: [/core[\\/]runtime[\\/]nitro[\\/]renderer/, ...sharedPatterns]
+      exclude: [/node_modules[\\/]nitro(?:pack)?(?:-nightly)?[\\/]|core[\\/]runtime[\\/]nitro[\\/](?:handlers|utils)/, ...sharedPatterns]
     })
   );
+  const isIgnored = createIsIgnored(nuxt);
+  nitroConfig.devStorage ??= {};
+  nitroConfig.devStorage.root ??= {
+    driver: "fs",
+    readOnly: true,
+    base: nitroConfig.rootDir,
+    watchOptions: {
+      ignored: [isIgnored]
+    }
+  };
+  nitroConfig.devStorage.src ??= {
+    driver: "fs",
+    readOnly: true,
+    base: nitroConfig.srcDir,
+    watchOptions: {
+      ignored: [isIgnored]
+    }
+  };
   await nuxt.callHook("nitro:config", nitroConfig);
-  const excludedAlias = [/^@vue\/.*$/, "#imports", "vue-demi", /^#app/];
+  const excludedAlias = [/^@vue\/.*$/, "vue", /vue-router/, "vite/client", "#imports", "vue-demi", /^#app/, "~", "@", "~~", "@@"];
   const basePath = nitroConfig.typescript.tsConfig.compilerOptions?.baseUrl ? resolve(nuxt.options.buildDir, nitroConfig.typescript.tsConfig.compilerOptions?.baseUrl) : nuxt.options.buildDir;
   const aliases = nitroConfig.alias;
   const tsConfig = nitroConfig.typescript.tsConfig;
-  tsConfig.compilerOptions = tsConfig.compilerOptions || {};
-  tsConfig.compilerOptions.paths = tsConfig.compilerOptions.paths || {};
+  tsConfig.compilerOptions ||= {};
+  tsConfig.compilerOptions.paths ||= {};
   for (const _alias in aliases) {
     const alias = _alias;
     if (excludedAlias.some((pattern) => typeof pattern === "string" ? alias === pattern : pattern.test(alias))) {
@@ -3595,19 +4316,18 @@ async function initNitro(nuxt) {
       continue;
     }
     const absolutePath = resolve(basePath, aliases[alias]);
-    const stats = await promises.stat(absolutePath).catch(
+    const isDirectory = aliases[alias].endsWith("/") || await promises.stat(absolutePath).then((r) => r.isDirectory()).catch(
       () => null
       /* file does not exist */
     );
-    if (stats?.isDirectory()) {
-      tsConfig.compilerOptions.paths[alias] = [absolutePath];
+    tsConfig.compilerOptions.paths[alias] = [absolutePath];
+    if (isDirectory) {
       tsConfig.compilerOptions.paths[`${alias}/*`] = [`${absolutePath}/*`];
-    } else {
-      tsConfig.compilerOptions.paths[alias] = [absolutePath.replace(EXTENSION_RE, "")];
     }
   }
   const nitro = await createNitro(nitroConfig, {
-    compatibilityDate: nuxt.options.compatibilityDate
+    compatibilityDate: nuxt.options.compatibilityDate,
+    dotenv: nuxt.options._loadOptions?.dotenv
   });
   const spaLoadingTemplateFilePath = await spaLoadingTemplatePath(nuxt);
   nuxt.hook("builder:watch", async (_event, relativePath) => {
@@ -3617,7 +4337,7 @@ async function initNitro(nuxt) {
     }
   });
   const cacheDir = resolve(nuxt.options.buildDir, "cache/nitro/prerender");
-  const cacheDriverPath = join(distDir, "core/runtime/nitro/cache-driver.js");
+  const cacheDriverPath = join(distDir, "core/runtime/nitro/utils/cache-driver.js");
   await promises.rm(cacheDir, { recursive: true, force: true }).catch(() => {
   });
   nitro.options._config.storage = defu(nitro.options._config.storage, {
@@ -3673,8 +4393,26 @@ async function initNitro(nuxt) {
   nitro.options.handlers.unshift({
     route: "/__nuxt_error",
     lazy: true,
-    handler: resolve(distDir, "core/runtime/nitro/renderer")
+    handler: resolve(distDir, "core/runtime/nitro/handlers/renderer")
   });
+  if (nuxt.options.experimental.chromeDevtoolsProjectSettings) {
+    const cacheDir2 = resolve(nuxt.options.rootDir, "node_modules/.cache/nuxt");
+    let projectConfiguration = await readFile(join(cacheDir2, "chrome-workspace.json"), "utf-8").then((r) => JSON.parse(r)).catch(() => null);
+    if (!projectConfiguration) {
+      projectConfiguration = { uuid: randomUUID() };
+      await mkdir(cacheDir2, { recursive: true });
+      await writeFile(join(cacheDir2, "chrome-workspace.json"), JSON.stringify(projectConfiguration), "utf-8");
+    }
+    nitro.options.devHandlers.push({
+      route: "/.well-known/appspecific/com.chrome.devtools.json",
+      handler: defineEventHandler(() => ({
+        workspace: {
+          ...projectConfiguration,
+          root: nuxt.options.rootDir
+        }
+      }))
+    });
+  }
   if (!nuxt.options.dev && nuxt.options.experimental.noVueServer) {
     nitro.hooks.hook("rollup:before", (nitro2) => {
       if (nitro2.options.preset === "nitro-prerender") {
@@ -3693,7 +4431,7 @@ async function initNitro(nuxt) {
       await scanHandlers(nitro);
       await writeTypes(nitro);
     }
-    opts.tsConfig.exclude = opts.tsConfig.exclude || [];
+    opts.tsConfig.exclude ||= [];
     opts.tsConfig.exclude.push(relative(nuxt.options.buildDir, resolve(nuxt.options.rootDir, nitro.options.output.dir)));
     opts.references.push({ path: resolve(nuxt.options.buildDir, "types/nitro.d.ts") });
   });
@@ -3729,9 +4467,9 @@ async function initNitro(nuxt) {
       return build$1(nitro);
     }
     await prerender(nitro);
-    logger.restoreAll();
+    logger$1.restoreAll();
     await build$1(nitro);
-    logger.wrapAll();
+    logger$1.wrapAll();
     await symlinkDist();
   });
   if (nuxt.options.dev) {
@@ -3775,7 +4513,7 @@ async function spaLoadingTemplate(nuxt) {
   const spaLoadingTemplate2 = await spaLoadingTemplatePath(nuxt);
   try {
     if (existsSync(spaLoadingTemplate2)) {
-      return readFileSync(spaLoadingTemplate2, "utf-8");
+      return readFileSync(spaLoadingTemplate2, "utf-8").trim();
     }
   } catch {
   }
@@ -3783,14 +4521,14 @@ async function spaLoadingTemplate(nuxt) {
     return template();
   }
   if (nuxt.options.spaLoadingTemplate) {
-    logger.warn(`Could not load custom \`spaLoadingTemplate\` path as it does not exist: \`${nuxt.options.spaLoadingTemplate}\`.`);
+    logger$1.warn(`Could not load custom \`spaLoadingTemplate\` path as it does not exist: \`${nuxt.options.spaLoadingTemplate}\`.`);
   }
   return "";
 }
 
 const schemaModule = defineNuxtModule({
   meta: {
-    name: "nuxt-config-schema"
+    name: "nuxt:nuxt-config-schema"
   },
   async setup(_, nuxt) {
     if (!nuxt.options.experimental.configSchema) {
@@ -3822,9 +4560,10 @@ const schemaModule = defineNuxtModule({
         await writeSchema(schema);
       });
       if (nuxt.options.experimental.watcher === "parcel") {
-        const watcherPath = await tryResolveModule("@parcel/watcher", [nuxt.options.rootDir, ...nuxt.options.modulesDir]);
-        if (watcherPath) {
-          const { subscribe } = await importModule(watcherPath);
+        try {
+          const { subscribe } = await importModule("@parcel/watcher", {
+            url: [nuxt.options.rootDir, ...nuxt.options.modulesDir].map((dir) => directoryToURL(dir))
+          });
           for (const layer of nuxt.options._layers) {
             const subscription = await subscribe(layer.config.rootDir, onChange, {
               ignore: ["!nuxt.schema.*"]
@@ -3832,14 +4571,21 @@ const schemaModule = defineNuxtModule({
             nuxt.hook("close", () => subscription.unsubscribe());
           }
           return;
+        } catch {
+          logger.warn("Falling back to `chokidar` as `@parcel/watcher` cannot be resolved in your project.");
         }
-        logger.warn("Falling back to `chokidar` as `@parcel/watcher` cannot be resolved in your project.");
       }
-      const filesToWatch = await Promise.all(nuxt.options._layers.map(
-        (layer) => resolver.resolve(layer.config.rootDir, "nuxt.schema.*")
-      ));
-      const watcher = watch$1(filesToWatch, {
+      const isIgnored = createIsIgnored(nuxt);
+      const dirsToWatch = nuxt.options._layers.map((layer) => resolver.resolve(layer.config.rootDir));
+      const SCHEMA_RE = /(?:^|\/)nuxt.schema.\w+$/;
+      const watcher = watch$1(dirsToWatch, {
         ...nuxt.options.watchers.chokidar,
+        depth: 1,
+        ignored: [
+          (path, stats) => stats && !stats.isFile() || !SCHEMA_RE.test(path),
+          isIgnored,
+          /[\\/]node_modules[\\/]/
+        ],
         ignoreInitial: true
       });
       watcher.on("all", onChange);
@@ -3914,67 +4660,52 @@ declare module 'nuxt/schema' {
 });
 
 const internalOrderMap = {
-  // -50: pre-all (nuxt)
-  "nuxt-pre-all": -50,
   // -40: custom payload revivers (user)
   "user-revivers": -40,
-  // -30: payload reviving (nuxt)
-  "nuxt-revivers": -30,
   // -20: pre (user) <-- pre mapped to this
   "user-pre": -20,
-  // -10: default (nuxt)
-  "nuxt-default": -10,
   // 0: default (user) <-- default behavior
   "user-default": 0,
-  // +10: post (nuxt)
-  "nuxt-post": 10,
   // +20: post (user) <-- post mapped to this
-  "user-post": 20,
-  // +30: post-all (nuxt)
-  "nuxt-post-all": 30
-};
+  "user-post": 20};
 const orderMap = {
   pre: internalOrderMap["user-pre"],
   default: internalOrderMap["user-default"],
   post: internalOrderMap["user-post"]
 };
 const metaCache = {};
-async function extractMetadata(code, loader = "ts") {
+function extractMetadata(code, loader = "ts") {
   let meta = {};
   if (metaCache[code]) {
     return metaCache[code];
   }
-  const js = await transform(code, { loader });
-  walk(parse(js.code, {
-    sourceType: "module",
-    ecmaVersion: "latest"
-  }), {
-    enter(_node) {
-      if (_node.type !== "CallExpression" || _node.callee.type !== "Identifier") {
-        return;
-      }
-      const node = _node;
-      const name = "name" in node.callee && node.callee.name;
-      if (name !== "defineNuxtPlugin" && name !== "definePayloadPlugin") {
-        return;
-      }
-      if (name === "definePayloadPlugin") {
-        meta.order = internalOrderMap["user-revivers"];
-      }
-      const metaArg = node.arguments[1];
-      if (metaArg) {
-        if (metaArg.type !== "ObjectExpression") {
-          throw new Error("Invalid plugin metadata");
-        }
-        meta = extractMetaFromObject(metaArg.properties);
-      }
-      const plugin = node.arguments[0];
-      if (plugin?.type === "ObjectExpression") {
-        meta = defu(extractMetaFromObject(plugin.properties), meta);
+  if (code.match(/defineNuxtPlugin\s*\([\w(]/)) {
+    return {};
+  }
+  parseAndWalk(code, `file.${loader}`, (node) => {
+    if (node.type !== "CallExpression" || node.callee.type !== "Identifier") {
+      return;
+    }
+    const name = "name" in node.callee && node.callee.name;
+    if (name !== "defineNuxtPlugin" && name !== "definePayloadPlugin") {
+      return;
+    }
+    if (name === "definePayloadPlugin") {
+      meta.order = internalOrderMap["user-revivers"];
+    }
+    const metaArg = node.arguments[1];
+    if (metaArg) {
+      if (metaArg.type !== "ObjectExpression") {
+        throw new Error("Invalid plugin metadata");
       }
-      meta.order = meta.order || orderMap[meta.enforce || "default"] || orderMap.default;
-      delete meta.enforce;
+      meta = extractMetaFromObject(metaArg.properties);
     }
+    const plugin = node.arguments[0];
+    if (plugin?.type === "ObjectExpression") {
+      meta = defu(extractMetaFromObject(plugin.properties), meta);
+    }
+    meta.order ||= orderMap[meta.enforce || "default"] || orderMap.default;
+    delete meta.enforce;
   });
   metaCache[code] = meta;
   return meta;
@@ -3986,7 +4717,7 @@ const keys = {
   dependsOn: "dependsOn"
 };
 function isMetadataKey(key) {
-  return key in keys;
+  return typeof key !== "string" ? key.name in keys : key in keys;
 }
 function extractMetaFromObject(properties) {
   const meta = {};
@@ -4022,72 +4753,69 @@ const RemovePluginMetadataPlugin = (nuxt) => createUnplugin(() => {
       if (!plugin) {
         return;
       }
-      const s = new MagicString(code);
+      if (!code.trim()) {
+        logger.warn(`Plugin \`${plugin.src}\` has no content.`);
+        return {
+          code: "export default () => {}",
+          map: null
+        };
+      }
       const exports = findExports(code);
       const defaultExport = exports.find((e) => e.type === "default" || e.name === "default");
       if (!defaultExport) {
         logger.warn(`Plugin \`${plugin.src}\` has no default export and will be ignored at build time. Add \`export default defineNuxtPlugin(() => {})\` to your plugin.`);
-        s.overwrite(0, code.length, "export default () => {}");
         return {
-          code: s.toString(),
-          map: nuxt.options.sourcemap.client || nuxt.options.sourcemap.server ? s.generateMap({ hires: true }) : null
+          code: "export default () => {}",
+          map: null
         };
       }
+      const s = new MagicString(code);
       let wrapped = false;
       const wrapperNames = /* @__PURE__ */ new Set(["defineNuxtPlugin", "definePayloadPlugin"]);
       try {
-        walk(this.parse(code, {
-          sourceType: "module",
-          ecmaVersion: "latest"
-        }), {
-          enter(_node) {
-            if (_node.type === "ImportSpecifier" && _node.imported.type === "Identifier" && (_node.imported.name === "defineNuxtPlugin" || _node.imported.name === "definePayloadPlugin")) {
-              wrapperNames.add(_node.local.name);
-            }
-            if (_node.type === "ExportDefaultDeclaration" && (_node.declaration.type === "FunctionDeclaration" || _node.declaration.type === "ArrowFunctionExpression")) {
-              if ("params" in _node.declaration && _node.declaration.params.length > 1) {
-                logger.warn(`Plugin \`${plugin.src}\` is in legacy Nuxt 2 format (context, inject) which is likely to be broken and will be ignored.`);
-                s.overwrite(0, code.length, "export default () => {}");
-                wrapped = true;
-                return;
-              }
-            }
-            if (_node.type !== "CallExpression" || _node.callee.type !== "Identifier") {
+        parseAndWalk(code, id, (node) => {
+          if (node.type === "ImportSpecifier" && node.imported.type === "Identifier" && (node.imported.name === "defineNuxtPlugin" || node.imported.name === "definePayloadPlugin")) {
+            wrapperNames.add(node.local.name);
+          }
+          if (node.type === "ExportDefaultDeclaration" && (node.declaration.type === "FunctionDeclaration" || node.declaration.type === "ArrowFunctionExpression")) {
+            if ("params" in node.declaration && node.declaration.params.length > 1) {
+              logger.warn(`Plugin \`${plugin.src}\` is in legacy Nuxt 2 format (context, inject) which is likely to be broken and will be ignored.`);
+              s.overwrite(0, code.length, "export default () => {}");
+              wrapped = true;
               return;
             }
-            const node = _node;
-            const name = "name" in node.callee && node.callee.name;
-            if (!name || !wrapperNames.has(name)) {
+          }
+          if (node.type !== "CallExpression" || node.callee.type !== "Identifier") {
+            return;
+          }
+          const name = "name" in node.callee && node.callee.name;
+          if (!name || !wrapperNames.has(name)) {
+            return;
+          }
+          wrapped = true;
+          if (node.arguments[0] && node.arguments[0].type !== "ObjectExpression") {
+            if ("params" in node.arguments[0] && node.arguments[0].params.length > 1) {
+              logger.warn(`Plugin \`${plugin.src}\` is in legacy Nuxt 2 format (context, inject) which is likely to be broken and will be ignored.`);
+              s.overwrite(0, code.length, "export default () => {}");
               return;
             }
-            wrapped = true;
-            if (node.arguments[0] && node.arguments[0].type !== "ObjectExpression") {
-              if ("params" in node.arguments[0] && node.arguments[0].params.length > 1) {
-                logger.warn(`Plugin \`${plugin.src}\` is in legacy Nuxt 2 format (context, inject) which is likely to be broken and will be ignored.`);
-                s.overwrite(0, code.length, "export default () => {}");
-                return;
-              }
-            }
-            if (!("order" in plugin) && !("name" in plugin)) {
-              return;
+          }
+          if (!("order" in plugin) && !("name" in plugin)) {
+            return;
+          }
+          for (const [argIndex, arg] of node.arguments.entries()) {
+            if (arg.type !== "ObjectExpression") {
+              continue;
             }
-            for (const [argIndex, _arg] of node.arguments.entries()) {
-              if (_arg.type !== "ObjectExpression") {
+            for (const [propertyIndex, property] of arg.properties.entries()) {
+              if (property.type === "SpreadElement" || !("name" in property.key)) {
                 continue;
               }
-              const arg = _arg;
-              for (const [propertyIndex, _property] of arg.properties.entries()) {
-                if (_property.type === "SpreadElement" || !("name" in _property.key)) {
-                  continue;
-                }
-                const property = _property;
-                const propertyKey = _property.key.name;
-                if (propertyKey === "order" || propertyKey === "enforce" || propertyKey === "name") {
-                  const _nextNode = arg.properties[propertyIndex + 1] || node.arguments[argIndex + 1];
-                  const nextNode = _nextNode;
-                  const nextIndex = nextNode?.start || arg.end - 1;
-                  s.remove(property.start, nextIndex);
-                }
+              const propertyKey = property.key.name;
+              if (propertyKey === "order" || propertyKey === "enforce" || propertyKey === "name") {
+                const nextNode = arg.properties[propertyIndex + 1] || node.arguments[argIndex + 1];
+                const nextIndex = nextNode?.start || arg.end - 1;
+                s.remove(property.start, nextIndex);
               }
             }
           }
@@ -4115,110 +4843,345 @@ const AsyncContextInjectionPlugin = (nuxt) => createUnplugin(() => {
     transformInclude(id) {
       return isVue(id, { type: ["template", "script"] });
     },
-    transform(code) {
-      if (!code.includes("_withAsyncContext")) {
-        return;
+    transform: {
+      filter: {
+        code: { include: /_withAsyncContext/ }
+      },
+      handler(code) {
+        const s = new MagicString(code);
+        s.prepend('import { withAsyncContext as _withAsyncContext } from "#app/composables/asyncContext";\n');
+        s.replace(/withAsyncContext as _withAsyncContext,?/, "");
+        if (s.hasChanged()) {
+          return {
+            code: s.toString(),
+            map: nuxt.options.sourcemap.client || nuxt.options.sourcemap.server ? s.generateMap({ hires: true }) : void 0
+          };
+        }
       }
-      const s = new MagicString(code);
-      s.prepend('import { withAsyncContext as _withAsyncContext } from "#app/composables/asyncContext";\n');
-      s.replace(/withAsyncContext as _withAsyncContext,?/, "");
-      if (s.hasChanged()) {
-        return {
-          code: s.toString(),
-          map: nuxt.options.sourcemap.client || nuxt.options.sourcemap.server ? s.generateMap({ hires: true }) : void 0
-        };
+    }
+  };
+});
+
+const stringTypes = ["Literal", "TemplateLiteral"];
+const NUXT_LIB_RE = /node_modules\/(?:nuxt|nuxt3|nuxt-nightly)\//;
+const SUPPORTED_EXT_RE = /\.(?:m?[jt]sx?|vue)/;
+const SCRIPT_RE = /(?<=<script[^>]*>)[\s\S]*?(?=<\/script>)/i;
+const ComposableKeysPlugin = (options) => createUnplugin(() => {
+  const composableMeta = {};
+  const composableLengths = /* @__PURE__ */ new Set();
+  const keyedFunctions = /* @__PURE__ */ new Set();
+  for (const { name, ...meta } of options.composables) {
+    composableMeta[name] = meta;
+    keyedFunctions.add(name);
+    composableLengths.add(meta.argumentLength);
+  }
+  const maxLength = Math.max(...composableLengths);
+  const KEYED_FUNCTIONS_RE = new RegExp(`\\b(${[...keyedFunctions].map((f) => escapeRE(f)).join("|")})\\b`);
+  return {
+    name: "nuxt:composable-keys",
+    enforce: "post",
+    transformInclude(id) {
+      const { pathname, search } = parseURL(decodeURIComponent(pathToFileURL(id).href));
+      return !NUXT_LIB_RE.test(pathname) && SUPPORTED_EXT_RE.test(pathname) && parseQuery(search).type !== "style" && !parseQuery(search).macro;
+    },
+    transform: {
+      filter: {
+        code: { include: KEYED_FUNCTIONS_RE }
+      },
+      handler(code, id) {
+        const { 0: script = code, index: codeIndex = 0 } = code.match(SCRIPT_RE) || { index: 0, 0: code };
+        const s = new MagicString(code);
+        let imports;
+        let count = 0;
+        const relativeID = isAbsolute(id) ? relative(options.rootDir, id) : id;
+        const { pathname: relativePathname } = parseURL(relativeID);
+        const scopeTracker = new ScopeTracker({
+          preserveExitedScopes: true
+        });
+        const parseResult = parseAndWalk(script, id, {
+          scopeTracker
+        });
+        scopeTracker.freeze();
+        walk(parseResult.program, {
+          scopeTracker,
+          enter(node) {
+            if (node.type !== "CallExpression" || node.callee.type !== "Identifier") {
+              return;
+            }
+            const name = node.callee.name;
+            if (!name || !keyedFunctions.has(name) || node.arguments.length >= maxLength) {
+              return;
+            }
+            imports ||= detectImportNames(script, composableMeta);
+            if (imports.has(name)) {
+              return;
+            }
+            const meta = composableMeta[name];
+            const declaration = scopeTracker.getDeclaration(name);
+            if (declaration && declaration.type !== "Import") {
+              let skip = true;
+              if (meta.source) {
+                skip = !matchWithStringOrRegex(relativePathname, meta.source);
+              }
+              if (skip) {
+                return;
+              }
+            }
+            if (node.arguments.length >= meta.argumentLength) {
+              return;
+            }
+            switch (name) {
+              case "useState":
+                if (stringTypes.includes(node.arguments[0]?.type)) {
+                  return;
+                }
+                break;
+              case "useFetch":
+              case "useLazyFetch":
+                if (stringTypes.includes(node.arguments[1]?.type)) {
+                  return;
+                }
+                break;
+              case "useAsyncData":
+              case "useLazyAsyncData":
+                if (stringTypes.includes(node.arguments[0]?.type) || stringTypes.includes(node.arguments[node.arguments.length - 1]?.type)) {
+                  return;
+                }
+                break;
+            }
+            const newCode = code.slice(codeIndex + node.start, codeIndex + node.end - 1).trim();
+            const endsWithComma = newCode[newCode.length - 1] === ",";
+            s.appendLeft(
+              codeIndex + node.end - 1,
+              (node.arguments.length && !endsWithComma ? ", " : "") + "'$" + hash(`${relativeID}-${++count}`).slice(0, 10) + "'"
+            );
+          }
+        });
+        if (s.hasChanged()) {
+          return {
+            code: s.toString(),
+            map: options.sourcemap ? s.generateMap({ hires: true }) : void 0
+          };
+        }
       }
     }
   };
 });
+const NUXT_IMPORT_RE = /nuxt|#app|#imports/;
+function detectImportNames(code, composableMeta) {
+  const names = /* @__PURE__ */ new Set();
+  function addName(name, specifier) {
+    const source = composableMeta[name]?.source;
+    if (source && matchWithStringOrRegex(specifier, source)) {
+      return;
+    }
+    names.add(name);
+  }
+  for (const i of findStaticImports(code)) {
+    if (NUXT_IMPORT_RE.test(i.specifier)) {
+      continue;
+    }
+    const { namedImports = {}, defaultImport, namespacedImport } = parseStaticImport(i);
+    for (const name in namedImports) {
+      addName(namedImports[name], i.specifier);
+    }
+    if (defaultImport) {
+      addName(defaultImport, i.specifier);
+    }
+    if (namespacedImport) {
+      addName(namespacedImport, i.specifier);
+    }
+  }
+  return names;
+}
 
-function resolveDeepImportsPlugin(nuxt) {
-  const exclude = ["virtual:", "\0virtual:", "/__skip_vite"];
+const VIRTUAL_RE = /^\0?virtual:(?:nuxt:)?/;
+function ResolveDeepImportsPlugin(nuxt) {
+  const exclude = ["virtual:", "\0virtual:", "/__skip_vite", "@vitest/"];
   let conditions;
   return {
     name: "nuxt:resolve-bare-imports",
     enforce: "post",
     configResolved(config) {
-      conditions = config.mode === "test" ? [...config.resolve.conditions, "import", "require"] : config.resolve.conditions;
+      const resolvedConditions = /* @__PURE__ */ new Set([nuxt.options.dev ? "development" : "production", ...config.resolve.conditions]);
+      if (resolvedConditions.has("browser")) {
+        resolvedConditions.add("web");
+        resolvedConditions.add("import");
+        resolvedConditions.add("module");
+        resolvedConditions.add("default");
+      }
+      if (config.mode === "test") {
+        resolvedConditions.add("import");
+        resolvedConditions.add("require");
+      }
+      conditions = [...resolvedConditions];
     },
     async resolveId(id, importer) {
-      if (!importer || isAbsolute(id) || !isAbsolute(importer) && !importer.startsWith("virtual:") && !importer.startsWith("\0virtual:") || exclude.some((e) => id.startsWith(e))) {
+      if (!importer || isAbsolute(id) || !isAbsolute(importer) && !VIRTUAL_RE.test(importer) || exclude.some((e) => id.startsWith(e))) {
         return;
       }
       const normalisedId = resolveAlias(normalize(id), nuxt.options.alias);
-      const normalisedImporter = importer.replace(/^\0?virtual:(?:nuxt:)?/, "");
+      const isNuxtTemplate = importer.startsWith("virtual:nuxt");
+      const normalisedImporter = (isNuxtTemplate ? decodeURIComponent(importer) : importer).replace(VIRTUAL_RE, "");
+      if (nuxt.options.experimental.templateImportResolution !== false && isNuxtTemplate) {
+        const template = nuxt.options.build.templates.find((t) => resolve(nuxt.options.buildDir, t.filename) === normalisedImporter);
+        if (template?._path) {
+          const res2 = await this.resolve?.(normalisedId, template._path, { skipSelf: true });
+          if (res2 !== void 0 && res2 !== null) {
+            return res2;
+          }
+        }
+      }
       const dir = parseNodeModulePath(normalisedImporter).dir || pkgDir;
-      return await this.resolve?.(normalisedId, dir, { skipSelf: true }) ?? await resolvePath(id, {
-        url: [dir, ...nuxt.options.modulesDir],
-        conditions
-      }).catch(() => {
+      const res = await this.resolve?.(normalisedId, dir, { skipSelf: true });
+      if (res !== void 0 && res !== null) {
+        return res;
+      }
+      const path = resolveModulePath(id, {
+        from: [dir, ...nuxt.options.modulesDir].map((d) => directoryToURL(d)),
+        suffixes: ["", "index"],
+        conditions,
+        try: true
+      });
+      if (!path) {
         logger.debug("Could not resolve id", id, importer);
         return null;
-      });
+      }
+      return normalize(path);
+    }
+  };
+}
+
+const runtimeDependencies = [
+  // other deps
+  "devalue",
+  "klona",
+  // unjs ecosystem
+  "defu",
+  "ufo",
+  "h3",
+  "destr",
+  "consola",
+  "hookable",
+  "unctx",
+  "cookie-es",
+  "perfect-debounce",
+  "radix3",
+  "ohash",
+  "pathe",
+  "uncrypto"
+];
+
+function ResolveExternalsPlugin(nuxt) {
+  let external = /* @__PURE__ */ new Set();
+  return {
+    name: "nuxt:resolve-externals",
+    enforce: "pre",
+    async configResolved() {
+      if (!nuxt.options.dev) {
+        const runtimeNitroDependencies = await tryImportModule("nitropack/package.json", {
+          url: new URL(import.meta.url)
+        })?.then((r) => r?.dependencies ? Object.keys(r.dependencies) : []).catch(() => []) || [];
+        external = /* @__PURE__ */ new Set([
+          // explicit dependencies we use in our ssr renderer - these can be inlined (if necessary) in the nitro build
+          "unhead",
+          "@unhead/vue",
+          "@nuxt/devalue",
+          "rou3",
+          "unstorage",
+          // ensure we only have one version of vue if nitro is going to inline anyway
+          ...nuxt._nitro.options.inlineDynamicImports ? ["vue", "@vue/server-renderer"] : [],
+          ...runtimeDependencies,
+          // dependencies we might share with nitro - these can be inlined (if necessary) in the nitro build
+          ...runtimeNitroDependencies
+        ]);
+      }
+    },
+    async resolveId(id, importer) {
+      if (!external.has(id)) {
+        return;
+      }
+      const res = await this.resolve?.(id, importer, { skipSelf: true });
+      if (res !== void 0 && res !== null) {
+        if (res.id === id) {
+          res.id = resolveModulePath(res.id, {
+            try: true,
+            from: importer,
+            extensions: nuxt.options.extensions
+          }) || res.id;
+        }
+        return {
+          ...res,
+          external: "absolute"
+        };
+      }
     }
   };
 }
 
-function prehydrateTransformPlugin(nuxt) {
+function transformAndMinify(input, options) {
+  const oxcOptions = tryUseNuxt()?.options.oxc;
+  const transformResult = transform("", input, { ...oxcOptions?.transform.options, ...options });
+  const minifyResult = minify("", transformResult.code, { compress: { target: oxcOptions?.transform.options.target || "esnext" } });
+  return {
+    ...transformResult,
+    ...minifyResult
+  };
+}
+
+function PrehydrateTransformPlugin(options = {}) {
   return createUnplugin(() => ({
     name: "nuxt:prehydrate-transform",
     transformInclude(id) {
       return isJS(id) || isVue(id, { type: ["script"] });
     },
-    async transform(code, id) {
-      if (!code.includes("onPrehydrate(")) {
-        return;
-      }
-      const s = new MagicString(code);
-      const promises = [];
-      walk(parse(code, {
-        sourceType: "module",
-        ecmaVersion: "latest",
-        ranges: true
-      }), {
-        enter(_node) {
-          if (_node.type !== "CallExpression" || _node.callee.type !== "Identifier") {
+    transform: {
+      filter: {
+        code: { include: /onPrehydrate\(/ }
+      },
+      handler(code, id) {
+        const s = new MagicString(code);
+        parseAndWalk(code, id, (node) => {
+          if (node.type !== "CallExpression" || node.callee.type !== "Identifier") {
             return;
           }
-          const node = _node;
-          const name = "name" in node.callee && node.callee.name;
-          if (name === "onPrehydrate") {
-            if (!node.arguments[0]) {
+          if (node.callee.name === "onPrehydrate") {
+            const callback = node.arguments[0];
+            if (!callback) {
               return;
             }
-            if (node.arguments[0].type !== "ArrowFunctionExpression" && node.arguments[0].type !== "FunctionExpression") {
+            if (callback.type !== "ArrowFunctionExpression" && callback.type !== "FunctionExpression") {
               return;
             }
-            const needsAttr = node.arguments[0].params.length > 0;
-            const { start, end } = node.arguments[0];
-            const p = transform(`forEach(${code.slice(start, end)})`, { loader: "ts", minify: true });
-            promises.push(p.then(({ code: result }) => {
-              const cleaned = result.slice("forEach".length).replace(/;\s+$/, "");
+            const needsAttr = callback.params.length > 0;
+            try {
+              const { code: result } = transformAndMinify(`forEach(${code.slice(callback.start, callback.end)})`, { lang: "ts" });
+              const cleaned = result.slice("forEach".length).replace(/;$/, "");
               const args = [JSON.stringify(cleaned)];
               if (needsAttr) {
-                args.push(JSON.stringify(hash(result)));
+                args.push(JSON.stringify(hash(result).slice(0, 10)));
               }
-              s.overwrite(start, end, args.join(", "));
-            }));
+              s.overwrite(callback.start, callback.end, args.join(", "));
+            } catch (e) {
+              console.error(`[nuxt] Could not transform onPrehydrate in \`${id}\`:`, e);
+            }
           }
+        });
+        if (s.hasChanged()) {
+          return {
+            code: s.toString(),
+            map: options.sourcemap ? s.generateMap({ hires: true }) : void 0
+          };
         }
-      });
-      await Promise.all(promises).catch((e) => {
-        console.error(`[nuxt] Could not transform onPrehydrate in \`${id}\`:`, e);
-      });
-      if (s.hasChanged()) {
-        return {
-          code: s.toString(),
-          map: nuxt.options.sourcemap.server || nuxt.options.sourcemap.client ? s.generateMap({ hires: true }) : void 0
-        };
       }
     }
   }));
 }
 
 const PREFIX = "virtual:nuxt:";
+const PREFIX_RE = /^\/?virtual:nuxt:/;
 const RELATIVE_ID_RE = /^\.{1,2}[\\/]/;
-const VirtualFSPlugin = (nuxt, options) => createUnplugin(() => {
+const VirtualFSPlugin = (nuxt, options) => createUnplugin((_, meta) => {
   const extensions = ["", ...nuxt.options.extensions];
   const alias = { ...nuxt.options.alias, ...options.alias };
   const resolveWithExt = (id) => {
@@ -4231,54 +5194,133 @@ const VirtualFSPlugin = (nuxt, options) => createUnplugin(() => {
       }
     }
   };
+  function resolveId(id, importer) {
+    id = resolveAlias(id, alias);
+    if (PREFIX_RE.test(id)) {
+      id = withoutPrefix(decodeURIComponent(id));
+    }
+    const search = id.match(QUERY_RE)?.[0] || "";
+    id = withoutQuery(id);
+    if (process.platform === "win32" && isAbsolute(id)) {
+      id = resolve(id);
+    }
+    const resolvedId = resolveWithExt(id);
+    if (resolvedId) {
+      return PREFIX + encodeURIComponent(resolvedId) + search;
+    }
+    if (importer && RELATIVE_ID_RE.test(id)) {
+      const path = resolve(dirname(withoutPrefix(decodeURIComponent(importer))), id);
+      const resolved = resolveWithExt(path);
+      if (resolved) {
+        return PREFIX + encodeURIComponent(resolved) + search;
+      }
+    }
+  }
   return {
     name: "nuxt:virtual",
-    resolveId(id, importer) {
-      id = resolveAlias(id, alias);
-      if (process.platform === "win32" && isAbsolute(id)) {
-        id = resolve(id);
-      }
-      const resolvedId = resolveWithExt(id);
-      if (resolvedId) {
-        return PREFIX + resolvedId;
-      }
-      if (importer && RELATIVE_ID_RE.test(id)) {
-        const path = resolve(dirname(withoutPrefix(importer)), id);
-        const resolved = resolveWithExt(path);
-        if (resolved) {
-          return PREFIX + resolved;
+    resolveId: meta.framework === "vite" ? void 0 : { order: "pre", handler: resolveId },
+    vite: {
+      resolveId: {
+        order: "pre",
+        handler(id, importer) {
+          const res = resolveId(id, importer);
+          if (res) {
+            return res;
+          }
+          if (importer && PREFIX_RE.test(importer) && RELATIVE_ID_RE.test(id)) {
+            return this.resolve?.(id, withoutPrefix(decodeURIComponent(importer)), { skipSelf: true });
+          }
         }
       }
     },
     loadInclude(id) {
-      return id.startsWith(PREFIX) && withoutPrefix(id) in nuxt.vfs;
+      return PREFIX_RE.test(id) && withoutQuery(withoutPrefix(decodeURIComponent(id))) in nuxt.vfs;
     },
     load(id) {
+      const key = withoutQuery(withoutPrefix(decodeURIComponent(id)));
       return {
-        code: nuxt.vfs[withoutPrefix(id)] || "",
+        code: nuxt.vfs[key] || "",
         map: null
       };
     }
   };
 });
 function withoutPrefix(id) {
-  return id.startsWith(PREFIX) ? id.slice(PREFIX.length) : id;
+  return id.replace(PREFIX_RE, "");
+}
+const QUERY_RE = /\?.*$/;
+function withoutQuery(id) {
+  return id.replace(QUERY_RE, "");
 }
 
 function createNuxt(options) {
   const hooks = createHooks();
+  const { callHook, callHookParallel, callHookWith } = hooks;
+  hooks.callHook = (...args) => runWithNuxtContext(nuxt, () => callHook(...args));
+  hooks.callHookParallel = (...args) => runWithNuxtContext(nuxt, () => callHookParallel(...args));
+  hooks.callHookWith = (...args) => runWithNuxtContext(nuxt, () => callHookWith(...args));
   const nuxt = {
+    __name: randomUUID(),
     _version: version,
-    options,
+    _asyncLocalStorageModule: options.experimental.debugModuleMutation ? new AsyncLocalStorage() : void 0,
     hooks,
     callHook: hooks.callHook,
     addHooks: hooks.addHooks,
     hook: hooks.hook,
-    ready: () => initNuxt(nuxt),
+    ready: () => runWithNuxtContext(nuxt, () => initNuxt(nuxt)),
     close: () => hooks.callHook("close", nuxt),
     vfs: {},
-    apps: {}
+    apps: {},
+    runWithContext: (fn) => runWithNuxtContext(nuxt, fn),
+    options
   };
+  if (options.experimental.debugModuleMutation) {
+    const proxiedOptions = /* @__PURE__ */ new WeakMap();
+    Object.defineProperty(nuxt, "options", {
+      get() {
+        const currentModule = nuxt._asyncLocalStorageModule.getStore();
+        if (!currentModule) {
+          return options;
+        }
+        if (proxiedOptions.has(currentModule)) {
+          return proxiedOptions.get(currentModule);
+        }
+        nuxt._debug ||= {};
+        nuxt._debug.moduleMutationRecords ||= [];
+        const proxied = onChange(options, (keys, newValue, previousValue, applyData) => {
+          if (newValue === previousValue && !applyData) {
+            return;
+          }
+          let value = applyData?.args ?? newValue;
+          if (Array.isArray(value)) {
+            value = [...value];
+          } else if (typeof value === "object") {
+            value = { ...value };
+          }
+          nuxt._debug.moduleMutationRecords.push({
+            module: currentModule,
+            keys,
+            target: "nuxt.options",
+            value,
+            timestamp: Date.now(),
+            method: applyData?.name
+          });
+        }, {
+          ignoreUnderscores: true,
+          ignoreSymbols: true,
+          pathAsArray: true
+        });
+        proxiedOptions.set(currentModule, proxied);
+        return proxied;
+      }
+    });
+  }
+  if (!nuxtCtx.tryUse()) {
+    nuxtCtx.set(nuxt);
+    nuxt.hook("close", () => {
+      nuxtCtx.unset();
+    });
+  }
   hooks.hookOnce("close", () => {
     hooks.removeAllHooks();
   });
@@ -4293,12 +5335,10 @@ const nightlies = {
   "@nuxt/kit": "@nuxt/kit-nightly"
 };
 const keyDependencies = [
-  "@nuxt/kit",
-  "@nuxt/schema"
+  "@nuxt/kit"
 ];
 let warnedAboutCompatDate = false;
 async function initNuxt(nuxt) {
-  var _a;
   for (const config of nuxt.options._layers.map((layer) => layer.config).reverse()) {
     if (config.hooks) {
       nuxt.hooks.addHooks(config.hooks);
@@ -4306,62 +5346,12 @@ async function initNuxt(nuxt) {
   }
   nuxt.options.compatibilityDate = resolveCompatibilityDatesFromEnv(nuxt.options.compatibilityDate);
   if (!nuxt.options.compatibilityDate.default) {
-    const todaysDate = formatDate(/* @__PURE__ */ new Date());
     nuxt.options.compatibilityDate.default = fallbackCompatibilityDate;
-    const shouldShowPrompt = nuxt.options.dev && hasTTY && !isCI;
-    if (!shouldShowPrompt) {
-      logger.info(`Using \`${fallbackCompatibilityDate}\` as fallback compatibility date.`);
-    }
-    async function promptAndUpdate() {
-      const result = await consola.prompt(`Do you want to update your ${colorize("cyan", "nuxt.config")} to set ${colorize("cyan", `compatibilityDate: '${todaysDate}'`)}?`, {
-        type: "confirm",
-        default: true
-      });
-      if (result !== true) {
-        logger.info(`Using \`${fallbackCompatibilityDate}\` as fallback compatibility date.`);
-        return;
-      }
-      try {
-        const res = await updateConfig({
-          configFile: "nuxt.config",
-          cwd: nuxt.options.rootDir,
-          async onCreate({ configFile }) {
-            const shallCreate = await consola.prompt(`Do you want to create ${colorize("cyan", relative(nuxt.options.rootDir, configFile))}?`, {
-              type: "confirm",
-              default: true
-            });
-            if (shallCreate !== true) {
-              return false;
-            }
-            return _getDefaultNuxtConfig();
-          },
-          onUpdate(config) {
-            config.compatibilityDate = todaysDate;
-          }
-        });
-        if (res?.configFile) {
-          nuxt.options.compatibilityDate = resolveCompatibilityDatesFromEnv(todaysDate);
-          consola.success(`Compatibility date set to \`${todaysDate}\` in \`${relative(nuxt.options.rootDir, res.configFile)}\``);
-          return;
-        }
-      } catch (err) {
-        const message = err instanceof Error ? err.message : err;
-        consola.error(`Failed to update config: ${message}`);
-      }
-      logger.info(`Using \`${fallbackCompatibilityDate}\` as fallback compatibility date.`);
+    if (nuxt.options.dev && hasTTY && !isCI && !nuxt.options.test && !warnedAboutCompatDate) {
+      warnedAboutCompatDate = true;
+      consola.warn(`We recommend adding \`compatibilityDate: '${formatDate("latest")}'\` to your \`nuxt.config\` file.
+Using \`${fallbackCompatibilityDate}\` as fallback. More info at: ${colors.underline("https://nitro.build/deploy#compatibility-date")}`);
     }
-    nuxt.hooks.hookOnce("nitro:init", (nitro2) => {
-      if (warnedAboutCompatDate) {
-        return;
-      }
-      nitro2.hooks.hookOnce("compiled", () => {
-        warnedAboutCompatDate = true;
-        logger.info(`Nuxt now supports pinning the behavior of provider and deployment presets with a compatibility date. We recommend you specify a \`compatibilityDate\` in your \`nuxt.config\` file, or set an environment variable, such as \`COMPATIBILITY_DATE=${todaysDate}\`.`);
-        if (shouldShowPrompt) {
-          promptAndUpdate();
-        }
-      });
-    });
   }
   const layersDir = withTrailingSlash(resolve(nuxt.options.rootDir, "layers"));
   nuxt.hook("builder:watch", (event, relativePath) => {
@@ -4372,35 +5362,40 @@ async function initNuxt(nuxt) {
       }
     }
   });
-  nuxtCtx.set(nuxt);
-  nuxt.hook("close", () => nuxtCtx.unset());
-  const coreTypePackages = nuxt.options.typescript.hoist || [];
+  if (nuxt.options.typescript.builder !== false) {
+    const envMap = {
+      // defaults from `builder` based on package name
+      "@nuxt/rspack-builder": "@rspack/core/module",
+      "@nuxt/vite-builder": "vite/client",
+      "@nuxt/webpack-builder": "webpack/module",
+      // simpler overrides from `typescript.builder` for better DX
+      "rspack": "@rspack/core/module",
+      "vite": "vite/client",
+      "webpack": "webpack/module",
+      // default 'merged' builder environment for module authors
+      "shared": "@nuxt/schema/builder-env"
+    };
+    const overrideEnv = nuxt.options.typescript.builder && envMap[nuxt.options.typescript.builder];
+    const defaultEnv = typeof nuxt.options.builder === "string" ? envMap[nuxt.options.builder] : false;
+    const environmentTypes = overrideEnv || defaultEnv;
+    if (environmentTypes) {
+      nuxt.options.typescript.hoist.push(environmentTypes);
+      addTypeTemplate({
+        filename: "types/builder-env.d.ts",
+        getContents: () => genImport(environmentTypes)
+      });
+    }
+  }
   const packageJSON = await readPackageJSON(nuxt.options.rootDir).catch(() => ({}));
-  const NESTED_PKG_RE = /^[^@]+\//;
   nuxt._dependencies = /* @__PURE__ */ new Set([...Object.keys(packageJSON.dependencies || {}), ...Object.keys(packageJSON.devDependencies || {})]);
-  const paths = Object.fromEntries(await Promise.all(coreTypePackages.map(async (pkg) => {
-    const [_pkg = pkg, _subpath] = NESTED_PKG_RE.test(pkg) ? pkg.split("/") : [pkg];
-    const subpath = _subpath ? "/" + _subpath : "";
-    if (nuxt._dependencies?.has(_pkg) && !(_pkg in nightlies)) {
-      return [];
-    }
-    if (_pkg in nightlies) {
-      const nightly = nightlies[_pkg];
-      const path2 = await resolveTypePath(nightly + subpath, subpath, nuxt.options.modulesDir);
-      if (path2) {
-        return [[pkg, [path2]], [nightly + subpath, [path2]]];
-      }
-    }
-    const path = await resolveTypePath(_pkg + subpath, subpath, nuxt.options.modulesDir);
-    if (path) {
-      return [[pkg, [path]]];
-    }
-    return [];
-  })).then((r) => r.flat()));
-  nuxt.options.nitro.typescript = defu$1(nuxt.options.nitro.typescript, {
-    tsConfig: { compilerOptions: { paths: { ...paths } } }
+  let paths;
+  nuxt.hook("nitro:config", async (nitroConfig) => {
+    paths ||= await resolveTypescriptPaths(nuxt);
+    nitroConfig.typescript = defu$1(nitroConfig.typescript, {
+      tsConfig: { compilerOptions: { paths: { ...paths } } }
+    });
   });
-  nuxt.hook("prepare:types", (opts) => {
+  nuxt.hook("prepare:types", async (opts) => {
     opts.references.push({ types: "nuxt" });
     opts.references.push({ path: resolve(nuxt.options.buildDir, "types/app-defaults.d.ts") });
     opts.references.push({ path: resolve(nuxt.options.buildDir, "types/plugins.d.ts") });
@@ -4410,6 +5405,7 @@ async function initNuxt(nuxt) {
     opts.references.push({ path: resolve(nuxt.options.buildDir, "types/build.d.ts") });
     opts.references.push({ path: resolve(nuxt.options.buildDir, "types/schema.d.ts") });
     opts.references.push({ path: resolve(nuxt.options.buildDir, "types/app.config.d.ts") });
+    paths ||= await resolveTypescriptPaths(nuxt);
     opts.tsConfig.compilerOptions = defu$1(opts.tsConfig.compilerOptions, { paths: { ...paths } });
     for (const layer of nuxt.options._layers) {
       const declaration = join(layer.cwd, "index.d.ts");
@@ -4420,12 +5416,17 @@ async function initNuxt(nuxt) {
   });
   if (nuxt.options.scripts) {
     if (!nuxt.options._modules.some((m) => m === "@nuxt/scripts" || m === "@nuxt/scripts-nightly")) {
-      await import('./chunks/features.mjs').then(({ installNuxtModule }) => installNuxtModule("@nuxt/scripts"));
+      installNuxtModule("@nuxt/scripts");
     }
   }
   addBuildPlugin(VirtualFSPlugin(nuxt, { mode: "server" }), { client: false });
   addBuildPlugin(VirtualFSPlugin(nuxt, { mode: "client", alias: { "#internal/nitro": join(nuxt.options.buildDir, "nitro.client.mjs") } }), { server: false });
   addBuildPlugin(RemovePluginMetadataPlugin(nuxt));
+  addBuildPlugin(ComposableKeysPlugin({
+    sourcemap: !!nuxt.options.sourcemap.server || !!nuxt.options.sourcemap.client,
+    rootDir: nuxt.options.rootDir,
+    composables: nuxt.options.optimization.keyedComposables
+  }));
   const sharedDir = withTrailingSlash(resolve(nuxt.options.rootDir, nuxt.options.dir.shared));
   const relativeSharedDir = withTrailingSlash(relative(nuxt.options.rootDir, resolve(nuxt.options.rootDir, nuxt.options.dir.shared)));
   const sharedPatterns = [/^#shared\//, new RegExp("^" + escapeRE(sharedDir)), new RegExp("^" + escapeRE(relativeSharedDir))];
@@ -4445,9 +5446,10 @@ async function initNuxt(nuxt) {
   addVitePlugin(() => Object.assign(ImpoundPlugin.vite({ ...nuxtProtectionConfig, error: false }), { name: "nuxt:import-protection" }), { client: false });
   addVitePlugin(() => Object.assign(ImpoundPlugin.vite({ ...nuxtProtectionConfig, error: true }), { name: "nuxt:import-protection" }), { server: false });
   addWebpackPlugin(() => ImpoundPlugin.webpack(nuxtProtectionConfig));
-  addVitePlugin(() => resolveDeepImportsPlugin(nuxt), { client: false });
-  addVitePlugin(() => resolveDeepImportsPlugin(nuxt), { server: false });
-  addBuildPlugin(prehydrateTransformPlugin(nuxt));
+  addVitePlugin(() => ResolveDeepImportsPlugin(nuxt), { client: false });
+  addVitePlugin(() => ResolveDeepImportsPlugin(nuxt), { server: false });
+  addVitePlugin(() => ResolveExternalsPlugin(nuxt), { client: false, prepend: true });
+  addBuildPlugin(PrehydrateTransformPlugin({ sourcemap: !!nuxt.options.sourcemap.server || !!nuxt.options.sourcemap.client }));
   if (nuxt.options.experimental.localLayerAliases) {
     addBuildPlugin(LayerAliasingPlugin({
       sourcemap: !!nuxt.options.sourcemap.server || !!nuxt.options.sourcemap.client,
@@ -4457,12 +5459,12 @@ async function initNuxt(nuxt) {
       layers: nuxt.options._layers.slice(1)
     }));
   }
-  nuxt.hook("modules:done", async () => {
+  nuxt.hook("modules:done", () => {
     addBuildPlugin(UnctxTransformPlugin({
       sourcemap: !!nuxt.options.sourcemap.server || !!nuxt.options.sourcemap.client,
       transformerOptions: {
         ...nuxt.options.optimization.asyncTransforms,
-        helperModule: await tryResolveModule("unctx", nuxt.options.modulesDir) ?? "unctx"
+        helperModule: "unctx"
       }
     }));
     if (Object.keys(nuxt.options.optimization.treeShake.composables.server).length) {
@@ -4488,7 +5490,7 @@ async function initNuxt(nuxt) {
   }
   if (nuxt.options.dev && nuxt.options.features.devLogs) {
     addPlugin(resolve(nuxt.options.appDir, "plugins/dev-server-logs"));
-    addServerPlugin(resolve(distDir, "core/runtime/nitro/dev-server-logs"));
+    addServerPlugin(resolve(distDir, "core/runtime/nitro/plugins/dev-server-logs"));
     nuxt.options.nitro = defu$1(nuxt.options.nitro, {
       externals: {
         inline: [/#internal\/dev-server-logs-options/]
@@ -4499,7 +5501,7 @@ async function initNuxt(nuxt) {
     });
   }
   if (nuxt.options.experimental.asyncContext) {
-    addBuildPlugin(AsyncContextInjectionPlugin(nuxt));
+    addBuildPlugin(AsyncContextInjectionPlugin(nuxt), { client: false });
   }
   if (nuxt.options.features.noScripts && !nuxt.options.dev) {
     nuxt.hook("build:manifest", async (manifest) => {
@@ -4515,27 +5517,34 @@ async function initNuxt(nuxt) {
   nuxt.options.build.transpile.push(
     ...nuxt.options._layers.filter((i) => i.cwd.includes("node_modules")).map((i) => i.cwd)
   );
-  nuxt.options.modulesDir.push(...nuxt.options._layers.map((l) => resolve(l.cwd, "node_modules")));
+  const locallyScannedLayersDirs = nuxt.options._layers.map((l) => resolve(l.cwd, "layers").replace(/\/?$/, "/"));
+  nuxt.options.modulesDir.push(...nuxt.options._layers.filter((l) => l.cwd !== nuxt.options.rootDir && locallyScannedLayersDirs.every((dir) => !l.cwd.startsWith(dir))).map((l) => resolve(l.cwd, "node_modules")));
   await nuxt.callHook("modules:before");
   const modulesToInstall = /* @__PURE__ */ new Map();
-  const watchedPaths = /* @__PURE__ */ new Set();
+  const modulePaths = /* @__PURE__ */ new Set();
   const specifiedModules = /* @__PURE__ */ new Set();
   for (const _mod of nuxt.options.modules) {
     const mod = Array.isArray(_mod) ? _mod[0] : _mod;
     if (typeof mod !== "string") {
       continue;
     }
-    const modPath = await resolvePath$1(resolveAlias(mod), { fallbackToOriginal: true });
-    specifiedModules.add(modPath);
+    const modAlias = resolveAlias(mod);
+    const modPath = resolveModulePath(modAlias, {
+      try: true,
+      from: nuxt.options.modulesDir.map((m) => directoryToURL(m.replace(/\/node_modules\/?$/, "/"))),
+      suffixes: ["nuxt", "nuxt/index", "module", "module/index", "", "index"],
+      extensions: [".js", ".mjs", ".cjs", ".ts", ".mts", ".cts"]
+    });
+    specifiedModules.add(modPath || modAlias);
   }
   for (const config of nuxt.options._layers.map((layer) => layer.config).reverse()) {
-    const modulesDir = (config.rootDir === nuxt.options.rootDir ? nuxt.options : config).dir?.modules || "modules";
+    const modulesDir = (config.rootDir === nuxt.options.rootDir ? nuxt.options.dir : config.dir)?.modules || "modules";
     const layerModules = await resolveFiles(config.srcDir, [
       `${modulesDir}/*{${nuxt.options.extensions.join(",")}}`,
       `${modulesDir}/*/index{${nuxt.options.extensions.join(",")}}`
     ]);
     for (const mod of layerModules) {
-      watchedPaths.add(mod);
+      modulePaths.add(mod);
       if (specifiedModules.has(mod)) {
         continue;
       }
@@ -4543,6 +5552,7 @@ async function initNuxt(nuxt) {
       modulesToInstall.set(mod, {});
     }
   }
+  nuxt.options.watch.push(...modulePaths);
   for (const key of ["modules", "_modules"]) {
     for (const item of nuxt.options[key]) {
       if (item) {
@@ -4553,12 +5563,15 @@ async function initNuxt(nuxt) {
       }
     }
   }
-  addComponent({
-    name: "NuxtWelcome",
-    priority: 10,
-    // built-in that we do not expect the user to override
-    filePath: resolve(nuxt.options.appDir, "components/welcome")
-  });
+  const islandsConfig = nuxt.options.experimental.componentIslands;
+  if (nuxt.options.dev || !(typeof islandsConfig === "object" && islandsConfig.selectiveClient === "deep")) {
+    addComponent({
+      name: "NuxtWelcome",
+      priority: 10,
+      // built-in that we do not expect the user to override
+      filePath: resolve(nuxt.options.appDir, "components/welcome")
+    });
+  }
   addComponent({
     name: "NuxtLayout",
     priority: 10,
@@ -4601,6 +5614,12 @@ async function initNuxt(nuxt) {
     // built-in that we do not expect the user to override
     filePath: resolve(nuxt.options.appDir, "components/nuxt-loading-indicator")
   });
+  addComponent({
+    name: "NuxtTime",
+    priority: 10,
+    // built-in that we do not expect the user to override
+    filePath: resolve(nuxt.options.appDir, "components/nuxt-time.vue")
+  });
   addComponent({
     name: "NuxtRouteAnnouncer",
     priority: 10,
@@ -4632,38 +5651,18 @@ async function initNuxt(nuxt) {
       export: name,
       priority: -1,
       filePath: resolve(nuxt.options.appDir, "components/nuxt-stubs"),
-      // @ts-expect-error TODO: refactor to nuxi
+      // @ts-expect-error TODO: refactor to @nuxt/cli
       _internal_install: "@nuxt/image"
     });
   }
   if (nuxt.options.builder === "@nuxt/webpack-builder") {
     addPlugin(resolve(nuxt.options.appDir, "plugins/preload.server"));
   }
-  const envMap = {
-    // defaults from `builder` based on package name
-    "@nuxt/rspack-builder": "@rspack/core/module",
-    "@nuxt/vite-builder": "vite/client",
-    "@nuxt/webpack-builder": "webpack/module",
-    // simpler overrides from `typescript.builder` for better DX
-    "rspack": "@rspack/core/module",
-    "vite": "vite/client",
-    "webpack": "webpack/module",
-    // default 'merged' builder environment for module authors
-    "shared": "@nuxt/schema/builder-env"
-  };
-  nuxt.hook("prepare:types", ({ references }) => {
-    if (nuxt.options.typescript.builder === false) {
-      return;
-    }
-    const overrideEnv = nuxt.options.typescript.builder && envMap[nuxt.options.typescript.builder];
-    const defaultEnv = typeof nuxt.options.builder === "string" ? envMap[nuxt.options.builder] : false;
-    const types = overrideEnv || defaultEnv;
-    if (types) {
-      references.push({ types });
-    }
-  });
-  if (nuxt.options.debug) {
-    addPlugin(resolve(nuxt.options.appDir, "plugins/debug"));
+  if (nuxt.options.debug && nuxt.options.debug.hooks && (nuxt.options.debug.hooks === true || nuxt.options.debug.hooks.client)) {
+    addPlugin(resolve(nuxt.options.appDir, "plugins/debug-hooks"));
+  }
+  if (nuxt.options.experimental.browserDevtoolsTiming) {
+    addPlugin(resolve(nuxt.options.appDir, "plugins/browser-devtools-timing.client"));
   }
   for (const [key, options] of modulesToInstall) {
     await installModule(key, options);
@@ -4678,9 +5677,22 @@ async function initNuxt(nuxt) {
       // built-in that we do not expect the user to override
       filePath: resolve(nuxt.options.appDir, "components/nuxt-island")
     });
+    addServerTemplate({
+      filename: "#internal/nuxt/island-renderer.mjs",
+      getContents() {
+        if (nuxt.options.dev || nuxt.options.experimental.componentIslands !== "auto" || nuxt.apps.default?.pages?.some((p) => p.mode === "server") || nuxt.apps.default?.components?.some((c) => c.mode === "server" && !nuxt.apps.default?.components.some((other) => other.pascalName === c.pascalName && other.mode === "client"))) {
+          return `export { default } from '${resolve(distDir, "core/runtime/nitro/handlers/island")}'`;
+        }
+        return `import { defineEventHandler } from 'h3'; export default defineEventHandler(() => {});`;
+      }
+    });
+    addServerHandler({
+      route: "/__nuxt_island/**",
+      handler: "#internal/nuxt/island-renderer.mjs"
+    });
     if (!nuxt.options.ssr && nuxt.options.experimental.componentIslands !== "auto") {
       nuxt.options.ssr = true;
-      (_a = nuxt.options.nitro).routeRules || (_a.routeRules = {});
+      nuxt.options.nitro.routeRules ||= {};
       nuxt.options.nitro.routeRules["/**"] = defu$1(nuxt.options.nitro.routeRules["/**"], { ssr: false });
     }
   }
@@ -4721,21 +5733,37 @@ async function initNuxt(nuxt) {
       src: resolve(nuxt.options.appDir, "plugins/navigation-repaint.client")
     });
   }
+  if (nuxt.options.vue.config && Object.values(nuxt.options.vue.config).some((v) => v !== null && v !== void 0)) {
+    addPluginTemplate({
+      filename: "vue-app-config.mjs",
+      getContents: () => `
+import { defineNuxtPlugin } from '#app/nuxt'
+export default defineNuxtPlugin({
+  name: 'nuxt:vue-app-config',
+  enforce: 'pre',
+  setup (nuxtApp) {
+    ${Object.keys(nuxt.options.vue.config).map((k) => `    nuxtApp.vueApp.config[${JSON.stringify(k)}] = ${JSON.stringify(nuxt.options.vue.config[k])}`).join("\n")}
+  }
+})`
+    });
+  }
   nuxt.hooks.hook("builder:watch", (event, relativePath) => {
     const path = resolve(nuxt.options.srcDir, relativePath);
-    if (watchedPaths.has(path)) {
+    if (modulePaths.has(path)) {
       return nuxt.callHook("restart", { hard: true });
     }
-    const layerRelativePaths = nuxt.options._layers.map((l) => relative(l.config.srcDir || l.cwd, path));
+    const layerRelativePaths = new Set(nuxt.options._layers.map((l) => relative(l.config.srcDir || l.cwd, path)));
     for (const pattern of nuxt.options.watch) {
       if (typeof pattern === "string") {
-        if (pattern === path || layerRelativePaths.includes(pattern)) {
+        if (pattern === path || layerRelativePaths.has(pattern)) {
           return nuxt.callHook("restart");
         }
         continue;
       }
-      if (layerRelativePaths.some((p) => pattern.test(p))) {
-        return nuxt.callHook("restart");
+      for (const p of layerRelativePaths) {
+        if (pattern.test(p)) {
+          return nuxt.callHook("restart");
+        }
       }
     }
     if (event === "addDir" && path === resolve(nuxt.options.srcDir, "app")) {
@@ -4761,22 +5789,34 @@ async function initNuxt(nuxt) {
   if (!nuxt.options.dev && nuxt.options.experimental.payloadExtraction) {
     addPlugin(resolve(nuxt.options.appDir, "plugins/payload.client"));
   }
-  if (!satisfies(nuxt._version, nuxt.options.future.compatibilityVersion + ".x")) {
+  if (!satisfies(coerce(nuxt._version) ?? nuxt._version, nuxt.options.future.compatibilityVersion + ".x")) {
     logger.info(`Running with compatibility version \`${nuxt.options.future.compatibilityVersion}\``);
   }
   await nuxt.callHook("ready", nuxt);
 }
 async function loadNuxt(opts) {
   const options = await loadNuxtConfig(opts);
-  options.appDir = options.alias["#app"] = resolve(distDir, "app");
+  options.appDir = options.alias["#app"] = withTrailingSlash(resolve(distDir, "app"));
   options._majorVersion = 3;
   for (const key in options.app.head || {}) {
     options.app.head[key] = deduplicateArray(options.app.head[key]);
   }
+  const orderedCSS = /* @__PURE__ */ new Set();
+  const optionsCSS = new Set(options.css);
+  for (const config of options._layers.map((layer) => layer.config).reverse()) {
+    for (const style of config.css || []) {
+      if (typeof style === "string") {
+        orderedCSS.delete(style);
+        optionsCSS.delete(style);
+        orderedCSS.add(style);
+      }
+    }
+  }
+  options.css = [...orderedCSS, ...optionsCSS];
   if (options.builder === "@nuxt/vite-builder") {
     const isDevToolsEnabled = typeof options.devtools === "boolean" ? options.devtools : options.devtools?.enabled !== false;
     if (isDevToolsEnabled) {
-      if (!options._modules.some((m) => m === "@nuxt/devtools" || m === "@nuxt/devtools-edge")) {
+      if (!options._modules.some((m) => m === "@nuxt/devtools" || m === "@nuxt/devtools-nightly" || m === "@nuxt/devtools-edge")) {
         options._modules.push("@nuxt/devtools");
       }
     }
@@ -4787,7 +5827,7 @@ async function loadNuxt(opts) {
     });
   }
   if (options.builder === "@nuxt/webpack-builder") {
-    if (!await import('./chunks/features.mjs').then((r) => r.ensurePackageInstalled("@nuxt/webpack-builder", {
+    if (!await Promise.resolve().then(function () { return features; }).then((r) => r.ensurePackageInstalled("@nuxt/webpack-builder", {
       rootDir: options.rootDir,
       searchPaths: options.modulesDir
     }))) {
@@ -4804,6 +5844,7 @@ async function loadNuxt(opts) {
   options.modulesDir.push(resolve(options.workspaceDir, "node_modules"));
   options.modulesDir.push(resolve(pkgDir, "node_modules"));
   options.build.transpile.push(
+    "mocked-exports",
     "std-env"
     // we need to statically replace process.env when used in runtime code
   );
@@ -4812,6 +5853,13 @@ async function loadNuxt(opts) {
   if (options.telemetry !== false && !process.env.NUXT_TELEMETRY_DISABLED) {
     options._modules.push("@nuxt/telemetry");
   }
+  const allowedKeys = /* @__PURE__ */ new Set(["baseURL", "buildAssetsDir", "cdnURL", "buildId"]);
+  for (const key in options.runtimeConfig.app) {
+    if (!allowedKeys.has(key)) {
+      logger.warn(`The \`app\` namespace is reserved for Nuxt and is exposed to the browser. Please move \`runtimeConfig.app.${key}\` to a different namespace.`);
+      delete options.runtimeConfig.app[key];
+    }
+  }
   createPortalProperties(options.nitro.runtimeConfig, options, ["nitro.runtimeConfig", "runtimeConfig"]);
   createPortalProperties(options.nitro.routeRules, options, ["nitro.routeRules", "routeRules"]);
   const nitroOptions = options.nitro;
@@ -4826,23 +5874,29 @@ async function loadNuxt(opts) {
     }
   });
   const nuxt = createNuxt(options);
-  for (const dep of keyDependencies) {
-    checkDependencyVersion(dep, nuxt._version);
-  }
-  if (opts.overrides?.hooks) {
-    nuxt.hooks.addHooks(opts.overrides.hooks);
-  }
-  if (nuxt.options.debug) {
-    createDebugger(nuxt.hooks, { tag: "nuxt" });
-  }
+  nuxt.runWithContext(() => {
+    if (nuxt.options.dev && !nuxt.options.test) {
+      nuxt.hooks.hookOnce("build:done", () => {
+        for (const dep of keyDependencies) {
+          checkDependencyVersion(dep, nuxt._version).catch((e) => logger.warn(`Problem checking \`${dep}\` version.`, e));
+        }
+      });
+    }
+    if (opts.overrides?.hooks) {
+      nuxt.hooks.addHooks(opts.overrides.hooks);
+    }
+    if (nuxt.options.debug && nuxt.options.debug.hooks && (nuxt.options.debug.hooks === true || nuxt.options.debug.hooks.server)) {
+      createDebugger(nuxt.hooks, { tag: "nuxt" });
+    }
+  });
   if (opts.ready !== false) {
     await nuxt.ready();
   }
   return nuxt;
 }
 async function checkDependencyVersion(name, nuxtVersion) {
-  const path = await resolvePath$1(name, { fallbackToOriginal: true }).catch(() => null);
-  if (!path || path === name) {
+  const path = resolveModulePath(name, { try: true });
+  if (!path) {
     return;
   }
   const { version: version2 } = await readPackageJSON(path);
@@ -4874,7 +5928,7 @@ function createPortalProperties(sourceValue, options, paths) {
     let parent = options;
     while (segments.length) {
       const key2 = segments.shift();
-      parent = parent[key2] || (parent[key2] = {});
+      parent = parent[key2] ||= {};
     }
     delete parent[key];
     Object.defineProperties(parent, {
@@ -4889,14 +5943,30 @@ function createPortalProperties(sourceValue, options, paths) {
     });
   }
 }
-const _getDefaultNuxtConfig = () => (
-  /* js */
-  `// https://nuxt.com/docs/api/configuration/nuxt-config
-export default defineNuxtConfig({
-  devtools: { enabled: true }
-})
-`
-);
+const NESTED_PKG_RE = /^[^@]+\//;
+async function resolveTypescriptPaths(nuxt) {
+  nuxt.options.typescript.hoist ||= [];
+  const paths = Object.fromEntries(await Promise.all(nuxt.options.typescript.hoist.map(async (pkg) => {
+    const [_pkg = pkg, _subpath] = NESTED_PKG_RE.test(pkg) ? pkg.split("/") : [pkg];
+    const subpath = _subpath ? "/" + _subpath : "";
+    if (nuxt._dependencies?.has(_pkg) && !(_pkg in nightlies)) {
+      return [];
+    }
+    if (_pkg in nightlies) {
+      const nightly = nightlies[_pkg];
+      const path2 = await resolveTypePath(nightly + subpath, subpath, nuxt.options.modulesDir);
+      if (path2) {
+        return [[pkg, [path2]], [nightly + subpath, [path2]]];
+      }
+    }
+    const path = await resolveTypePath(_pkg + subpath, subpath, nuxt.options.modulesDir);
+    if (path) {
+      return [[pkg, [path]]];
+    }
+    return [];
+  })).then((r) => r.flat()));
+  return paths;
+}
 
 const vueShim = {
   filename: "types/vue-shim.d.ts",
@@ -4945,7 +6015,7 @@ const clientPluginTemplate = {
     const imports = [];
     for (const plugin of clientPlugins) {
       const path = relative(ctx.nuxt.options.rootDir, plugin.src);
-      const variable = genSafeVariableName(filename(plugin.src)).replace(PLUGIN_TEMPLATE_RE, "_") + "_" + hash(path);
+      const variable = genSafeVariableName(filename(plugin.src) || path).replace(PLUGIN_TEMPLATE_RE, "_") + "_" + hash(path).replace(/-/g, "_");
       exports.push(variable);
       imports.push(genImport(plugin.src, variable));
     }
@@ -4964,7 +6034,7 @@ const serverPluginTemplate = {
     const imports = [];
     for (const plugin of serverPlugins) {
       const path = relative(ctx.nuxt.options.rootDir, plugin.src);
-      const variable = genSafeVariableName(filename(path)).replace(PLUGIN_TEMPLATE_RE, "_") + "_" + hash(path);
+      const variable = genSafeVariableName(filename(plugin.src) || path).replace(PLUGIN_TEMPLATE_RE, "_") + "_" + hash(path).replace(/-/g, "_");
       exports.push(variable);
       imports.push(genImport(plugin.src, variable));
     }
@@ -4979,9 +6049,9 @@ const appDefaults = {
   getContents: (ctx) => {
     const isV4 = ctx.nuxt.options.future.compatibilityVersion === 4;
     return `
-declare module '#app/defaults' {
-  type DefaultAsyncDataErrorValue = ${isV4 ? "undefined" : "null"}
-  type DefaultAsyncDataValue = ${isV4 ? "undefined" : "null"}
+declare module 'nuxt/app/defaults' {
+  type DefaultAsyncDataErrorValue = ${ctx.nuxt.options.experimental.defaults.useAsyncData.errorValue}
+  type DefaultAsyncDataValue = ${ctx.nuxt.options.experimental.defaults.useAsyncData.value}
   type DefaultErrorValue = ${isV4 ? "undefined" : "null"}
   type DedupeOption = ${isV4 ? "'cancel' | 'defer'" : "boolean | 'cancel' | 'defer'"}
 }`;
@@ -5051,7 +6121,6 @@ export { }
 `;
   }
 };
-const adHocModules = ["router", "pages", "imports", "meta", "components", "nuxt-config-schema"];
 const IMPORT_NAME_RE = /\.\w+$/;
 const GIT_RE = /^git\+/;
 const schemaTemplate = {
@@ -5059,7 +6128,16 @@ const schemaTemplate = {
   getContents: async ({ nuxt }) => {
     const relativeRoot = relative(resolve(nuxt.options.buildDir, "types"), nuxt.options.rootDir);
     const getImportName = (name) => (name[0] === "." ? "./" + join(relativeRoot, name) : name).replace(IMPORT_NAME_RE, "");
-    const modules = nuxt.options._installedModules.filter((m) => m.meta && m.meta.configKey && m.meta.name && !adHocModules.includes(m.meta.name)).map((m) => [genString(m.meta.configKey), getImportName(m.entryPath || m.meta.name), m]);
+    const modules = [];
+    for (const m of nuxt.options._installedModules) {
+      if (!m.meta || !m.meta.configKey || !m.meta.name) {
+        continue;
+      }
+      if (m.meta.name.startsWith("nuxt:") || m.meta.name === "nuxt-config-schema") {
+        continue;
+      }
+      modules.push([genString(m.meta.configKey), getImportName(m.entryPath || m.meta.name), m]);
+    }
     const privateRuntimeConfig = /* @__PURE__ */ Object.create(null);
     for (const key in nuxt.options.runtimeConfig) {
       if (key !== "public") {
@@ -5077,7 +6155,7 @@ const schemaTemplate = {
         } else if (mod.meta?.repository) {
           if (typeof mod.meta.repository === "string") {
             link = mod.meta.repository;
-          } else if (typeof mod.meta.repository.url === "string") {
+          } else if (typeof mod.meta.repository === "object" && "url" in mod.meta.repository && typeof mod.meta.repository.url === "string") {
             link = mod.meta.repository.url;
           }
           if (link) {
@@ -5151,9 +6229,10 @@ const layoutTemplate = {
   filename: "layouts.mjs",
   getContents({ app }) {
     const layoutsObject = genObjectFromRawEntries(Object.values(app.layouts).map(({ name, file }) => {
-      return [name, genDynamicImport(file)];
+      return [name, `defineAsyncComponent(${genDynamicImport(file, { interopDefault: true })})`];
     }));
     return [
+      `import { defineAsyncComponent } from 'vue'`,
       `export default ${layoutsObject}`
     ].join("\n");
   }
@@ -5171,12 +6250,36 @@ const middlewareTemplate = {
     ].join("\n");
   }
 };
+function renderAttr(key, value) {
+  return value ? `${key}="${value}"` : "";
+}
+function renderAttrs(obj) {
+  const attrs = [];
+  for (const key in obj) {
+    attrs.push(renderAttr(key, obj[key]));
+  }
+  return attrs.join(" ");
+}
 const nitroSchemaTemplate = {
   filename: "types/nitro-nuxt.d.ts",
-  getContents() {
+  async getContents({ nuxt }) {
+    const references = [];
+    const declarations = [];
+    await nuxt.callHook("nitro:prepare:types", { references, declarations });
+    const sourceDir = join(nuxt.options.buildDir, "types");
+    const lines = [
+      ...references.map((ref) => {
+        if ("path" in ref && isAbsolute(ref.path)) {
+          ref.path = relative(sourceDir, ref.path);
+        }
+        return `/// <reference ${renderAttrs(ref)} />`;
+      }),
+      ...declarations
+    ];
     return (
       /* typescript */
       `
+${lines.join("\n")}
 /// <reference path="./schema.d.ts" />
 
 import type { RuntimeConfig } from 'nuxt/schema'
@@ -5192,10 +6295,14 @@ declare module 'nitropack' {
   interface NitroRuntimeConfig extends RuntimeConfig {}
   interface NitroRouteConfig {
     ssr?: boolean
+    noScripts?: boolean
+    /** @deprecated Use \`noScripts\` instead */
     experimentalNoScripts?: boolean
   }
   interface NitroRouteRules {
     ssr?: boolean
+    noScripts?: boolean
+    /** @deprecated Use \`noScripts\` instead */
     experimentalNoScripts?: boolean
     appMiddleware?: Record<string, boolean>
   }
@@ -5261,7 +6368,7 @@ const appConfigTemplate = {
   write: true,
   getContents({ app, nuxt }) {
     return `
-import { updateAppConfig } from '#app/config'
+import { _replaceAppConfig } from '#app/config'
 import { defuFn } from 'defu'
 
 const inlineConfig = ${JSON.stringify(nuxt.options.appConfig, null, 2)}
@@ -5269,7 +6376,7 @@ const inlineConfig = ${JSON.stringify(nuxt.options.appConfig, null, 2)}
 // Vite - webpack is handled directly in #app/config
 if (import.meta.hot) {
   import.meta.hot.accept((newModule) => {
-    updateAppConfig(newModule.default)
+    _replaceAppConfig(newModule.default)
   })
 }
 
@@ -5285,15 +6392,16 @@ const publicPathTemplate = {
     return [
       "import { joinRelativeURL } from 'ufo'",
       !nuxt.options.dev && "import { useRuntimeConfig } from '#internal/nitro'",
-      nuxt.options.dev ? `const appConfig = ${JSON.stringify(nuxt.options.app)}` : "const appConfig = useRuntimeConfig().app",
-      "export const baseURL = () => appConfig.baseURL",
-      "export const buildAssetsDir = () => appConfig.buildAssetsDir",
+      nuxt.options.dev ? `const getAppConfig = () => (${JSON.stringify(nuxt.options.app)})` : "const getAppConfig = () => useRuntimeConfig().app",
+      "export const baseURL = () => getAppConfig().baseURL",
+      "export const buildAssetsDir = () => getAppConfig().buildAssetsDir",
       "export const buildAssetsURL = (...path) => joinRelativeURL(publicAssetsURL(), buildAssetsDir(), ...path)",
       "export const publicAssetsURL = (...path) => {",
+      "  const appConfig = getAppConfig()",
       "  const publicBase = appConfig.cdnURL || appConfig.baseURL",
       "  return path.length ? joinRelativeURL(publicBase, ...path) : publicBase",
       "}",
-      // On server these are registered directly in packages/nuxt/src/core/runtime/nitro/renderer.ts
+      // On server these are registered directly in packages/nuxt/src/core/runtime/nitro/handlers/renderer.ts
       "if (import.meta.client) {",
       "  globalThis.__buildAssetsURL = buildAssetsURL",
       "  globalThis.__publicAssetsURL = publicAssetsURL",
@@ -5301,6 +6409,15 @@ const publicPathTemplate = {
     ].filter(Boolean).join("\n");
   }
 };
+const globalPolyfillsTemplate = {
+  filename: "global-polyfills.mjs",
+  getContents() {
+    return `
+if (!("global" in globalThis)) {
+  globalThis.global = globalThis;
+}`;
+  }
+};
 const dollarFetchTemplate = {
   filename: "fetch.mjs",
   getContents() {
@@ -5351,7 +6468,12 @@ const nuxtConfigTemplate = {
       `export const outdatedBuildInterval = ${ctx.nuxt.options.experimental.checkOutdatedBuildInterval}`,
       `export const multiApp = ${!!ctx.nuxt.options.future.multiApp}`,
       `export const chunkErrorEvent = ${ctx.nuxt.options.experimental.emitRouteChunkError ? ctx.nuxt.options.builder === "@nuxt/vite-builder" ? '"vite:preloadError"' : '"nuxt:preloadError"' : "false"}`,
-      `export const crawlLinks = ${!!ctx.nuxt._nitro.options.prerender.crawlLinks}`
+      `export const crawlLinks = ${!!ctx.nuxt._nitro.options.prerender.crawlLinks}`,
+      `export const spaLoadingTemplateOutside = ${ctx.nuxt.options.experimental.spaLoadingTemplateLocation === "body"}`,
+      `export const purgeCachedData = ${!!ctx.nuxt.options.experimental.purgeCachedData}`,
+      `export const granularCachedData = ${!!ctx.nuxt.options.experimental.granularCachedData}`,
+      `export const pendingWhenIdle = ${!!ctx.nuxt.options.experimental.pendingWhenIdle}`,
+      `export const alwaysRunFetchOnKeyChange = ${!!ctx.nuxt.options.experimental.alwaysRunFetchOnKeyChange}`
     ].join("\n\n");
   }
 };
@@ -5389,6 +6511,7 @@ const defaultTemplates = {
   cssTemplate: cssTemplate,
   dollarFetchTemplate: dollarFetchTemplate,
   errorComponentTemplate: errorComponentTemplate,
+  globalPolyfillsTemplate: globalPolyfillsTemplate,
   layoutTemplate: layoutTemplate,
   middlewareTemplate: middlewareTemplate,
   nitroSchemaTemplate: nitroSchemaTemplate,
@@ -5411,16 +6534,16 @@ function createApp(nuxt, options = {}) {
     templates: []
   });
 }
-const postTemplates = [
+const postTemplates = /* @__PURE__ */ new Set([
   clientPluginTemplate.filename,
   serverPluginTemplate.filename,
   pluginsDeclaration.filename
-];
+]);
 async function generateApp(nuxt, app, options = {}) {
   await resolveApp(nuxt, app);
   app.templates = Object.values(defaultTemplates).concat(nuxt.options.build.templates);
   await nuxt.callHook("app:templates", app);
-  app.templates = app.templates.map((tmpl) => normalizeTemplate(tmpl));
+  app.templates = app.templates.map((tmpl) => normalizeTemplate(tmpl, nuxt.options.buildDir));
   const filteredTemplates = {
     pre: [],
     post: []
@@ -5429,12 +6552,13 @@ async function generateApp(nuxt, app, options = {}) {
     if (options.filter && !options.filter(template)) {
       continue;
     }
-    const key = template.filename && postTemplates.includes(template.filename) ? "post" : "pre";
+    const key = template.filename && postTemplates.has(template.filename) ? "post" : "pre";
     filteredTemplates[key].push(template);
   }
   const templateContext = { utils: templateUtils, nuxt, app };
   const compileTemplate$1 = nuxt.options.experimental.compileTemplate ? compileTemplate : futureCompileTemplate;
   const writes = [];
+  const dirs = /* @__PURE__ */ new Set();
   const changedTemplates = [];
   const FORWARD_SLASH_RE = /\//g;
   async function processTemplate(template) {
@@ -5458,18 +6582,19 @@ async function generateApp(nuxt, app, options = {}) {
     }
     const perf = performance.now() - start;
     const setupTime = Math.round(perf * 100) / 100;
-    if (nuxt.options.debug || setupTime > 500) {
+    if (nuxt.options.debug && nuxt.options.debug.templates || setupTime > 500) {
       logger.info(`Compiled \`${template.filename}\` in ${setupTime}ms`);
     }
     if (template.modified && template.write) {
-      writes.push(() => {
-        mkdirSync(dirname(fullPath), { recursive: true });
-        writeFileSync(fullPath, contents, "utf8");
-      });
+      dirs.add(dirname(fullPath));
+      writes.push(() => writeFileSync(fullPath, contents, "utf8"));
     }
   }
   await Promise.allSettled(filteredTemplates.pre.map(processTemplate));
   await Promise.allSettled(filteredTemplates.post.map(processTemplate));
+  for (const dir of dirs) {
+    mkdirSync(dir, { recursive: true });
+  }
   for (const write of writes) {
     write();
   }
@@ -5493,51 +6618,44 @@ async function futureCompileTemplate(template, ctx) {
   throw new Error("[nuxt] Invalid template. Templates must have either `src` or `getContents`: " + JSON.stringify(template));
 }
 async function resolveApp(nuxt, app) {
-  if (!app.mainComponent) {
-    app.mainComponent = await findPath(
-      nuxt.options._layers.flatMap((layer) => [
-        join(layer.config.srcDir, "App"),
-        join(layer.config.srcDir, "app")
-      ])
-    );
-  }
-  if (!app.mainComponent) {
-    app.mainComponent = resolve(nuxt.options.appDir, "components/welcome.vue");
-  }
-  if (!app.rootComponent) {
-    app.rootComponent = await findPath(["~/app.root", resolve(nuxt.options.appDir, "components/nuxt-root.vue")]);
-  }
-  if (!app.errorComponent) {
-    app.errorComponent = await findPath(
-      nuxt.options._layers.map((layer) => join(layer.config.srcDir, "error"))
-    ) ?? resolve(nuxt.options.appDir, "components/nuxt-error-page.vue");
-  }
+  app.mainComponent ||= await findPath(
+    nuxt.options._layers.flatMap((layer) => [
+      join(layer.config.srcDir, "App"),
+      join(layer.config.srcDir, "app")
+    ])
+  );
+  app.mainComponent ||= resolve(nuxt.options.appDir, "components/welcome.vue");
+  app.rootComponent ||= await findPath(["~/app.root", resolve(nuxt.options.appDir, "components/nuxt-root.vue")]);
+  app.errorComponent ||= await findPath(
+    nuxt.options._layers.map((layer) => join(layer.config.srcDir, "error"))
+  ) ?? resolve(nuxt.options.appDir, "components/nuxt-error-page.vue");
+  const extensionGlob = nuxt.options.extensions.join(",");
   const layerConfigs = nuxt.options._layers.map((layer) => layer.config);
   const reversedConfigs = layerConfigs.slice().reverse();
   app.layouts = {};
   for (const config of layerConfigs) {
-    const layoutDir = (config.rootDir === nuxt.options.rootDir ? nuxt.options : config).dir?.layouts || "layouts";
-    const layoutFiles = await resolveFiles(config.srcDir, `${layoutDir}/**/*{${nuxt.options.extensions.join(",")}}`);
+    const layoutDir = (config.rootDir === nuxt.options.rootDir ? nuxt.options.dir : config.dir)?.layouts || "layouts";
+    const layoutFiles = await resolveFiles(config.srcDir, `${layoutDir}/**/*{${extensionGlob}}`);
     for (const file of layoutFiles) {
       const name = getNameFromPath(file, resolve(config.srcDir, layoutDir));
       if (!name) {
-        logger.warn(`No layout name could be resolved for \`~/${relative(nuxt.options.srcDir, file)}\`. Bear in mind that \`index\` is ignored for the purpose of creating a layout name.`);
+        logger.warn(`No layout name could be resolved for \`${resolveToAlias(file, nuxt)}\`. Bear in mind that \`index\` is ignored for the purpose of creating a layout name.`);
         continue;
       }
-      app.layouts[name] = app.layouts[name] || { name, file };
+      app.layouts[name] ||= { name, file };
     }
   }
   app.middleware = [];
   for (const config of reversedConfigs) {
-    const middlewareDir = (config.rootDir === nuxt.options.rootDir ? nuxt.options : config).dir?.middleware || "middleware";
+    const middlewareDir = (config.rootDir === nuxt.options.rootDir ? nuxt.options.dir : config.dir)?.middleware || "middleware";
     const middlewareFiles = await resolveFiles(config.srcDir, [
-      `${middlewareDir}/*{${nuxt.options.extensions.join(",")}}`,
-      ...nuxt.options.future.compatibilityVersion === 4 ? [`${middlewareDir}/*/index{${nuxt.options.extensions.join(",")}}`] : []
+      `${middlewareDir}/*{${extensionGlob}}`,
+      ...nuxt.options.future.compatibilityVersion === 4 ? [`${middlewareDir}/*/index{${extensionGlob}}`] : []
     ]);
     for (const file of middlewareFiles) {
       const name = getNameFromPath(file);
       if (!name) {
-        logger.warn(`No middleware name could be resolved for \`~/${relative(nuxt.options.srcDir, file)}\`. Bear in mind that \`index\` is ignored for the purpose of creating a middleware name.`);
+        logger.warn(`No middleware name could be resolved for \`${resolveToAlias(file, nuxt)}\`. Bear in mind that \`index\` is ignored for the purpose of creating a middleware name.`);
         continue;
       }
       app.middleware.push({ name, path: file, global: hasSuffix(file, ".global") });
@@ -5545,12 +6663,12 @@ async function resolveApp(nuxt, app) {
   }
   app.plugins = [];
   for (const config of reversedConfigs) {
-    const pluginDir = (config.rootDir === nuxt.options.rootDir ? nuxt.options : config).dir?.plugins || "plugins";
+    const pluginDir = (config.rootDir === nuxt.options.rootDir ? nuxt.options.dir : config.dir)?.plugins || "plugins";
     app.plugins.push(...[
       ...config.plugins || [],
       ...config.srcDir ? await resolveFiles(config.srcDir, [
-        `${pluginDir}/*{${nuxt.options.extensions.join(",")}}`,
-        `${pluginDir}/*/index{${nuxt.options.extensions.join(",")}}`
+        `${pluginDir}/*{${extensionGlob}}`,
+        `${pluginDir}/*/index{${extensionGlob}}`
       ]) : []
     ].map((plugin) => normalizePlugin(plugin)));
   }
@@ -5560,8 +6678,8 @@ async function resolveApp(nuxt, app) {
       app.plugins.unshift(plugin);
     }
   }
-  app.middleware = uniqueBy(await resolvePaths([...app.middleware].reverse(), "path"), "name").reverse();
-  app.plugins = uniqueBy(await resolvePaths(app.plugins, "src"), "src");
+  app.middleware = uniqueBy(await resolvePaths(nuxt, [...app.middleware].reverse(), "path"), "name").reverse();
+  app.plugins = uniqueBy(await resolvePaths(nuxt, app.plugins, "src"), "src");
   app.configs = [];
   for (const config of layerConfigs) {
     const appConfigPath = await findPath(resolve(config.srcDir, "app.config"));
@@ -5570,17 +6688,23 @@ async function resolveApp(nuxt, app) {
     }
   }
   await nuxt.callHook("app:resolve", app);
-  app.middleware = uniqueBy(await resolvePaths(app.middleware, "path"), "name");
-  app.plugins = uniqueBy(await resolvePaths(app.plugins, "src"), "src");
+  app.middleware = uniqueBy(await resolvePaths(nuxt, app.middleware, "path"), "name");
+  app.plugins = uniqueBy(await resolvePaths(nuxt, app.plugins, "src"), "src");
+  app.configs = [...new Set(app.configs)];
 }
-function resolvePaths(items, key) {
+function resolvePaths(nuxt, items, key) {
   return Promise.all(items.map(async (item) => {
     if (!item[key]) {
       return item;
     }
     return {
       ...item,
-      [key]: await resolvePath$1(resolveAlias(item[key]))
+      [key]: await resolvePath(item[key], {
+        alias: nuxt.options.alias,
+        extensions: nuxt.options.extensions,
+        fallbackToOriginal: true,
+        virtual: true
+      })
     };
   }));
 }
@@ -5608,10 +6732,10 @@ async function annotatePlugins(nuxt, plugins) {
 }
 function checkForCircularDependencies(_plugins) {
   const deps = /* @__PURE__ */ Object.create(null);
-  const pluginNames = _plugins.map((plugin) => plugin.name);
+  const pluginNames = new Set(_plugins.map((plugin) => plugin.name));
   for (const plugin of _plugins) {
-    if (plugin.dependsOn && plugin.dependsOn.some((name) => !pluginNames.includes(name))) {
-      console.error(`Plugin \`${plugin.name}\` depends on \`${plugin.dependsOn.filter((name) => !pluginNames.includes(name)).join(", ")}\` but they are not registered.`);
+    if (plugin.dependsOn && plugin.dependsOn.some((name) => !pluginNames.has(name))) {
+      console.error(`Plugin \`${plugin.name}\` depends on \`${plugin.dependsOn.filter((name) => !pluginNames.has(name)).join(", ")}\` but they are not registered.`);
     }
     if (plugin.name) {
       deps[plugin.name] = plugin.dependsOn || [];
@@ -5687,15 +6811,18 @@ async function getVueHash(nuxt) {
   const id = "vue";
   const { hash: hash2 } = await getHashes(nuxt, {
     id,
-    cwd: (layer) => layer.config?.srcDir,
-    patterns: (layer) => [
-      join(relative(layer.cwd, layer.config.srcDir), "**"),
-      `!${relative(layer.cwd, layer.config.serverDir || join(layer.cwd, "server"))}/**`,
-      `!${relative(layer.cwd, resolve$1(layer.config.srcDir || layer.cwd, layer.config.dir?.public || "public"))}/**`,
-      `!${relative(layer.cwd, resolve$1(layer.config.srcDir || layer.cwd, layer.config.dir?.static || "public"))}/**`,
-      "!node_modules/**",
-      "!nuxt.config.*"
-    ],
+    cwd: (layer) => layer.config.srcDir || layer.cwd,
+    patterns: (layer) => {
+      const srcDir = layer.config.srcDir || layer.cwd;
+      return [
+        "**",
+        `!${relative(srcDir, layer.config.serverDir || join(layer.cwd, "server"))}/**`,
+        `!${relative(srcDir, resolve$1(layer.cwd, layer.config.dir?.public || "public"))}/**`,
+        `!${relative(srcDir, resolve$1(layer.cwd, layer.config.dir?.static || "public"))}/**`,
+        "!node_modules/**",
+        "!nuxt.config.*"
+      ];
+    },
     configOverrides: {
       buildId: void 0,
       serverDir: void 0,
@@ -5708,7 +6835,7 @@ async function getVueHash(nuxt) {
       devtools: void 0
     }
   });
-  const cacheFile = join(nuxt.options.workspaceDir, "node_modules/.cache/nuxt/builds", id, hash2 + ".tar");
+  const cacheFile = join(getCacheDir(nuxt), id, hash2 + ".tar");
   return {
     hash: hash2,
     async collectCache() {
@@ -5731,7 +6858,7 @@ async function getVueHash(nuxt) {
 async function cleanupCaches(nuxt) {
   const start = Date.now();
   const caches = await glob(["*/*.tar"], {
-    cwd: join(nuxt.options.workspaceDir, "node_modules/.cache/nuxt/builds"),
+    cwd: getCacheDir(nuxt),
     absolute: true
   });
   if (caches.length >= 10) {
@@ -5760,7 +6887,7 @@ async function getHashes(nuxt, options) {
     const layerName = `layer#${layerCtr++}`;
     hashSources.push({
       name: `${layerName}:config`,
-      data: objectHash({
+      data: serialize({
         ...layer.config,
         ...options.configOverrides || {}
       })
@@ -5768,11 +6895,9 @@ async function getHashes(nuxt, options) {
     const normalizeFiles = (files) => files.map((f) => ({
       name: f.name,
       size: f.attrs?.size,
-      data: murmurHash(
-        f.data
-        /* ArrayBuffer */
-      )
-    }));
+      data: hash(f.data)
+    })).sort((a, b) => a.name.localeCompare(b.name));
+    const isIgnored = createIsIgnored(nuxt);
     const sourceFiles = await readFilesRecursive(options.cwd(layer), {
       shouldIgnore: isIgnored,
       // TODO: Validate if works with absolute paths
@@ -5795,6 +6920,7 @@ async function getHashes(nuxt, options) {
         "yarn.lock",
         "pnpm-lock.yaml",
         "tsconfig.json",
+        "bun.lock",
         "bun.lockb"
       ]
     });
@@ -5803,6 +6929,7 @@ async function getHashes(nuxt, options) {
       data: normalizeFiles(rootFiles)
     });
   }
+  hashSources.sort((a, b) => a.name.localeCompare(b.name));
   const res = nuxt[`_${options.id}BuildHash`] = {
     hash: hash(hashSources),
     sources: hashSources
@@ -5898,8 +7025,19 @@ async function writeCache(cwd, sources, cacheFile) {
   await mkdir(dirname(cacheFile), { recursive: true });
   await writeFile(cacheFile, tarData);
 }
+function getCacheDir(nuxt) {
+  let cacheDir = join(nuxt.options.workspaceDir, "node_modules");
+  if (!existsSync(cacheDir)) {
+    for (const dir of [...nuxt.options.modulesDir].sort((a, b) => a.length - b.length)) {
+      if (existsSync(dir)) {
+        cacheDir = dir;
+        break;
+      }
+    }
+  }
+  return join(cacheDir, ".cache/nuxt/builds");
+}
 
-const IS_RESTART_PATH_RE = /^(?:app\.|error\.|plugins\/|middleware\/|layouts\/)/i;
 async function build(nuxt) {
   const app = createApp(nuxt);
   nuxt.apps.default = app;
@@ -5908,21 +7046,21 @@ async function build(nuxt) {
   if (nuxt.options.dev) {
     watch(nuxt);
     nuxt.hook("builder:watch", async (event, relativePath) => {
-      if (event === "change") {
-        return;
-      }
-      const path = resolve(nuxt.options.srcDir, relativePath);
-      const relativePaths = nuxt.options._layers.map((l) => relative(l.config.srcDir || l.cwd, path));
-      const restartPath = relativePaths.find((relativePath2) => IS_RESTART_PATH_RE.test(relativePath2));
-      if (restartPath) {
-        if (restartPath.startsWith("app")) {
-          app.mainComponent = void 0;
-        }
-        if (restartPath.startsWith("error")) {
-          app.errorComponent = void 0;
+      if (event === "add" || event === "unlink") {
+        const path = resolve(nuxt.options.srcDir, relativePath);
+        for (const layer of nuxt.options._layers) {
+          const relativePath2 = relative(layer.config.srcDir || layer.cwd, path);
+          if (relativePath2.match(/^app\./i)) {
+            app.mainComponent = void 0;
+            break;
+          }
+          if (relativePath2.match(/^error\./i)) {
+            app.errorComponent = void 0;
+            break;
+          }
         }
-        await generateApp$1();
       }
+      await generateApp$1();
     });
     nuxt.hook("builder:generateApp", (options) => {
       if (options) {
@@ -5945,8 +7083,10 @@ async function build(nuxt) {
     nuxt.hook("prepare:types", () => nuxt.close());
     return;
   }
-  if (nuxt.options.dev) {
-    checkForExternalConfigurationFiles();
+  if (nuxt.options.dev && !nuxt.options.test) {
+    nuxt.hooks.hookOnce("build:done", () => {
+      checkForExternalConfigurationFiles().catch((e) => logger.warn("Problem checking for external configuration files.", e));
+    });
   }
   await bundle(nuxt);
   await nuxt.callHook("build:done");
@@ -5973,40 +7113,49 @@ async function watch(nuxt) {
 }
 function createWatcher() {
   const nuxt = useNuxt();
+  const isIgnored2 = createIsIgnored(nuxt);
   const watcher = watch$1(nuxt.options._layers.map((i) => i.config.srcDir).filter(Boolean), {
     ...nuxt.options.watchers.chokidar,
     ignoreInitial: true,
-    ignored: [
-      isIgnored,
-      "node_modules"
-    ]
+    ignored: [isIgnored2, /[\\/]node_modules[\\/]/]
+  });
+  const restartPaths = /* @__PURE__ */ new Set();
+  const srcDir = nuxt.options.srcDir.replace(/\/?$/, "/");
+  for (const pattern of nuxt.options.watch) {
+    if (typeof pattern !== "string") {
+      continue;
+    }
+    const path = resolve(nuxt.options.srcDir, pattern);
+    if (!path.startsWith(srcDir)) {
+      restartPaths.add(path);
+    }
+  }
+  watcher.add([...restartPaths]);
+  watcher.on("all", (event, path) => {
+    if (event === "all" || event === "ready" || event === "error" || event === "raw") {
+      return;
+    }
+    nuxt.callHook("builder:watch", event, nuxt.options.experimental.relativeWatchPaths ? normalize(relative(nuxt.options.srcDir, path)) : normalize(path));
   });
-  watcher.on("all", (event, path) => nuxt.callHook("builder:watch", event, nuxt.options.experimental.relativeWatchPaths ? normalize(relative(nuxt.options.srcDir, path)) : normalize(path)));
   nuxt.hook("close", () => watcher?.close());
 }
 function createGranularWatcher() {
   const nuxt = useNuxt();
-  if (nuxt.options.debug) {
+  const isIgnored2 = createIsIgnored(nuxt);
+  if (nuxt.options.debug && nuxt.options.debug.watchers) {
     console.time("[nuxt] builder:chokidar:watch");
   }
   let pending = 0;
   const ignoredDirs = /* @__PURE__ */ new Set([...nuxt.options.modulesDir, nuxt.options.buildDir]);
-  const pathsToWatch = nuxt.options._layers.map((layer) => layer.config.srcDir || layer.cwd).filter((d) => d && !isIgnored(d));
-  for (const pattern of nuxt.options.watch) {
-    if (typeof pattern !== "string") {
-      continue;
-    }
-    const path = resolve(nuxt.options.srcDir, pattern);
-    if (pathsToWatch.some((w) => path.startsWith(w.replace(/[^/]$/, "$&/")))) {
-      continue;
-    }
-    pathsToWatch.push(path);
-  }
+  const pathsToWatch = resolvePathsToWatch(nuxt);
   for (const dir of pathsToWatch) {
     pending++;
-    const watcher = watch$1(dir, { ...nuxt.options.watchers.chokidar, ignoreInitial: false, depth: 0, ignored: [isIgnored, "**/node_modules"] });
+    const watcher = watch$1(dir, { ...nuxt.options.watchers.chokidar, ignoreInitial: false, depth: 0, ignored: [isIgnored2, /[\\/]node_modules[\\/]/] });
     const watchers = {};
     watcher.on("all", (event, path) => {
+      if (event === "all" || event === "ready" || event === "error" || event === "raw") {
+        return;
+      }
       path = normalize(path);
       if (!pending) {
         nuxt.callHook("builder:watch", event, nuxt.options.experimental.relativeWatchPaths ? relative(nuxt.options.srcDir, path) : path);
@@ -6015,15 +7164,20 @@ function createGranularWatcher() {
         watchers[path]?.close();
         delete watchers[path];
       }
-      if (event === "addDir" && path !== dir && !ignoredDirs.has(path) && !pathsToWatch.includes(path) && !(path in watchers) && !isIgnored(path)) {
-        const pathWatcher = watchers[path] = watch$1(path, { ...nuxt.options.watchers.chokidar, ignored: [isIgnored] });
-        pathWatcher.on("all", (event2, p) => nuxt.callHook("builder:watch", event2, nuxt.options.experimental.relativeWatchPaths ? normalize(relative(nuxt.options.srcDir, p)) : normalize(p)));
+      if (event === "addDir" && path !== dir && !ignoredDirs.has(path) && !pathsToWatch.has(path) && !(path in watchers) && !isIgnored2(path)) {
+        const pathWatcher = watchers[path] = watch$1(path, { ...nuxt.options.watchers.chokidar, ignored: [isIgnored2] });
+        pathWatcher.on("all", (event2, p) => {
+          if (event2 === "all" || event2 === "ready" || event2 === "error" || event2 === "raw") {
+            return;
+          }
+          nuxt.callHook("builder:watch", event2, nuxt.options.experimental.relativeWatchPaths ? normalize(relative(nuxt.options.srcDir, p)) : normalize(p));
+        });
         nuxt.hook("close", () => watchers[path]?.close());
       }
     });
     watcher.on("ready", () => {
       pending--;
-      if (nuxt.options.debug && !pending) {
+      if (nuxt.options.debug && nuxt.options.debug.watchers && !pending) {
         console.timeEnd("[nuxt] builder:chokidar:watch");
       }
     });
@@ -6032,43 +7186,44 @@ function createGranularWatcher() {
 }
 async function createParcelWatcher() {
   const nuxt = useNuxt();
-  if (nuxt.options.debug) {
+  if (nuxt.options.debug && nuxt.options.debug.watchers) {
     console.time("[nuxt] builder:parcel:watch");
   }
-  const watcherPath = await tryResolveModule("@parcel/watcher", [nuxt.options.rootDir, ...nuxt.options.modulesDir]);
-  if (!watcherPath) {
-    logger.warn("Falling back to `chokidar-granular` as `@parcel/watcher` cannot be resolved in your project.");
-    return false;
-  }
-  const { subscribe } = await importModule(watcherPath);
-  for (const layer of nuxt.options._layers) {
-    if (!layer.config.srcDir) {
-      continue;
-    }
-    const watcher = subscribe(layer.config.srcDir, (err, events) => {
-      if (err) {
-        return;
+  try {
+    const { subscribe } = await importModule("@parcel/watcher", { url: [nuxt.options.rootDir, ...nuxt.options.modulesDir].map((d) => directoryToURL(d)) });
+    const pathsToWatch = resolvePathsToWatch(nuxt, { parentDirectories: true });
+    for (const dir of pathsToWatch) {
+      if (!await isDirectory$1(dir)) {
+        continue;
       }
-      for (const event of events) {
-        if (isIgnored(event.path)) {
-          continue;
+      const watcher = subscribe(dir, (err, events) => {
+        if (err) {
+          return;
         }
-        nuxt.callHook("builder:watch", watchEvents[event.type], nuxt.options.experimental.relativeWatchPaths ? normalize(relative(nuxt.options.srcDir, event.path)) : normalize(event.path));
-      }
-    }, {
-      ignore: [
-        ...nuxt.options.ignore,
-        "node_modules"
-      ]
-    });
-    watcher.then((subscription) => {
-      if (nuxt.options.debug) {
-        console.timeEnd("[nuxt] builder:parcel:watch");
-      }
-      nuxt.hook("close", () => subscription.unsubscribe());
-    });
+        for (const event of events) {
+          if (isIgnored(event.path)) {
+            continue;
+          }
+          nuxt.callHook("builder:watch", watchEvents[event.type], nuxt.options.experimental.relativeWatchPaths ? normalize(relative(nuxt.options.srcDir, event.path)) : normalize(event.path));
+        }
+      }, {
+        ignore: [
+          ...nuxt.options.ignore,
+          "node_modules"
+        ]
+      });
+      watcher.then((subscription) => {
+        if (nuxt.options.debug && nuxt.options.debug.watchers) {
+          console.timeEnd("[nuxt] builder:parcel:watch");
+        }
+        nuxt.hook("close", () => subscription.unsubscribe());
+      });
+    }
+    return true;
+  } catch {
+    logger.warn("Falling back to `chokidar-granular` as `@parcel/watcher` cannot be resolved in your project.");
+    return false;
   }
-  return true;
 }
 async function bundle(nuxt) {
   try {
@@ -6083,11 +7238,40 @@ async function bundle(nuxt) {
   }
 }
 async function loadBuilder(nuxt, builder) {
-  const builderPath = await tryResolveModule(builder, [nuxt.options.rootDir, import.meta.url]);
-  if (!builderPath) {
-    throw new Error(`Loading \`${builder}\` builder failed. You can read more about the nuxt \`builder\` option at: \`https://nuxt.com/docs/api/nuxt-config#builder\``);
+  try {
+    return await importModule(builder, { url: [directoryToURL(nuxt.options.rootDir), new URL(import.meta.url)] });
+  } catch (err) {
+    throw new Error(`Loading \`${builder}\` builder failed. You can read more about the nuxt \`builder\` option at: \`https://nuxt.com/docs/api/nuxt-config#builder\``, { cause: err });
+  }
+}
+function resolvePathsToWatch(nuxt, opts = {}) {
+  const pathsToWatch = /* @__PURE__ */ new Set();
+  for (const layer of nuxt.options._layers) {
+    const dir = layer.config.srcDir || layer.cwd;
+    if (!dir || isIgnored(dir)) {
+      continue;
+    }
+    pathsToWatch.add(dir.replace(/[^/]$/, "$&/"));
+  }
+  for (const pattern of nuxt.options.watch) {
+    if (typeof pattern !== "string") {
+      continue;
+    }
+    const path = opts?.parentDirectories ? join(dirname(resolve(nuxt.options.srcDir, pattern)), "") : resolve(nuxt.options.srcDir, pattern);
+    let shouldAdd = true;
+    for (const w of [...pathsToWatch]) {
+      if (w.startsWith(path)) {
+        pathsToWatch.delete(w);
+      }
+      if (path.startsWith(w)) {
+        shouldAdd = false;
+      }
+    }
+    if (shouldAdd) {
+      pathsToWatch.add(path);
+    }
   }
-  return importModule(builderPath);
+  return pathsToWatch;
 }
 
 export { build, createNuxt, loadNuxt };
diff --git a/node_modules/nuxt/dist/pages/runtime/app.vue b/node_modules/nuxt/dist/pages/runtime/app.vue
index f8eacfa..d9b51ae 100644
--- a/node_modules/nuxt/dist/pages/runtime/app.vue
+++ b/node_modules/nuxt/dist/pages/runtime/app.vue
@@ -1,5 +1,6 @@
 <template>
   <NuxtLayout>
+    <NuxtRouteAnnouncer />
     <NuxtPage />
   </NuxtLayout>
 </template>
diff --git a/node_modules/nuxt/dist/pages/runtime/app.vue.d.ts b/node_modules/nuxt/dist/pages/runtime/app.vue.d.ts
new file mode 100644
index 0000000..f7f5e46
--- /dev/null
+++ b/node_modules/nuxt/dist/pages/runtime/app.vue.d.ts
@@ -0,0 +1,2 @@
+declare const _default: import("vue").DefineComponent<{}, void, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export default _default;
diff --git a/node_modules/nuxt/dist/pages/runtime/composables.d.ts b/node_modules/nuxt/dist/pages/runtime/composables.d.ts
index a512225..9ee3991 100644
--- a/node_modules/nuxt/dist/pages/runtime/composables.d.ts
+++ b/node_modules/nuxt/dist/pages/runtime/composables.d.ts
@@ -1,7 +1,7 @@
 import type { KeepAliveProps, TransitionProps, UnwrapRef } from 'vue';
 import type { RouteLocationNormalized, RouteLocationNormalizedLoaded, RouteRecordRaw, RouteRecordRedirectOption } from 'vue-router';
 import type { NitroRouteConfig } from 'nitropack';
-import type { NuxtError } from '#app';
+import type { NuxtError } from 'nuxt/app';
 export interface PageMeta {
     [key: string]: unknown;
     /**
diff --git a/node_modules/nuxt/dist/pages/runtime/index.d.ts b/node_modules/nuxt/dist/pages/runtime/index.d.ts
index 0b418fa..6a2b649 100644
--- a/node_modules/nuxt/dist/pages/runtime/index.d.ts
+++ b/node_modules/nuxt/dist/pages/runtime/index.d.ts
@@ -1,2 +1,3 @@
 export { definePageMeta, defineRouteRules } from './composables.js';
 export type { PageMeta } from './composables.js';
+export type { NuxtPageProps } from './page.js';
diff --git a/node_modules/nuxt/dist/pages/runtime/page.d.ts b/node_modules/nuxt/dist/pages/runtime/page.d.ts
index 212eeb4..549626d 100644
--- a/node_modules/nuxt/dist/pages/runtime/page.d.ts
+++ b/node_modules/nuxt/dist/pages/runtime/page.d.ts
@@ -1,48 +1,30 @@
-import type { KeepAliveProps, TransitionProps, VNode } from 'vue';
-import type { RouteLocationNormalized, RouteLocationNormalizedLoaded } from 'vue-router';
-declare const _default: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
-    name: {
-        type: StringConstructor;
-    };
-    transition: {
-        type: () => boolean | TransitionProps;
-        default: undefined;
-    };
-    keepalive: {
-        type: () => boolean | KeepAliveProps;
-        default: undefined;
-    };
-    route: {
-        type: () => RouteLocationNormalized;
-    };
-    pageKey: {
-        type: () => string | ((route: RouteLocationNormalizedLoaded) => string);
-        default: null;
-    };
-}>, () => VNode<import("vue").RendererNode, import("vue").RendererElement, {
-    [key: string]: any;
-}>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
-    name: {
-        type: StringConstructor;
-    };
-    transition: {
-        type: () => boolean | TransitionProps;
-        default: undefined;
-    };
-    keepalive: {
-        type: () => boolean | KeepAliveProps;
-        default: undefined;
-    };
-    route: {
-        type: () => RouteLocationNormalized;
-    };
-    pageKey: {
-        type: () => string | ((route: RouteLocationNormalizedLoaded) => string);
-        default: null;
-    };
-}>> & Readonly<{}>, {
-    keepalive: boolean | KeepAliveProps;
-    transition: boolean | TransitionProps;
-    pageKey: string | ((route: RouteLocationNormalizedLoaded) => string);
-}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+import type { AllowedComponentProps, ComponentCustomProps, ComponentPublicInstance, KeepAliveProps, TransitionProps, VNode, VNodeProps } from 'vue';
+import type { RouteLocationNormalizedLoaded, RouterViewProps } from 'vue-router';
+import type { RouterViewSlotProps } from './utils.js';
+export interface NuxtPageProps extends RouterViewProps {
+    /**
+     * Define global transitions for all pages rendered with the `NuxtPage` component.
+     */
+    transition?: boolean | TransitionProps;
+    /**
+     * Control state preservation of pages rendered with the `NuxtPage` component.
+     */
+    keepalive?: boolean | KeepAliveProps;
+    /**
+     * Control when the `NuxtPage` component is re-rendered.
+     */
+    pageKey?: string | ((route: RouteLocationNormalizedLoaded) => string);
+}
+declare const _default: {
+    new (): {
+        $props: AllowedComponentProps & ComponentCustomProps & VNodeProps & NuxtPageProps;
+        $slots: {
+            default?: (routeProps: RouterViewSlotProps) => VNode[];
+        };
+        /**
+         * Reference to the page component instance
+         */
+        pageRef: Element | ComponentPublicInstance | null;
+    };
+};
 export default _default;
diff --git a/node_modules/nuxt/dist/pages/runtime/page.js b/node_modules/nuxt/dist/pages/runtime/page.js
index 5da8b73..32c22b9 100644
--- a/node_modules/nuxt/dist/pages/runtime/page.js
+++ b/node_modules/nuxt/dist/pages/runtime/page.js
@@ -1,13 +1,14 @@
-import { Fragment, Suspense, Transition, defineComponent, h, inject, nextTick, ref, watch } from "vue";
+import { Fragment, Suspense, defineComponent, h, inject, nextTick, onBeforeUnmount, ref, watch } from "vue";
 import { RouterView } from "vue-router";
 import { defu } from "defu";
 import { generateRouteKey, toArray, wrapInKeepAlive } from "./utils.js";
-import { RouteProvider } from "#app/components/route-provider";
+import { RouteProvider, defineRouteProvider } from "#app/components/route-provider";
 import { useNuxtApp } from "#app/nuxt";
 import { useRouter } from "#app/composables/router";
-import { _wrapIf } from "#app/components/utils";
+import { _wrapInTransition } from "#app/components/utils";
 import { LayoutMetaSymbol, PageRouteSymbol } from "#app/components/injections";
 import { appKeepalive as defaultKeepaliveConfig, appPageTransition as defaultPageTransition } from "#build/nuxt.config.mjs";
+const _routeProviders = import.meta.dev ? /* @__PURE__ */ new Map() : /* @__PURE__ */ new WeakMap();
 export default defineComponent({
   name: "NuxtPage",
   inheritAttrs: false,
@@ -44,7 +45,7 @@ export default defineComponent({
       const removeErrorHook = nuxtApp.hooks.hookOnce("app:error", done);
       useRouter().beforeEach(removeErrorHook);
     }
-    if (props.pageKey) {
+    if (import.meta.client && props.pageKey) {
       watch(() => props.pageKey, (next, prev) => {
         if (next !== prev) {
           nuxtApp.callHook("page:loading:start");
@@ -54,30 +55,53 @@ export default defineComponent({
     if (import.meta.dev) {
       nuxtApp._isNuxtPageUsed = true;
     }
+    let pageLoadingEndHookAlreadyCalled = false;
+    if (import.meta.client) {
+      const unsub = useRouter().beforeResolve(() => {
+        pageLoadingEndHookAlreadyCalled = false;
+      });
+      onBeforeUnmount(() => {
+        unsub();
+      });
+    }
     return () => {
       return h(RouterView, { name: props.name, route: props.route, ...attrs }, {
-        default: (routeProps) => {
-          const isRenderingNewRouteInOldFork = import.meta.client && haveParentRoutesRendered(forkRoute, routeProps.route, routeProps.Component);
-          const hasSameChildren = import.meta.client && forkRoute && forkRoute.matched.length === routeProps.route.matched.length;
+        default: import.meta.server ? (routeProps) => {
+          return h(Suspense, { suspensible: true }, {
+            default() {
+              return h(RouteProvider, {
+                vnode: slots.default ? normalizeSlot(slots.default, routeProps) : routeProps.Component,
+                route: routeProps.route,
+                vnodeRef: pageRef
+              });
+            }
+          });
+        } : (routeProps) => {
+          const isRenderingNewRouteInOldFork = haveParentRoutesRendered(forkRoute, routeProps.route, routeProps.Component);
+          const hasSameChildren = forkRoute && forkRoute.matched.length === routeProps.route.matched.length;
           if (!routeProps.Component) {
-            if (import.meta.client && vnode && !hasSameChildren) {
+            if (vnode && !hasSameChildren) {
               return vnode;
             }
             done();
             return;
           }
-          if (import.meta.client && vnode && _layoutMeta && !_layoutMeta.isCurrent(routeProps.route)) {
+          if (vnode && _layoutMeta && !_layoutMeta.isCurrent(routeProps.route)) {
             return vnode;
           }
-          if (import.meta.client && isRenderingNewRouteInOldFork && forkRoute && (!_layoutMeta || _layoutMeta?.isCurrent(forkRoute))) {
+          if (isRenderingNewRouteInOldFork && forkRoute && (!_layoutMeta || _layoutMeta?.isCurrent(forkRoute))) {
             if (hasSameChildren) {
               return vnode;
             }
             return null;
           }
           const key = generateRouteKey(routeProps, props.pageKey);
-          if (!nuxtApp.isHydrating && !hasChildrenRoutes(forkRoute, routeProps.route, routeProps.Component) && previousPageKey === key) {
-            nuxtApp.callHook("page:loading:end");
+          const willRenderAnotherChild = hasChildrenRoutes(forkRoute, routeProps.route, routeProps.Component);
+          if (!nuxtApp.isHydrating && previousPageKey === key && !willRenderAnotherChild) {
+            nextTick(() => {
+              pageLoadingEndHookAlreadyCalled = true;
+              nuxtApp.callHook("page:loading:end");
+            });
           }
           previousPageKey = key;
           const hasTransition = !!(props.transition ?? routeProps.route.meta.pageTransition ?? defaultPageTransition);
@@ -85,36 +109,55 @@ export default defineComponent({
             props.transition,
             routeProps.route.meta.pageTransition,
             defaultPageTransition,
-            { onAfterLeave: () => {
-              nuxtApp.callHook("page:transition:finish", routeProps.Component);
-            } }
-          ].filter(Boolean));
+            {
+              onAfterLeave() {
+                delete nuxtApp._runningTransition;
+                nuxtApp.callHook("page:transition:finish", routeProps.Component);
+              }
+            }
+          ]);
           const keepaliveConfig = props.keepalive ?? routeProps.route.meta.keepalive ?? defaultKeepaliveConfig;
-          vnode = _wrapIf(
-            Transition,
+          vnode = _wrapInTransition(
             hasTransition && transitionProps,
             wrapInKeepAlive(
               keepaliveConfig,
               h(Suspense, {
                 suspensible: true,
-                onPending: () => nuxtApp.callHook("page:start", routeProps.Component),
+                onPending: () => {
+                  if (hasTransition) {
+                    nuxtApp._runningTransition = true;
+                  }
+                  nuxtApp.callHook("page:start", routeProps.Component);
+                },
                 onResolve: () => {
-                  nextTick(() => nuxtApp.callHook("page:finish", routeProps.Component).then(() => nuxtApp.callHook("page:loading:end")).finally(done));
+                  nextTick(() => nuxtApp.callHook("page:finish", routeProps.Component).then(() => {
+                    if (!pageLoadingEndHookAlreadyCalled && !willRenderAnotherChild) {
+                      pageLoadingEndHookAlreadyCalled = true;
+                      return nuxtApp.callHook("page:loading:end");
+                    }
+                  }).finally(done));
                 }
               }, {
                 default: () => {
-                  const providerVNode = h(RouteProvider, {
+                  const routeProviderProps = {
                     key: key || void 0,
-                    vnode: slots.default ? h(Fragment, void 0, slots.default(routeProps)) : routeProps.Component,
+                    vnode: slots.default ? normalizeSlot(slots.default, routeProps) : routeProps.Component,
                     route: routeProps.route,
                     renderKey: key || void 0,
                     trackRootNodes: hasTransition,
                     vnodeRef: pageRef
-                  });
-                  if (import.meta.client && keepaliveConfig) {
-                    providerVNode.type.name = routeProps.Component.type.name || routeProps.Component.type.__name || "RouteProvider";
+                  };
+                  if (!keepaliveConfig) {
+                    return h(RouteProvider, routeProviderProps);
                   }
-                  return providerVNode;
+                  const routerComponentType = routeProps.Component.type;
+                  const routeProviderKey = import.meta.dev ? routerComponentType.name || routerComponentType.__name : routerComponentType;
+                  let PageRouteProvider = _routeProviders.get(routeProviderKey);
+                  if (!PageRouteProvider) {
+                    PageRouteProvider = defineRouteProvider(routerComponentType.name || routerComponentType.__name);
+                    _routeProviders.set(routeProviderKey, PageRouteProvider);
+                  }
+                  return h(PageRouteProvider, routeProviderProps);
                 }
               })
             )
@@ -126,7 +169,7 @@ export default defineComponent({
   }
 });
 function _mergeTransitionProps(routeProps) {
-  const _props = routeProps.map((prop) => ({
+  const _props = routeProps.filter(Boolean).map((prop) => ({
     ...prop,
     onAfterLeave: prop.onAfterLeave ? toArray(prop.onAfterLeave) : void 0
   }));
@@ -151,3 +194,7 @@ function hasChildrenRoutes(fork, newRoute, Component) {
   const index = newRoute.matched.findIndex((m) => m.components?.default === Component?.type);
   return index < newRoute.matched.length - 1;
 }
+function normalizeSlot(slot, data) {
+  const slotContent = slot(data);
+  return slotContent.length === 1 ? h(slotContent[0]) : h(Fragment, void 0, slotContent);
+}
diff --git a/node_modules/nuxt/dist/pages/runtime/plugins/prefetch.client.js b/node_modules/nuxt/dist/pages/runtime/plugins/prefetch.client.js
index 693243e..56760b2 100644
--- a/node_modules/nuxt/dist/pages/runtime/plugins/prefetch.client.js
+++ b/node_modules/nuxt/dist/pages/runtime/plugins/prefetch.client.js
@@ -4,6 +4,7 @@ import { defineNuxtPlugin } from "#app/nuxt";
 import { useRouter } from "#app/composables/router";
 import layouts from "#build/layouts";
 import { namedMiddleware } from "#build/middleware";
+import { _loadAsyncComponent } from "#app/composables/preload";
 export default defineNuxtPlugin({
   name: "nuxt:prefetch",
   setup(nuxtApp) {
@@ -32,8 +33,8 @@ export default defineNuxtPlugin({
           namedMiddleware[name]();
         }
       }
-      if (layout && typeof layouts[layout] === "function") {
-        layouts[layout]();
+      if (typeof layout === "string" && layout in layouts) {
+        _loadAsyncComponent(layouts[layout]);
       }
     });
   }
diff --git a/node_modules/nuxt/dist/pages/runtime/plugins/prerender.server.js b/node_modules/nuxt/dist/pages/runtime/plugins/prerender.server.js
index fa09197..e4d7ca4 100644
--- a/node_modules/nuxt/dist/pages/runtime/plugins/prerender.server.js
+++ b/node_modules/nuxt/dist/pages/runtime/plugins/prerender.server.js
@@ -4,12 +4,12 @@ import defu from "defu";
 import { defineNuxtPlugin, useRuntimeConfig } from "#app/nuxt";
 import { prerenderRoutes } from "#app/composables/ssr";
 import _routes from "#build/routes";
-import routerOptions from "#build/router.options";
+import routerOptions, { hashMode } from "#build/router.options";
 import { crawlLinks } from "#build/nuxt.config.mjs";
 let routes;
 let _routeRulesMatcher = void 0;
 export default defineNuxtPlugin(async () => {
-  if (!import.meta.server || !import.meta.prerender || routerOptions.hashMode) {
+  if (!import.meta.server || !import.meta.prerender || hashMode) {
     return;
   }
   if (routes && !routes.length) {
diff --git a/node_modules/nuxt/dist/pages/runtime/plugins/router.d.ts b/node_modules/nuxt/dist/pages/runtime/plugins/router.d.ts
index 90db941..5d42489 100644
--- a/node_modules/nuxt/dist/pages/runtime/plugins/router.d.ts
+++ b/node_modules/nuxt/dist/pages/runtime/plugins/router.d.ts
@@ -1,5 +1,5 @@
 import type { Router } from 'vue-router';
-import type { Plugin } from '#app';
+import type { Plugin } from 'nuxt/app';
 declare const plugin: Plugin<{
     router: Router;
 }>;
diff --git a/node_modules/nuxt/dist/pages/runtime/plugins/router.js b/node_modules/nuxt/dist/pages/runtime/plugins/router.js
index 7165fff..7c61c69 100644
--- a/node_modules/nuxt/dist/pages/runtime/plugins/router.js
+++ b/node_modules/nuxt/dist/pages/runtime/plugins/router.js
@@ -1,15 +1,14 @@
 import { isReadonly, reactive, shallowReactive, shallowRef } from "vue";
 import { START_LOCATION, createMemoryHistory, createRouter, createWebHashHistory, createWebHistory } from "vue-router";
-import { createError } from "h3";
-import { isEqual, withoutBase } from "ufo";
+import { isSamePath, withoutBase } from "ufo";
 import { toArray } from "../utils.js";
 import { getRouteRules } from "#app/composables/manifest";
 import { defineNuxtPlugin, useRuntimeConfig } from "#app/nuxt";
-import { clearError, showError, useError } from "#app/composables/error";
+import { clearError, createError, isNuxtError, showError, useError } from "#app/composables/error";
 import { navigateTo } from "#app/composables/router";
 import { appManifest as isAppManifestEnabled } from "#build/nuxt.config.mjs";
-import _routes from "#build/routes";
-import routerOptions from "#build/router.options";
+import _routes, { handleHotUpdate } from "#build/routes";
+import routerOptions, { hashMode } from "#build/router.options";
 import { globalMiddleware, namedMiddleware } from "#build/middleware";
 function createCurrentLocation(base, location, renderedPath) {
   const { pathname, search, hash } = location;
@@ -23,7 +22,7 @@ function createCurrentLocation(base, location, renderedPath) {
     return withoutBase(pathFromHash, "");
   }
   const displayedPath = withoutBase(pathname, base);
-  const path = !renderedPath || isEqual(displayedPath, renderedPath, { trailingSlash: true }) ? displayedPath : renderedPath;
+  const path = !renderedPath || isSamePath(displayedPath, renderedPath) ? displayedPath : renderedPath;
   return path + (path.includes("?") ? "" : search) + hash;
 }
 const plugin = defineNuxtPlugin({
@@ -31,10 +30,10 @@ const plugin = defineNuxtPlugin({
   enforce: "pre",
   async setup(nuxtApp) {
     let routerBase = useRuntimeConfig().app.baseURL;
-    if (routerOptions.hashMode && !routerBase.includes("#")) {
+    if (hashMode && !routerBase.includes("#")) {
       routerBase += "#";
     }
-    const history = routerOptions.history?.(routerBase) ?? (import.meta.client ? routerOptions.hashMode ? createWebHashHistory(routerBase) : createWebHistory(routerBase) : createMemoryHistory(routerBase));
+    const history = routerOptions.history?.(routerBase) ?? (import.meta.client ? hashMode ? createWebHashHistory(routerBase) : createWebHistory(routerBase) : createMemoryHistory(routerBase));
     const routes = routerOptions.routes ? await routerOptions.routes(_routes) ?? _routes : _routes;
     let startPosition;
     const router = createRouter({
@@ -58,6 +57,9 @@ const plugin = defineNuxtPlugin({
       history,
       routes
     });
+    if (import.meta.hot) {
+      handleHotUpdate(router, routerOptions.routes ? routerOptions.routes : (routes2) => routes2);
+    }
     if (import.meta.client && "scrollRestoration" in window.history) {
       window.history.scrollRestoration = "auto";
     }
@@ -88,7 +90,7 @@ const plugin = defineNuxtPlugin({
       });
     }
     nuxtApp._route = shallowReactive(route);
-    nuxtApp._middleware = nuxtApp._middleware || {
+    nuxtApp._middleware ||= {
       global: [],
       named: {}
     };
@@ -143,7 +145,7 @@ const plugin = defineNuxtPlugin({
           }
         }
         if (isAppManifestEnabled) {
-          const routeRules = await nuxtApp.runWithContext(() => getRouteRules(to.path));
+          const routeRules = await nuxtApp.runWithContext(() => getRouteRules({ path: to.path }));
           if (routeRules.appMiddleware) {
             for (const key in routeRules.appMiddleware) {
               if (routeRules.appMiddleware[key]) {
@@ -162,22 +164,36 @@ const plugin = defineNuxtPlugin({
             }
             throw new Error(`Unknown route middleware: '${entry}'.`);
           }
-          const result = await nuxtApp.runWithContext(() => middleware(to, from));
-          if (import.meta.server || !nuxtApp.payload.serverRendered && nuxtApp.isHydrating) {
-            if (result === false || result instanceof Error) {
-              const error2 = result || createError({
-                statusCode: 404,
-                statusMessage: `Page Not Found: ${initialURL}`
-              });
+          try {
+            const result = await nuxtApp.runWithContext(() => middleware(to, from));
+            if (import.meta.server || !nuxtApp.payload.serverRendered && nuxtApp.isHydrating) {
+              if (result === false || result instanceof Error) {
+                const error2 = result || createError({
+                  statusCode: 404,
+                  statusMessage: `Page Not Found: ${initialURL}`
+                });
+                await nuxtApp.runWithContext(() => showError(error2));
+                return false;
+              }
+            }
+            if (result === true) {
+              continue;
+            }
+            if (result === false) {
+              return result;
+            }
+            if (result) {
+              if (isNuxtError(result) && result.fatal) {
+                await nuxtApp.runWithContext(() => showError(result));
+              }
+              return result;
+            }
+          } catch (err) {
+            const error2 = createError(err);
+            if (error2.fatal) {
               await nuxtApp.runWithContext(() => showError(error2));
-              return false;
             }
-          }
-          if (result === true) {
-            continue;
-          }
-          if (result || result === false) {
-            return result;
+            return error2;
           }
         }
       }
diff --git a/node_modules/nuxt/dist/pages/runtime/router.options.js b/node_modules/nuxt/dist/pages/runtime/router.options.js
index 4ee991d..9614b57 100644
--- a/node_modules/nuxt/dist/pages/runtime/router.options.js
+++ b/node_modules/nuxt/dist/pages/runtime/router.options.js
@@ -1,34 +1,32 @@
+import { START_LOCATION } from "vue-router";
 import { useNuxtApp } from "#app/nuxt";
 import { isChangingPage } from "#app/components/utils";
 import { useRouter } from "#app/composables/router";
-import { appPageTransition as defaultPageTransition } from "#build/nuxt.config.mjs";
 export default {
   scrollBehavior(to, from, savedPosition) {
     const nuxtApp = useNuxtApp();
-    const behavior = useRouter().options?.scrollBehaviorType ?? "auto";
-    let position = savedPosition || void 0;
-    const routeAllowsScrollToTop = typeof to.meta.scrollToTop === "function" ? to.meta.scrollToTop(to, from) : to.meta.scrollToTop;
-    if (!position && from && to && routeAllowsScrollToTop !== false && isChangingPage(to, from)) {
-      position = { left: 0, top: 0 };
-    }
+    const hashScrollBehaviour = useRouter().options?.scrollBehaviorType ?? "auto";
     if (to.path === from.path) {
       if (from.hash && !to.hash) {
         return { left: 0, top: 0 };
       }
       if (to.hash) {
-        return { el: to.hash, top: _getHashElementScrollMarginTop(to.hash), behavior };
+        return { el: to.hash, top: _getHashElementScrollMarginTop(to.hash), behavior: hashScrollBehaviour };
       }
       return false;
     }
-    const hasTransition = (route) => !!(route.meta.pageTransition ?? defaultPageTransition);
-    const hookToWait = hasTransition(from) && hasTransition(to) ? "page:transition:finish" : "page:finish";
+    const routeAllowsScrollToTop = typeof to.meta.scrollToTop === "function" ? to.meta.scrollToTop(to, from) : to.meta.scrollToTop;
+    if (routeAllowsScrollToTop === false) {
+      return false;
+    }
+    const hookToWait = nuxtApp._runningTransition ? "page:transition:finish" : "page:loading:end";
     return new Promise((resolve) => {
-      nuxtApp.hooks.hookOnce(hookToWait, async () => {
-        await new Promise((resolve2) => setTimeout(resolve2, 0));
-        if (to.hash) {
-          position = { el: to.hash, top: _getHashElementScrollMarginTop(to.hash), behavior };
-        }
-        resolve(position);
+      if (from === START_LOCATION) {
+        resolve(_calculatePosition(to, from, savedPosition, hashScrollBehaviour));
+        return;
+      }
+      nuxtApp.hooks.hookOnce(hookToWait, () => {
+        requestAnimationFrame(() => resolve(_calculatePosition(to, from, savedPosition, hashScrollBehaviour)));
       });
     });
   }
@@ -43,3 +41,20 @@ function _getHashElementScrollMarginTop(selector) {
   }
   return 0;
 }
+function _calculatePosition(to, from, savedPosition, defaultHashScrollBehaviour) {
+  if (savedPosition) {
+    return savedPosition;
+  }
+  const isPageNavigation = isChangingPage(to, from);
+  if (to.hash) {
+    return {
+      el: to.hash,
+      top: _getHashElementScrollMarginTop(to.hash),
+      behavior: isPageNavigation ? defaultHashScrollBehaviour : "instant"
+    };
+  }
+  return {
+    left: 0,
+    top: 0
+  };
+}
diff --git a/node_modules/nuxt/dist/pages/runtime/validate.js b/node_modules/nuxt/dist/pages/runtime/validate.js
index 6d5d78b..1421e9c 100644
--- a/node_modules/nuxt/dist/pages/runtime/validate.js
+++ b/node_modules/nuxt/dist/pages/runtime/validate.js
@@ -1,32 +1,23 @@
-import { createError, showError } from "#app/composables/error";
-import { useNuxtApp } from "#app/nuxt";
-import { defineNuxtRouteMiddleware, useRouter } from "#app/composables/router";
-export default defineNuxtRouteMiddleware(async (to) => {
+import { createError } from "#app/composables/error";
+import { defineNuxtRouteMiddleware } from "#app/composables/router";
+export default defineNuxtRouteMiddleware(async (to, from) => {
   if (!to.meta?.validate) {
     return;
   }
-  const nuxtApp = useNuxtApp();
-  const router = useRouter();
   const result = await Promise.resolve(to.meta.validate(to));
   if (result === true) {
     return;
   }
   const error = createError({
+    fatal: import.meta.client,
     statusCode: result && result.statusCode || 404,
     statusMessage: result && result.statusMessage || `Page Not Found: ${to.fullPath}`,
     data: {
       path: to.fullPath
     }
   });
-  const unsub = router.beforeResolve((final) => {
-    unsub();
-    if (final === to) {
-      const unsub2 = router.afterEach(async () => {
-        unsub2();
-        await nuxtApp.runWithContext(() => showError(error));
-        window?.history.pushState({}, "", to.fullPath);
-      });
-      return false;
-    }
-  });
+  if (typeof window !== "undefined") {
+    window.history.pushState({}, "", from.fullPath);
+  }
+  return error;
 });
diff --git a/node_modules/nuxt/types.d.mts b/node_modules/nuxt/types.d.mts
index 5d66ca0..03396fa 100644
--- a/node_modules/nuxt/types.d.mts
+++ b/node_modules/nuxt/types.d.mts
@@ -1,11 +1,11 @@
 /// <reference types="nitropack" />
 /// <reference path="dist/app/types/augments.d.ts" />
 
-import type { DefineNuxtConfig } from 'nuxt/config'
-import type { RuntimeConfig, SchemaDefinition } from 'nuxt/schema'
 import type { H3Event } from 'h3'
 import type { LogObject } from 'consola'
 import type { NuxtIslandContext, NuxtIslandResponse, NuxtRenderHTMLContext } from './dist/app/types.js'
+import type { RuntimeConfig, SchemaDefinition } from 'nuxt/schema'
+import type { DefineNuxtConfig } from 'nuxt/config'
 
 export * from './dist/index.js'
 
@@ -24,10 +24,14 @@ declare module 'nitropack' {
   interface NitroRuntimeConfig extends RuntimeConfig {}
   interface NitroRouteConfig {
     ssr?: boolean
+    noScripts?: boolean
+    /** @deprecated Use `noScripts` instead */
     experimentalNoScripts?: boolean
   }
   interface NitroRouteRules {
     ssr?: boolean
+    noScripts?: boolean
+    /** @deprecated Use `noScripts` instead */
     experimentalNoScripts?: boolean
     appMiddleware?: Record<string, boolean>
   }
diff --git a/node_modules/nuxt/types.d.ts b/node_modules/nuxt/types.d.ts
index 745ff04..51c305b 100644
--- a/node_modules/nuxt/types.d.ts
+++ b/node_modules/nuxt/types.d.ts
@@ -1,11 +1,11 @@
 /// <reference types="nitropack" />
 /// <reference path="dist/app/types/augments.d.ts" />
 
-import type { DefineNuxtConfig } from 'nuxt/config'
-import type { RuntimeConfig, SchemaDefinition } from 'nuxt/schema'
 import type { H3Event } from 'h3'
 import type { LogObject } from 'consola'
 import type { NuxtIslandContext, NuxtIslandResponse, NuxtRenderHTMLContext } from './dist/app/types'
+import type { RuntimeConfig, SchemaDefinition } from 'nuxt/schema'
+import type { DefineNuxtConfig } from 'nuxt/config'
 
 export * from './dist/index'
 
@@ -24,10 +24,14 @@ declare module 'nitropack' {
   interface NitroRuntimeConfig extends RuntimeConfig {}
   interface NitroRouteConfig {
     ssr?: boolean
+    noScripts?: boolean
+    /** @deprecated Use `noScripts` instead */
     experimentalNoScripts?: boolean
   }
   interface NitroRouteRules {
     ssr?: boolean
+    noScripts?: boolean
+    /** @deprecated Use `noScripts` instead */
     experimentalNoScripts?: boolean
     appMiddleware?: Record<string, boolean>
   }
