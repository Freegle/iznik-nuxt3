version: 2.1

orbs:
  android: circleci/android@2.3.0

executors:
  android-executor:
    docker:
      - image: cimg/android:2024.01.1-node
    resource_class: large

commands:
  setup-nodejs:
    steps:
      - run:
          name: Install Node.js 20
          command: |
            # Install nvm
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

            # Install and use Node.js 20
            nvm install 20
            nvm use 20
            nvm alias default 20

            # Verify versions
            node --version
            npm --version

  setup-android-fastlane:
    steps:
      - run:
          name: Install Ruby and Bundler
          command: |
            sudo apt-get update
            sudo apt-get install -y ruby-full
            sudo gem install bundler
      - run:
          name: Install Fastlane
          command: |
            bundle config set --local path 'vendor/bundle'
            bundle install
      - run:
          name: Decode Google Play JSON Key
          command: |
            echo $GOOGLE_PLAY_JSON_KEY | base64 -d > fastlane/google-play-api-key.json

jobs:
  build-android:
    executor: android-executor
    steps:
      - checkout

      # Setup Node.js 20
      - setup-nodejs

      # Restore npm cache
      - restore_cache:
          keys:
            - npm-deps-v1-{{ checksum "package-lock.json" }}
            - npm-deps-v1-

      # Install Node.js dependencies
      - run:
          name: Install Node.js Dependencies
          command: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use 20
            npm ci

      - save_cache:
          key: npm-deps-v1-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

      # Build Nuxt app for production
      - run:
          name: Build Nuxt App
          command: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use 20
            export ISAPP=true
            export APP_ENV=production
            npm run generate

      # Sync Capacitor
      - run:
          name: Sync Capacitor to Android
          command: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use 20
            npx cap sync android

      # Restore Fastlane bundle cache
      - restore_cache:
          keys:
            - bundle-v1-{{ checksum "Gemfile.lock" }}
            - bundle-v1-

      # Setup Fastlane
      - setup-android-fastlane

      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Build and Deploy to Internal Track
      - run:
          name: Build and Deploy to Google Play Internal Track
          command: bundle exec fastlane android internal

      # Store build artifacts
      - store_artifacts:
          path: android/app/build/outputs/bundle/release/
          destination: android-bundle

workflows:
  version: 2

  deploy-android-app:
    jobs:
      - build-android:
          filters:
            branches:
              only:
                - app-ci-fd
